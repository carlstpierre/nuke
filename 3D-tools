set cut_paste_input [stack 0]
version 11.3 v6
push $cut_paste_input
Group {
 name ChromaAB_TURANDOT7
 tile_color 0xdf3aeaff
 note_font_color 0xffffffff
 selected true
 xpos 4046
 ypos 446
 addUserKnob {20 chromaABTurandot l "Chromatic AB Turandot"}
 addUserKnob {12 center l Center}
 center {1056 884}
 addUserKnob {26 ""}
 addUserKnob {18 transformx l "Transform X" R -2 2}
 transformx {0 -0.1 -0.1}
 addUserKnob {6 transformx_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 transformx_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 transformx_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 transformY l "Transform Y" R -2 2}
 transformY {0 0 0}
 addUserKnob {6 transformY_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 transformY_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 transformY_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 scale l Scale R -0.1 0.1}
 scale {0.0002 0.0004 0.0007}
 addUserKnob {6 scale_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 scale_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 scale_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 defocus l Defocus}
 defocus {0 0 0}
 addUserKnob {6 defocus_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 defocus_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 defocus_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 ""}
 addUserKnob {68 mode l Mode M {"Remove Aberration" "Add Aberration"}}
 mode "Add Aberration"
 addUserKnob {26 text l "" +STARTLINE T "\n1- Connect the gizmo to the plate\nand set the mode to Remove Aberration.\n\n2- Tweak the values until most of the\naberration is removed. (don't touch the defocus)\n\n3 - Set the mode back to Add Aberration\nand connect the gizmo to your CG\n\nDON'T premult/unpremult after this node!\n\n"}
}
 Input {
  inputs 0
  name Input1
  xpos 70
  ypos 128
 }
 Dot {
  name Dot23
  xpos 104
  ypos 210
 }
set Nc74f3cf0 [stack 0]
 Shuffle {
  red black
  green black
  alpha black
  name Shuffle13
  tile_color 0x7fff
  label "\[value in]"
  xpos 290
  ypos 344
 }
 TransformMasked {
  channels {-rgba.red -rgba.green rgba.blue none}
  translate {{parent.transformx.b} {parent.transformY.b}}
  scale {{1+parent.scale.b}}
  center {{parent.center} {parent.center}}
  invert_matrix {{parent.mode}}
  black_outside false
  shutteroffset centred
  name Transform3
  xpos 290
  ypos 422
 }
 Defocus {
  channels {-rgba.red -rgba.green rgba.blue none}
  defocus {{parent.defocus.b}}
  name Defocus3
  xpos 290
  ypos 518
 }
push 0
push $Nc74f3cf0
 Shuffle {
  green black
  blue black
  alpha black
  name Shuffle11
  tile_color 0x7f0000ff
  label "\[value in]"
  xpos -150
  ypos 344
 }
 TransformMasked {
  channels {rgba.red -rgba.green -rgba.blue none}
  translate {{parent.transformx.r} {parent.transformY.r}}
  scale {{1+parent.scale.r}}
  center {{parent.center} {parent.center}}
  invert_matrix {{parent.mode}}
  black_outside false
  shutteroffset centred
  name Transform1
  xpos -150
  ypos 422
 }
 Defocus {
  channels {rgba.red -rgba.green -rgba.blue none}
  defocus {{parent.defocus.r}}
  name Defocus1
  xpos -150
  ypos 494
 }
push $Nc74f3cf0
 Shuffle {
  red black
  blue black
  alpha black
  name Shuffle12
  tile_color 0x7f00ff
  label "\[value in]"
  xpos 70
  ypos 344
 }
 TransformMasked {
  channels {-rgba.red rgba.green -rgba.blue none}
  translate {{parent.transformx.g} {parent.transformY.g}}
  scale {{1+parent.scale.g}}
  center {{parent.center} {parent.center}}
  invert_matrix {{parent.mode}}
  black_outside false
  shutteroffset centred
  name Transform2
  xpos 70
  ypos 422
 }
 Defocus {
  channels {-rgba.red rgba.green -rgba.blue none}
  defocus {{parent.defocus.g}}
  name Defocus2
  xpos 70
  ypos 494
 }
 Merge2 {
  inputs 3+1
  operation plus
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  name Merge11
  xpos 70
  ypos 614
 }
push $Nc74f3cf0
 Dot {
  name Dot1
  xpos 434
  ypos 210
 }
 Dot {
  name Dot2
  xpos 434
  ypos 690
 }
 ShuffleCopy {
  inputs 2
  red red
  green green
  blue blue
  out rgb
  name ShuffleCopy1
  label "\[value out]"
  xpos 70
  ypos 680
 }
push $Nc74f3cf0
 Dot {
  name Dot27
  xpos -336
  ypos 210
 }
 Dot {
  name Dot26
  xpos -336
  ypos 762
 }
 Dissolve {
  inputs 2
  channels rgba
  which 1
  name Dissolve1
  xpos 70
  ypos 758
 }
 Output {
  name Output1
  xpos 70
  ypos 806
 }
end_group
push $cut_paste_input
Group {
 name Cam_Normals
 selected true
 xpos 4053
 ypos 509
 addUserKnob {20 User l "Camera Normals"}
 addUserKnob {41 in l "Normals Channels" T Shuffle9.in}
 addUserKnob {26 facingratio l "Facing Ratio"}
 addUserKnob {6 FacingRatio l "Output Facing Ratio only" +STARTLINE}
 FacingRatio true
 addUserKnob {41 multiply T Grade18.multiply}
 addUserKnob {41 gamma T Grade18.gamma}
 addUserKnob {6 invert l Invert +STARTLINE}
}
 Input {
  inputs 0
  name Normals
  xpos 311
  ypos 357
 }
 Shuffle {
  in none
  name Shuffle9
  label "\[value in]"
  xpos 311
  ypos 485
 }
 ColorMatrix {
  matrix {
      {{parent.Axis5.world_matrix.0} {parent.Axis5.world_matrix.4} {parent.Axis5.world_matrix.8}}
      {{parent.Axis5.world_matrix.1} {parent.Axis5.world_matrix.5} {parent.Axis5.world_matrix.9}}
      {{parent.Axis5.world_matrix.2} {parent.Axis5.world_matrix.6} {parent.Axis5.world_matrix.10}}
    }
  name ColorMatrix2
  xpos 311
  ypos 532
 }
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle8
  xpos 311
  ypos 568
  disable {{parent.FacingRatio-1}}
 }
 Invert {
  channels rgb
  maskChannelInput rgba.alpha
  name Invert1
  xpos 314
  ypos 600
  disable {{parent.invert-1}}
 }
 Grade {
  white_clamp true
  name Grade18
  xpos 311
  ypos 664
  disable {{parent.FacingRatio-1}}
 }
 Output {
  name Output1
  xpos 311
  ypos 766
 }
 Input {
  inputs 0
  name Cam
  xpos 575
  ypos 527
  number 1
 }
 Axis2 {
  name Axis5
  xpos 441
  ypos 513
 }
end_group
push $cut_paste_input
add_layer {N N.X N.Y N.Z N.red N.green N.blue N.x N.y N.z N.alpha N.other}
add_layer {P P.red P.green P.blue P.alpha P.x P.y P.z P.R P.G P.B N.red N.green N.blue P.X P.Y P.Z}
Group {
 name FacingRatioDV
 help "Takes normal and position passes to generate a point light in 3d space.\nLight input can be any node containing 3d position info (like an Axis or a Light node).\nYou can then control the position of the Point light by either tweaking that node in the 3d viewer or through its properties panel."
 selected true
 xpos 4046
 ypos 580
 addUserKnob {20 FacingRatio}
 addUserKnob {41 in l "normal input" t "Select the layer containing normals information from your norm. input" T Shuffle_Norm.in}
 addUserKnob {41 in_1 l "position input" t "Select the layer containing position information from your pos. input" T Shuffle_Pos.in}
 addUserKnob {26 ""}
 addUserKnob {26 a l "" +STARTLINE T "Facing Ratio channel is in alpha. RGB is inverted ratio.\nDaniel V.  2018"}
}
 Input {
  inputs 0
  name P
  xpos -316
  ypos -394
  number 1
 }
add_layer {Pos Pos.x Pos.y Pos.z}
 Shuffle {
  in {P.red P.green P.blue P.alpha}
  out Pos
  name Shuffle_Pos
  xpos -316
  ypos -209
 }
 Input {
  inputs 0
  name N
  xpos -171
  ypos -391
  number 2
 }
add_layer {Normal Normal.x Normal.y Normal.z}
 Shuffle {
  in {-N.X -N.Y -N.Z N.red}
  out Normal
  name Shuffle_Norm
  xpos -171
  ypos -273
 }
 Copy {
  inputs 2
  from0 Pos.x
  to0 Pos.x
  from1 Pos.y
  to1 Pos.y
  from2 Pos.z
  to2 Pos.z
  name Copy1
  xpos -171
  ypos -227
 }
 Expression {
  temp_name0 vx
  temp_expr0 "(lightPos.x-Pos.x)/sqrt( pow2(lightPos.x-Pos.x) + pow2(lightPos.y-Pos.y) + pow2(lightPos.z-Pos.z))"
  temp_name1 vy
  temp_expr1 "(lightPos.y-Pos.y)/sqrt( pow2(lightPos.x-Pos.x) + pow2(lightPos.y-Pos.y) + pow2(lightPos.z-Pos.z))"
  temp_name2 vz
  temp_expr2 "(lightPos.z-Pos.z)/sqrt( pow2(lightPos.x-Pos.x) + pow2(lightPos.y-Pos.y) + pow2(lightPos.z-Pos.z))"
  channel0 {-rgba.red -rgba.green -rgba.blue none}
  channel1 {-rgba.red -rgba.green -rgba.blue none}
  channel2 {-rgba.red -rgba.green -rgba.blue none}
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 "(Normal.x*vx + Normal.y*vy + Normal.z*vz)"
  name Expression
  xpos -171
  ypos -137
  addUserKnob {20 User}
  addUserKnob {13 lightPos}
  lightPos {{parent.Cam.position} {parent.Cam.position} {parent.Cam.position}}
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  xpos -171
  ypos -101
 }
 Expression {
  channel0 rgb
  expr0 1.0-a
  channel1 none
  channel2 none
  channel3 none
  name Expression1
  selected true
  xpos -171
  ypos -59
 }
 Output {
  name Output1
  xpos -171
  ypos 240
 }
 Input {
  inputs 0
  name Cam
  xpos -583
  ypos -71
  addUserKnob {20 User}
  addUserKnob {13 position}
  position {{input.translate} {input.translate} {input.translate}}
 }
end_group
push $cut_paste_input
Group {
 name Mask3Dv
 help "Creates a mask based on a point position pass."
 note_font Verdana
 selected true
 xpos 4040
 ypos 655
 mapsize {0.15 0.15}
 addUserKnob {20 Mask3Dv5 t "Generates a mask using AOV channels"}
 addUserKnob {12 screen_point l "screen point"}
 addUserKnob {22 set_point l "set point" -STARTLINE T "mask_group = nuke.thisNode()\n\nx_pos = mask_group.knob(\"screen_point\").getValue()\[0]\ny_pos = mask_group.knob(\"screen_point\").getValue()\[1]\n\n\nmask_group.begin()\n\nshuffle_node = nuke.toNode(\"Shuffle1\")\n\nx_value = nuke.sample(shuffle_node, \"r\", x_pos, y_pos)\ny_value = nuke.sample(shuffle_node, \"g\", x_pos, y_pos)\nz_value = nuke.sample(shuffle_node, \"b\", x_pos, y_pos)\n\nmask_group.end()\n\n\nmask_group.knob(\"aov_value\").setValue(\[x_value, y_value, z_value])"}
 addUserKnob {41 aov l AOV T Shuffle1.in}
 addUserKnob {18 aov_value l "AOV value"}
 aov_value {0 0 0}
 addUserKnob {6 aov_value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 aov_value_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 aov_value_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 ""}
 addUserKnob {4 shape M {sphere cube}}
 addUserKnob {13 mask_rotation l rotation}
 addUserKnob {13 mask_scale l scale}
 mask_scale {1 1 1}
 addUserKnob {7 mask_uniscale l "uniform scale" R 0 100}
 mask_uniscale 50
 addUserKnob {26 ""}
 addUserKnob {7 falloff t "soft falloff of the 3D mask" R 0 20}
 falloff 20
 addUserKnob {41 blur T Blur1.size}
 addUserKnob {26 ""}
 addUserKnob {20 Noise n 1}
 addUserKnob {13 fbm_offset l offset}
 addUserKnob {13 fbm_scale l scale}
 fbm_scale {1 1 1}
 addUserKnob {7 fbm_uniscale l "uniform scale" R 0 100}
 fbm_uniscale 10
 addUserKnob {3 fbm_octaves l octaves}
 fbm_octaves 3
 addUserKnob {7 fbm_lacunarity l lacunarity R 0 10}
 fbm_lacunarity 3
 addUserKnob {7 fbm_gain l gain}
 fbm_gain 1
 addUserKnob {41 noise_mix l mix T ChannelMerge1.mix}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {41 mask T Keymix1.maskChannel}
 addUserKnob {41 invertMask l invert -STARTLINE T Keymix1.invertMask}
 addUserKnob {26 ""}
 addUserKnob {41 output_channel l "output channel" -STARTLINE T Copy1.to0}
 addUserKnob {20 info l Info}
 addUserKnob {26 infotext l Info: T "Creates a mask based on a point position pass."}
 addUserKnob {26 author l Author: T "Mark Spindler (since v4)"}
 addUserKnob {26 version l Version: T 5.0}
 addUserKnob {26 date l Date: T 2015/10/28}
}
 Input {
  inputs 0
  name mask
  xpos 1465
  ypos -775
  number 1
 }
 Invert {
  channels rgba
  name Invert1
  xpos 1465
  ypos 850
 }
 Dot {
  name Dot10
  xpos 1499
  ypos 929
 }
 Input {
  inputs 0
  name Input1
  xpos 400
  ypos -768
 }
 Dot {
  name Dot3
  xpos 434
  ypos -679
 }
set N82dfb8b0 [stack 0]
 Shuffle {
  in none
  alpha black
  name Shuffle1
  label "\[value in]"
  xpos 400
  ypos -602
 }
 Dot {
  name Dot5
  xpos 434
  ypos -494
 }
set N82bf0cd0 [stack 0]
 Dot {
  name Dot6
  xpos 1035
  ypos -494
 }
 Expression {
  temp_name0 scaleX
  temp_expr0 "1 / (parent.fbm_scale.x * parent.fbm_uniscale)"
  temp_name1 scaleY
  temp_expr1 "1 / (parent.fbm_scale.y * parent.fbm_uniscale)"
  temp_name2 scaleZ
  temp_expr2 "1 / (parent.fbm_scale.z * parent.fbm_uniscale)"
  expr3 "fBm(r*scaleX+parent.fbm_offset.x, g*scaleY+parent.fbm_offset.y, b*scaleZ+parent.fbm_offset.z, parent.fbm_octaves, parent.fbm_lacunarity, parent.fbm_gain) * 0.5 + 0.5"
  name Expression1
  label Noise
  xpos 1001
  ypos -389
 }
set N82bfa370 [stack 0]
 Dot {
  name Dot4
  xpos 1035
  ypos 387
 }
push $N82bf0cd0
 Add {
  channels rgb
  value {{-parent.aov_value} {-parent.aov_value} {-parent.aov_value} {curve}}
  name Add1
  label "Translate from center to origin"
  xpos 400
  ypos -389
 }
 ColorMatrix {
  matrix {
      {1 {curve} {curve}}
      {{curve} {cos(radians(parent.mask_rotation.x))} {-sin(radians(parent.mask_rotation.x))}}
      {{curve} {sin(radians(parent.mask_rotation.x))} {cos(radians(parent.mask_rotation.x))}}
    }
  name ColorMatrix1
  label x-rotation
  xpos 400
  ypos -328
 }
 ColorMatrix {
  matrix {
      {{cos(radians(parent.mask_rotation.y))} {curve} {sin(radians(parent.mask_rotation.y))}}
      {{curve} 1 {curve}}
      {{-sin(radians(parent.mask_rotation.y))} {curve} {cos(radians(parent.mask_rotation.y))}}
    }
  name ColorMatrix2
  label y-rotation
  xpos 400
  ypos -290
 }
 ColorMatrix {
  matrix {
      {{cos(radians(parent.mask_rotation.z))} {-sin(radians(parent.mask_rotation.z))} {curve}}
      {{sin(radians(parent.mask_rotation.z))} {cos(radians(parent.mask_rotation.z))} {curve}}
      {{curve} {curve} 1}
    }
  name ColorMatrix3
  label z-rotation
  xpos 400
  ypos -252
 }
 Multiply {
  channels rgb
  value {{"1 / (parent.mask_scale * parent.mask_uniscale)"} {"1 / (parent.mask_scale * parent.mask_uniscale)"} {"1 / (parent.mask_scale * parent.mask_uniscale)"} {"1 / (parent.mask_scale * parent.mask_uniscale)"}}
  name Multiply1
  label scale
  xpos 400
  ypos -144
 }
 Dot {
  name Dot7
  xpos 434
  ypos -44
 }
set N825fd320 [stack 0]
 Dot {
  name Dot8
  xpos 643
  ypos -44
 }
 Expression {
  temp_name0 falloff
  temp_expr0 parent.falloff
  expr0 "1 - smoothstep(1, 1 + falloff, abs(r))"
  expr1 "1 - smoothstep(1, 1 + falloff, abs(g))"
  expr2 "1 - smoothstep(1, 1 + falloff, abs(b))"
  name Expression4
  label "cubic mask (RGB)"
  xpos 609
  ypos 12
 }
 Expression {
  expr3 r*g*b
  name Expression2
  label "alpha = R*G*B"
  xpos 609
  ypos 50
 }
 Dot {
  name Dot9
  xpos 643
  ypos 139
 }
push $N825fd320
 Expression {
  temp_name0 dist
  temp_expr0 "sqrt(r*r + g*g + b*b)"
  temp_name1 falloff
  temp_expr1 parent.falloff
  expr3 "1 - smoothstep(1, 1 + falloff, dist)"
  name Expression5
  label "spherical mask"
  xpos 400
  ypos 13
 }
 Switch {
  inputs 2
  which {{parent.shape}}
  name Switch1
  xpos 400
  ypos 135
 }
 Expression {
  expr3 "(parent.mask_scale.x * parent.mask_scale.y * parent.mask_scale.z * parent.mask_uniscale) == 0 ? 0 : a"
  name Expression3
  label "scale = 0 -> black"
  xpos 400
  ypos 181
 }
 ChannelMerge {
  inputs 2
  operation multiply
  name ChannelMerge1
  label "noise mix"
  xpos 400
  ypos 364
 }
 Clamp {
  channels rgba
  name Clamp1
  xpos 400
  ypos 426
 }
 Blur {
  channels rgba
  name Blur1
  xpos 400
  ypos 613
 }
 Dot {
  name Dot11
  xpos 434
  ypos 812
 }
set N81ff4890 [stack 0]
 Dot {
  name Dot12
  xpos 308
  ypos 812
 }
 Multiply {
  channels rgba
  value 0
  name Multiply2
  label "all black"
  xpos 274
  ypos 855
 }
 Dot {
  name Dot13
  xpos 308
  ypos 929
 }
push $N81ff4890
 Keymix {
  inputs 3
  channels rgba
  maskChannel none
  name Keymix1
  label mask
  xpos 400
  ypos 919
 }
push $N82dfb8b0
 Dot {
  name Dot2
  xpos -22
  ypos -679
 }
 Dot {
  name Dot1
  xpos -22
  ypos 1167
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 400
  ypos 1157
 }
 Output {
  name Output1
  xpos 400
  ypos 1277
 }
push $N82bfa370
 Viewer {
  frame_range 1-100
  fps 23.97602463
  name Viewer1
  xpos 1001
  ypos -351
 }
end_group
push $cut_paste_input
Group {
 name GeoTracker
 tile_color 0xcfff00ff
 selected true
 xpos 4038
 ypos 791
 addUserKnob {20 User l GeoTracker}
 addUserKnob {41 first l "Frame Range  " T MassPointMatcher.first}
 addUserKnob {41 last l - -STARTLINE T MassPointMatcher.last}
 addUserKnob {41 g l "      Get Viewer Range     " -STARTLINE T MassPointMatcher.g}
 addUserKnob {26 ""}
 addUserKnob {41 getVerts l INVISIBLE +INVISIBLE T MassPointMatcher.getVerts}
 addUserKnob {41 dotrack l "    Track Selected Points    " T MassPointMatcher.dotrack}
 addUserKnob {26 ""}
 addUserKnob {26 a l INVISIBLE +INVISIBLE T ""}
 addUserKnob {26 about l "" +STARTLINE T "Daniel Velikov  © 2017   ver1.1  \nThank You Ben Dickson for keyframes magic!"}
}
 Input {
  inputs 0
  name geo
  xpos -107
  ypos 148
 }
set Nca2fde00 [stack 0]
 Output {
  name Output1
  xpos -107
  ypos 359
 }
push $Nca2fde00
 FrameHold {
  first_frame 1072
  name FrameHold1
  xpos -5
  ypos 222
  disable true
 }
 PythonGeo {
  inputs 0
  name MassPointMatcher
  onCreate "def getWpoint(geoID,vtxID):\n    n=nuke.thisNode()\n    geo=n\['geo_select'].getGeometry()\[geoID]\n    mtx=geo.transform()\n    mtx.transpose()\n    p=geo.points()\[vtxID]\n    thePoint=nuke.math.Vector4(p.x,p.y,p.z,1.0)\n    thePoint=mtx*thePoint\n\n    return \[thePoint.x,thePoint.y,thePoint.z]\n\n"
  knobChanged "if nuke.GUI:\n    n=nuke.thisNode()\n    k=nuke.thisKnob().name()\n    \n    if k=='seq':\n        sg=nuke_shotgun.getstuff.get_shotlist()\n        curseq=n\['seq'].value()\n        n\['shot'].setValues(\[i for i in sg\['sequences']\[curseq]])\n        n\['shot'].setValue(0)\n    if k=='cust_task':\n        ct=n\['custom_task']\n        if n\['cust_task'].value()=='<Custom>':\n            n\['custom_task'].setValue('<Custom>')\n            ct.setEnabled(True)\n            ct.setVisible(True)\n        else:\n            n\['custom_task'].setValue(n\['cust_task'].value())\n            ct.setVisible(False)\n    \n    if k=='seq' or k=='shot' or k=='task' or k=='cust_task' or k=='custom_task':\n        f=filterPath('/asset/'+nc\['job']+'/'+n\['seq'].value()+'/'+n\['shot'].value()+'/2d/'+n\['task'].value()+'/'+n\['custom_task'].value()+'/'+'exr/')\n        ver=findAssetversions(f)\n        n\['version'].setValues(ver)\n        n\['version'].setValue(max(ver))\n        n\['thePath'].setValue(f)"
  selected true
  xpos -5
  ypos 274
  addUserKnob {20 User}
  addUserKnob {26 dvl l "Frame Range"}
  addUserKnob {3 first l "  "}
  first 1001
  addUserKnob {3 last l - -STARTLINE}
  last 1001
  addUserKnob {22 g l "      Get Viewer Range     " -STARTLINE T "n=nuke.thisNode()\ntry:\n    v=nuke.activeViewer().node()\nexcept:\n    nuke.message('No Viewer detected in the script.')\nelse:\n    fr=v\['frame_range'].value().split('-')\n    if not(v\['frame_range_lock'].value()):\n        fr=str(nuke.root().frameRange()).split('-')\n    \n    n\['first'].setValue(int(fr\[0]))\n    n\['last'].setValue(int(fr\[1]))\n\n"}
  addUserKnob {26 ""}
  addUserKnob {22 getVerts l INVISIBLE +INVISIBLE T "n=nuke.thisNode()\ntxt=''\nx= n\['geo_select'].getSelection()\nvsel=\[]\nfor gidx,i in enumerate(x):\n    for vidx,j in enumerate(i):\n        if j==1.0:\n            vsel.append(\[gidx,vidx])\n            txt+='objID:\{\}   vertexID:\{\}   pos: \{\}\\n'.format(gidx,vidx,str(getWpoint(gidx,vidx))) \n\nif txt=='': txt=' '\nn\['a'].setValue(txt)\nnuke.thisParent()\['a'].setValue(txt)\n" +STARTLINE}
  addUserKnob {22 dotrack l "    Track Selected Geo Points    " -STARTLINE T "n=nuke.thisNode()\n\nfhold=nuke.toNode('FrameHold1')\nx= n\['geo_select'].getSelection()\ndata=\[]\n\nfor gidx,i in enumerate(x):\n    for vidx,j in enumerate(i):\n        if j==1.0:\n            data.append(\[gidx,vidx])\n\nif len(data)<1:\n    nuke.message('Input must be connected to GeometryNode with at least one point selected.')\nelse:\n\ttrackData=\[]\n\tfirst=int(n\['first'].value())\n\tlast=int(n\['last'].value())+1\n\tfhold\['disable'].setValue(False)\n\tfor f in range(first,last):\n\t\tnuke.toNode('FrameHold1')\['first_frame'].setValue(f)\n\t\tfhold\['first_frame'].setValue(f)\n\t\tn.forceValidate()\n\t\tfor i in data:\n\t\t    trackData.append(\[f,i\[0],i\[1],getWpoint(i\[0],i\[1])])\n\n\tfhold\['disable'].setValue(True)\n\n\tnuke.root().begin()\n\n\tcontainer = nuke.createNode('Group')\n\tcontainer.setName('Match Points')\n\tcontainer\['tile_color'].setValue(3489595647)\n\twith container:\n\t    inp=nuke.nodes.Input()\n\t    inp.setName('cam')\n\t    out=nuke.nodes.Output()\n\tcontainer.addKnob(nuke.Tab_Knob('Controls'))\n\tcontainer.addKnob(nuke.Format_Knob('fmt','Format'))\n\tcontainer.addKnob(nuke.PyScript_Knob('doTracker','  Points To Tracker  '))\n\tcontainer.addKnob(nuke.PyScript_Knob('doAxis','  Points To Axis  '))\n\tcontainer.addKnob(nuke.Text_Knob(''))\n\tcontainer\['doTracker'].setFlag(nuke.STARTLINE)\n\n\t# BENS MAGIC!\n\tby_object = \{\}\n\tfor frame, obj1, obj2, pos in trackData:\n\t\tobjname = (obj1,obj2)\n\t\tdata = (frame, pos)\n\t\tby_object.setdefault(objname, \[]).append(data)\n\n\tfor object, animation in by_object.items():\n\n\t\tobjName='Axis_\{\}_\{\}'.format(object\[0],object\[1])\n\t\tobjLabel='Obj:\{\} Vertex:\{\}'.format(object\[0],object\[1])\n\t\tArrayKnob=nuke.Array_Knob(objName,objLabel,3)\n\t\tArrayKnob.setFlag(nuke.STARTLINE)\n\t\tcontainer.addKnob(ArrayKnob)\n\n\t\tArrayKnob.setAnimated()\n\t\tx, y, z = \[], \[], \[]\n\t\tfor frame, pos in sorted(animation):\n\t\t    x.append(nuke.AnimationKey(frame, pos\[0]))\n\t\t    y.append(nuke.AnimationKey(frame, pos\[1]))\n\t\t    z.append(nuke.AnimationKey(frame, pos\[2]))\n\n\t\tknob_anim = ArrayKnob.animation(0) # First (only) animated channel of knob\n\t\tknob_anim.clear()\n\t\tknob_anim.addKey(x)\n\n\t\tknob_anim = ArrayKnob.animation(1)\n\t\tknob_anim.clear()\n\t\tknob_anim.addKey(y)\n\n\t\tknob_anim = ArrayKnob.animation(2)\n\t\tknob_anim.clear()\n\t\tknob_anim.addKey(z)\n\n\n\tcontainer.addKnob(nuke.Tab_Knob('About'))\n\tcontainer.addKnob(nuke.Text_Knob('','','Daniel Velikov  © 2017'))\n\tcontainer\['Controls'].setFlag(0)\n\n\tcontainer\['doAxis'].setCommand(\"n=nuke.thisNode()\\nnuke.root().begin()\\npx=n.xpos()\\npy=n.ypos()\\nfor pp,i in enumerate(\[n\[i] for i in n.knobs() if i.startswith('Axis')]):\\n    a=nuke.Node('Axis')\\n    a.setName(i.name())\\n    a\['translate'].fromScript(i.toScript())\\n    a.connectInput(0,None)\\n    a.setXYpos(px+100*(pp+1),py)\")\n\n\tcontainer\['doTracker'].setCommand( \"import math \\ndef findC(cls='Camera',node=nuke.thisNode(),inp=0):\\n    obj=node.input(inp)\\n    if obj==None:\\n        return False\\n    if cls in obj.Class():\\n        return obj\\n    else:\\n        return findC(cls,obj,0)\\n\\ndef camPMatrix(cameraNode,theFrame,fmt): \\n\\n    tempMatrix=cameraNode\['world_matrix'].getValueAt(theFrame)\\n    theMatrix=nuke.math.Matrix4()\\n    for j in range(4):\\n        for i in range(4):\\n            theMatrix\[(j*4+i)]=tempMatrix\[i*4+j]\\n   \\n    camTransform = theMatrix.inverse()\\n\\n    roll = float(cameraNode\['winroll'].getValueAt(theFrame)) \\n    scale_x, scale_y = \[float(v) for v in cameraNode\['win_scale'].getValueAt(theFrame)] \\n    translate_x, translate_y = \[float(v) for v in cameraNode\['win_translate'].getValueAt(theFrame)] \\n    m = nuke.math.Matrix4() \\n    m.makeIdentity() \\n    m.rotateZ(math.radians(roll)) \\n    m.scale(1.0 / scale_x, 1.0 / scale_y, 1.0) \\n    m.translate(-translate_x, -translate_y, 0.0) \\n\\n    focal_length = float(cameraNode\['focal'].getValueAt(theFrame)) \\n    h_aperture = float(cameraNode\['haperture'].getValueAt(theFrame)) \\n    near = float(cameraNode\['near'].getValueAt(theFrame)) \\n    far = float(cameraNode\['far'].getValueAt(theFrame)) \\n    projection_mode = int(cameraNode\['projection_mode'].getValueAt(theFrame)) \\n    p = nuke.math.Matrix4() \\n    p.projection(focal_length / h_aperture, near, far, projection_mode == 0) \\n\\n    fw=float(fmt.width())\\n    fh=float(fmt.height())\\n    pxa=float(fmt.pixelAspect())\\n    asr=fw/(fh/pxa)\\n\\n    imageAspect = fh / fw\\n    t = nuke.math.Matrix4() \\n    t.makeIdentity() \\n    t.translate( 1.0, 1.0 - (1.0 - imageAspect / pxa), 0.0 ) \\n\\n    x_scale = fw *.5\\n    y_scale = x_scale * pxa \\n    s = nuke.math.Matrix4() \\n    s.makeIdentity() \\n    s.scale(x_scale, y_scale, 1.0) \\n\\n    return s * t * p * m * camTransform \\n\\ndef getScriptedTracks(theCamera):\\n    theNode=nuke.thisNode()\\n    #GetFormat\\n    theFormat=theNode\['fmt'].value()\\n\\n    #Get 3DKnobs\\n    knobNames=\[i for i in theNode.knobs() if i.startswith('Axis')]\\n\\n    #GetFrameRange\\n    TheFrameRange=theNode\[knobNames\[0]].getKeyList()\\n\\n    #Generate Data Array\\n    pointsData=\[]\\n    for i in knobNames:\\n        pointsData.append(\['\{curve ','\{curve '])\\n    #For Each Frame\\n    for idx,frame in enumerate(TheFrameRange):\\n        #Get Cam Matrix\\n        camMatrix=camPMatrix(camera,frame,theFormat)    \\n        #For each Point\\n        for pidx,knob in enumerate(knobNames):\\n            #Get Point coords \\n            point=theNode\[knob].getValueAt(frame)\\n            #Calculate ScreenCoordinates\\n            pt = nuke.math.Vector3(point\[0], point\[1], point\[2]) \\n            tPos = camMatrix * nuke.math.Vector4(pt.x, pt.y, pt.z, 1.0)\\n            cx,cy=0,0\\n            if tPos.x!=0:\\n                cx=tPos.x / tPos.w\\n            if tPos.y!=0:\\n                cy=tPos.y / tPos.w\\n            #Add Values to X,Y curves\\n            pointsData\[pidx]\[0]+='x\{\} \{\} '.format(frame,cx)\\n            pointsData\[pidx]\[1]+='x\{\} \{\} '.format(frame,cy)\\n    \\n    scriptString=\\\"\{ 1 31 \\\"\\n    scriptString+=str(len(knobNames))\\n    scriptString+=\\\" \} \\\\n\{ \{ 5 1 20 enable e 1 \} \\\\n\{ 3 1 75 name name 1 \} \\\\n\{ 2 1 58 track_x track_x 1 \} \\\\n\{ 2 1 58 track_y track_y 1 \} \\\\n\{ 2 1 63 offset_x offset_x 1 \} \\\\n\{ 2 1 63 offset_y offset_y 1 \} \\\\n\{ 4 1 27 T T 1 \} \\\\n\{ 4 1 27 R R 1 \} \\\\n\{ 4 1 27 S S 1 \} \\\\n\{ 2 0 45 error error 1 \} \\\\n\{ 1 1 0 error_min error_min 1 \} \\\\n\{ 1 1 0 error_max error_max 1 \} \\\\n\{ 1 1 0 pattern_x pattern_x 1 \} \\\\n\{ 1 1 0 pattern_y pattern_y 1 \} \\\\n\{ 1 1 0 pattern_r pattern_r 1 \} \\\\n\{ 1 1 0 pattern_t pattern_t 1 \} \\\\n\{ 1 1 0 search_x search_x 1 \} \\\\n\{ 1 1 0 search_y search_y 1 \} \\\\n\{ 1 1 0 search_r search_r 1 \} \\\\n\{ 1 1 0 search_t search_t 1 \} \\\\n\{ 2 1 0 key_track key_track 1 \} \\\\n\{ 2 1 0 key_search_x key_search_x 1 \} \\\\n\{ 2 1 0 key_search_y key_search_y 1 \} \\\\n\{ 2 1 0 key_search_r key_search_r 1 \} \\\\n\{ 2 1 0 key_search_t key_search_t 1 \} \\\\n\{ 2 1 0 key_track_x key_track_x 1 \} \\\\n\{ 2 1 0 key_track_y key_track_y 1 \} \\\\n\{ 2 1 0 key_track_r key_track_r 1 \} \\\\n\{ 2 1 0 key_track_t key_track_t 1 \} \\\\n\{ 2 1 0 key_centre_offset_x key_centre_offset_x 1 \} \\\\n\{ 2 1 0 key_centre_offset_y key_centre_offset_y 1 \} \\\\n\} \\\\n\{ \\\\n\\\"\\n\\n    startFrame=min(TheFrameRange)\\n    for pidx,knob in enumerate(knobNames):\\n        pointsData\[pidx]=' \{ \{curve K x'+str(startFrame)+' 1\} \\\"'+knob+'\\\" '+(pointsData\[pidx]\[0].rstrip()+'\} ')+(pointsData\[pidx]\[1].rstrip()+'\}')\\n        pointsData\[pidx]+=\\\" \{\}  \{\}  1 0 0 \{\}  0 0 0 0 0 0 0 0 0 0 \\\"\\n        pointsData\[pidx]+=(11*(\\\"\{curve 0 x\\\"+str(startFrame)+\\\" 0\} \\\")+\\\"   \}\\\\n\\\")\\n        scriptString+=pointsData\[pidx]\\n    \\n    scriptString+=\\\"\} \\\\n\\\"\\n    return scriptString\\n\\ndef createTracker(data):\\n    nuke.root().begin()\\n    trackNode = nuke.createNode('Tracker4')\\n    trackNode\['tracks'].fromScript(data)\\n    return trackNode\\n\\ncamera=findC('Camera',nuke.thisNode(),0)\\nif camera==False:\\n    nuke.message('Camera Not Found')\\nelse:\\n    xxx=getScriptedTracks(camera)\\n    createTracker(xxx)\")"}
  addUserKnob {26 a l "" +STARTLINE T ""}
 }
end_group
push $cut_paste_input
Group {
 name Pos2Track
 knobChanged "n=nuke.thisNode()\nk=nuke.thisKnob()\n\nif k.Class()=='XY_Knob' and k.isAnimated()==False:\n    i=k.value()\n    nm='3D'+k.name()\n    inp=n.node('Chn')\n    px=int(i\[0])\n    py=int(i\[1])\n    x= inp.sample('red', px, py)\n    y= inp.sample('green', px,py)\n    z= inp.sample('blue', px, py)\n\n    n\[nm].setValue(\[x,y,z])\n\nif k.name()=='inputChange':\n    if n.input(0)==None:\n        n\['Form'].setValue(False)\n"
 tile_color 0xcfff00ff
 selected true
 xpos 4041
 ypos 880
 addUserKnob {20 User l Controls}
 addUserKnob {41 in l "World Pos" T Chn.in}
 addUserKnob {3 fstart l "Frame Range"}
 fstart 1001
 addUserKnob {3 fend l - -STARTLINE}
 fend 1141
 addUserKnob {22 frameRngGLB l "Get From Viewer" -STARTLINE T "n=nuke.thisNode()\nv=nuke.activeViewer().node()\nfr=v\['frame_range'].value().split('-')\nif not(v\['frame_range_lock'].value()):\n    fr=str(nuke.root().frameRange()).split('-')\n\nn\['fstart'].setValue(int(fr\[0]))\nn\['fend'].setValue(int(fr\[1]))"}
 addUserKnob {26 ""}
 addUserKnob {6 Form l "Format From Input" +STARTLINE}
 addUserKnob {41 fmt l Format T Reformat1.format}
 addUserKnob {22 UpdateAll l INVISIBLE -STARTLINE +INVISIBLE T "n=nuke.thisNode()\n\nfor i in n.knobs():\n    if '3DAxis' in i:\n            k=i.split('3D')\[1]\n            val=n\[k].value()\n            inp=n.node('Chn')\n            x= inp.sample('red', val\[0], val\[1])\n            y= inp.sample('green', val\[0], val\[1])\n            z= inp.sample('blue', val\[0], val\[1])\n            n\[i].setValue(\[x,y,z])"}
 addUserKnob {26 ""}
 addUserKnob {6 ss l "Get data from 3d Selection" +STARTLINE}
 ss true
 addUserKnob {22 addPoint l " Add Point " T "n=nuke.thisNode()\nfmt=n\['fmt'].value()\n\npx=fmt.width()*.5\npy=fmt.height()*.5\naxisNum='0'\nx=\[int(n.knob(i).name().split('_')\[-1]) for i in range(n.getNumKnobs()) if n.knob(i).Class()=='XY_Knob']\nx.sort()\nif len(x)>0:\n    axisNum=str(x\[-1]+1)\nnewKnobName='Axis_'+axisNum\n\nr=nuke.PyScript_Knob(('r'+newKnobName),'Remove')\nr.setFlag(nuke.STARTLINE)\ncmd= \"n=nuke.thisNode()\\nk=nuke.thisKnob().name()\[1:]\\n\"\nn.addKnob(r)\n\nf2d=nuke.XY_Knob(newKnobName,'')\nf2d.setValue(\[px,py])\nf2d.clearFlag(nuke.STARTLINE)\nn.addKnob(f2d)\ncmd+=\"nuke.thisNode().removeKnob(n.knob(k))\\n\"\n\n \nKName='V'+newKnobName\nf=nuke.Axis_Knob(KName,'')\nf.clearFlag(nuke.STARTLINE)\n\n\nKName='3D'+newKnobName\ntr=f.translate()\ntr.setLabel('')\ntr.setName(KName)\ntr.clearFlag(nuke.STARTLINE)\nif n\['ss'].value():\n   p=\[v.position for v in nukescripts.snap3d.getSelection()]\n   if len(p)>0:\n     tr.setValue(\[p\[0].x,p\[0].y,p\[0].z])\n     f2d.setValue(\[-10,-10])\nn.addKnob(tr)\n#n.addKnob(f)\n\ncmd+=\"nuke.thisNode().removeKnob(n.knob('3D'+k))\\n\"\ncmd+=\"nuke.thisNode().removeKnob(n.knob('V'+k))\\n\"\n\n\n\n\nn.addKnob(f)\n\n\n\n\n\ncmd+=\"nuke.thisNode().removeKnob(nuke.thisKnob())\" \nr.setCommand(cmd)" +STARTLINE}
 addUserKnob {22 CreateTracker l "     Create Tracker     " t "\n" -STARTLINE T "import math\n\ndef camPMatrix(cameraNode,theFrame,fmt): \n\n    tempMatrix=cameraNode\['world_matrix'].getValueAt(theFrame)\n    theMatrix=nuke.math.Matrix4()\n    for j in range(4):\n        for i in range(4):\n            theMatrix\[(j*4+i)]=tempMatrix\[i*4+j]\n   \n    camTransform = theMatrix.inverse()\n\n    roll = float(cameraNode\['winroll'].getValueAt(theFrame)) \n    scale_x, scale_y = \[float(v) for v in cameraNode\['win_scale'].getValueAt(theFrame)] \n    translate_x, translate_y = \[float(v) for v in cameraNode\['win_translate'].getValueAt(theFrame)] \n    m = nuke.math.Matrix4() \n    m.makeIdentity() \n    m.rotateZ(math.radians(roll)) \n    m.scale(1.0 / scale_x, 1.0 / scale_y, 1.0) \n    m.translate(-translate_x, -translate_y, 0.0) \n\n    focal_length = float(cameraNode\['focal'].getValueAt(theFrame)) \n    h_aperture = float(cameraNode\['haperture'].getValueAt(theFrame)) \n    near = float(cameraNode\['near'].getValueAt(theFrame)) \n    far = float(cameraNode\['far'].getValueAt(theFrame)) \n    projection_mode = int(cameraNode\['projection_mode'].getValueAt(theFrame)) \n    p = nuke.math.Matrix4() \n    p.projection(focal_length / h_aperture, near, far, projection_mode == 0) \n\n    fw=float(fmt.width())\n    fh=float(fmt.height())\n    pxa=float(fmt.pixelAspect())\n    asr=w/(h/pxa)\n\n    imageAspect = fh / fw\n    t = nuke.math.Matrix4() \n    t.makeIdentity() \n    t.translate( 1.0, 1.0 - (1.0 - imageAspect / pxa), 0.0 ) \n\n    x_scale = fw *.5\n    y_scale = x_scale * pxa \n    s = nuke.math.Matrix4() \n    s.makeIdentity() \n    s.scale(x_scale, y_scale, 1.0) \n\n    return s * t * p * m * camTransform \n\ndef findC(cls='Camera',node=nuke.thisNode(),inp=0):\n    obj=node.input(inp)\n    if obj==None:\n        return False\n    if cls in obj.Class():\n        return obj\n    else:\n        return findC(cls,obj)\n\n\n##############################################################################\nn = nuke.thisNode()\n\n\n#GetFormat##############################################################################\nfmt=nuke.thisNode()\['fmt'].value()\nimgInp=n.input(0)\nif n\['Form'].value() and imgInp!=None:\n    fmt=imgInp.format()\n\nw=float(fmt.width())\nh=float(fmt.height())\npxa=fmt.pixelAspect()\nasr=w/(h/pxa)\n\n\n##############################################################################\n##############################################################################\n##############################################################################\n\n#GetCamera\ncamera=findC('Camera',n,1)\nframe=float(nuke.frame())\n\n#Get All Points\npoints=\[n\[i].value() for i in n.knobs() if '3DAxis' in i]\npointsCount=len(points)\n\ntemp=\[i for i in n.knobs() if '3DAxis' in i]\n\nprint temp\nscreenCoords=\[]\n\n\n\n##############################################################################\n#EachFrameCalc STARTS Here\n\n\n\nnuke.root().begin()\ntrackNode = nuke.createNode('Tracker4')\nk = trackNode\['tracks']\n\n\nfirstFrame=int(n\['fstart'].value())\nlastFrame=int(n\['fend'].value())\n\nfor fr in range(firstFrame,lastFrame):\n    camMatrix=camPMatrix(camera,fr,fmt)    \n\n#Reconcile Part#############################################################################\n\n#  FOR EACH POINT STARTS HERE\n\n    for point in points: \n        pt = nuke.math.Vector3(point\[0], point\[1], point\[2]) \n        tPos = camMatrix * nuke.math.Vector4(pt.x, pt.y, pt.z, 1.0) \n    \n        screenCoords.append(\[tPos.x / tPos.w, tPos.y / tPos.w,fr])\n\n\n\n#TRACKER PART##############################################################################\n\n\np=\"\{ 1 31 \"\np+=str(pointsCount)\np+=\" \} \\n\{ \{ 5 1 20 enable e 1 \} \\n\{ 3 1 75 name name 1 \} \\n\{ 2 1 58 track_x track_x 1 \} \\n\{ 2 1 58 track_y track_y 1 \} \\n\{ 2 1 63 offset_x offset_x 1 \} \\n\{ 2 1 63 offset_y offset_y 1 \} \\n\{ 4 1 27 T T 1 \} \\n\{ 4 1 27 R R 1 \} \\n\{ 4 1 27 S S 1 \} \\n\{ 2 0 45 error error 1 \} \\n\{ 1 1 0 error_min error_min 1 \} \\n\{ 1 1 0 error_max error_max 1 \} \\n\{ 1 1 0 pattern_x pattern_x 1 \} \\n\{ 1 1 0 pattern_y pattern_y 1 \} \\n\{ 1 1 0 pattern_r pattern_r 1 \} \\n\{ 1 1 0 pattern_t pattern_t 1 \} \\n\{ 1 1 0 search_x search_x 1 \} \\n\{ 1 1 0 search_y search_y 1 \} \\n\{ 1 1 0 search_r search_r 1 \} \\n\{ 1 1 0 search_t search_t 1 \} \\n\{ 2 1 0 key_track key_track 1 \} \\n\{ 2 1 0 key_search_x key_search_x 1 \} \\n\{ 2 1 0 key_search_y key_search_y 1 \} \\n\{ 2 1 0 key_search_r key_search_r 1 \} \\n\{ 2 1 0 key_search_t key_search_t 1 \} \\n\{ 2 1 0 key_track_x key_track_x 1 \} \\n\{ 2 1 0 key_track_y key_track_y 1 \} \\n\{ 2 1 0 key_track_r key_track_r 1 \} \\n\{ 2 1 0 key_track_t key_track_t 1 \} \\n\{ 2 1 0 key_centre_offset_x key_centre_offset_x 1 \} \\n\{ 2 1 0 key_centre_offset_y key_centre_offset_y 1 \} \\n\} \\n\{ \\n\"\n\nfFrame=str(int(firstFrame))\nfor j in range(pointsCount):\n    thePoint=\[screenCoords\[i+j] for i in range(0,len(screenCoords),pointsCount)]\n\n    #CreateTrackPoint\n     \n    tpx=\"\"\n    tpy=\"\"\n    trackName=temp\[j]\n    for f in thePoint:\n        tpx+=(str(f\[0])+\" \")\n        tpy+=(str(f\[1])+\" \")\n    tpx=tpx.rstrip()\n    tpy=tpy.rstrip()\n\n    if n\['KnobTrack'].value():\n        trackAnim=\"\{curve x\"+fFrame+\" \"+tpx+\"\} \{curve x\"+fFrame+\" \"+tpy+\"\}\"\t\n        knobName=trackName.replace('3D',\"\")\n        n\[knobName].fromScript(trackAnim)\n\n    p+=\" \{ \{curve K x\"+fFrame+\" 1\} \\\"\"\n    p+=trackName+\"\\\" \{curve x\"+fFrame+\" \"+tpx+\"\}\"\n    p+=\" \{curve x\"+fFrame+\" \"+tpy+\"\}\"\n    p+=\" \{\}  \{\}  1 0 0 \{\}  0 0 0 0 0 0 0 0 0 0 \"\n    p+=11*(\"\{curve 0 x\"+fFrame+\" 0\} \")\n    p+=\"  \} \\n\"\np+=\"\} \\n\"\nk.fromScript(p)"}
 addUserKnob {6 KnobTrack l "Also bake keys on 2D Points" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 about l "" +STARTLINE T "Daniel Velikov  © 2016 "}
 addUserKnob {22 rAxis_0 l Remove T "n=nuke.thisNode()\nk=nuke.thisKnob().name()\[1:]\nnuke.thisNode().removeKnob(n.knob(k))\nnuke.thisNode().removeKnob(n.knob('3D'+k))\nnuke.thisNode().removeKnob(n.knob('V'+k))\nnuke.thisNode().removeKnob(nuke.thisKnob())" +STARTLINE}
 addUserKnob {12 Axis_0 l "" -STARTLINE}
 Axis_0 {-10 -10}
 addUserKnob {13 3DAxis_0 l "" -STARTLINE}
 3DAxis_0 {-549.1512451 -2408.768066 4346.983887}
 addUserKnob {0 VAxis_0 -STARTLINE +INVISIBLE}
}
 Input {
  inputs 0
  name img
  xpos -16
 }
 Dot {
  name Dot1
  xpos 18
  ypos 160
 }
set N890fbf60 [stack 0]
 Output {
  name Output1
  xpos -16
  ypos 533
 }
 Input {
  inputs 0
  name cam
  xpos 128
  ypos 2
  number 1
 }
push $N890fbf60
 Shuffle {
  in rgb
  name Chn
  xpos 139
  ypos 156
 }
 Reformat {
  inputs 0
  pbb true
  name Reformat1
  selected true
  xpos 251
  ypos 153
 }
end_group
push $cut_paste_input
DeepExpression {
 temp_name0 x
 temp_expr0 10
 temp_name1 y
 temp_expr1 10
 chans1 deep
 deep.front deep.back-x
 deep.back deep.front+y
 name DeepVolume
 selected true
 xpos 4041
 ypos 952
 addUserKnob {20 User}
 addUserKnob {41 temp_expr0_1 l "Deep Front" T DeepVolume.temp_expr0}
 addUserKnob {41 temp_expr1_1 l "Deep Back" T DeepVolume.temp_expr1}
}
Group {
 inputs 0
 name AutoMatteCard
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"CardPosition\":\n    pos_name =n.fullName()+\".sample\" \n    n\['name'].value()\n    pos = nuke.toNode(pos_name)\['positionSample'].getValue()\n    n\['translate'].setValue(pos)"
 tile_color 0xe80e00ff
 selected true
 xpos 4040
 ypos 355
 addUserKnob {20 User l Main}
 addUserKnob {26 gf l "" +STARTLINE T "\n\n"}
 addUserKnob {41 positionIn l Position T ShuffleP.in}
 addUserKnob {26 q l "" +STARTLINE}
 addUserKnob {12 CardPosition l "Card Position"}
 CardPosition {1216 238}
 addUserKnob {22 setcard l "" -STARTLINE T "g = nuke.thisNode()\npos_name = \"sample\" \ng\['name'].value()\npos = nuke.toNode(pos_name)\['positionSample'].getValue()\ng\['translate'].setValue(pos)\n"}
 addUserKnob {26 ""}
 addUserKnob {20 matecontrols l "Matte Controls" n 1}
 addUserKnob {68 matteAxis l "Matte Axis" M {X Y Z}}
 matteAxis Z
 addUserKnob {6 overlaymode l "Matte Overlay Mode" +STARTLINE}
 addUserKnob {6 invertmatte l "Invert matte" +STARTLINE}
 addUserKnob {6 disablematte l DisableMatte +STARTLINE}
 addUserKnob {7 startFade l "Start Fading at" R 0 1000}
 addUserKnob {7 mattedistance l "Volume Falloff" R 0 10}
 mattedistance 800
 addUserKnob {41 blursize l "Edge Blur" T EdgeBlur1.size}
 addUserKnob {26 ""}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {20 cardcontrols l "Card Controls" n 1}
 addUserKnob {41 snap_menu l 3D T Card3D.snap_menu}
 addUserKnob {22 copyvalues l "Create Axis from current selection" t "creates an axis with coordinates corresponding to the current selection" -STARTLINE T "g = nuke.thisNode()\npos_name = \"sample\" \ng\['name'].value()\npos = nuke.toNode(pos_name)\['positionSample'].getValue()\ng\['translate'].setValue(pos)\nnuke.root().begin()\naxis = nuke.createNode('Axis')\naxis\['translate'].setValue(pos)"}
 addUserKnob {41 translate T Card3D.translate}
 addUserKnob {41 rotate T Card3D.rotate}
 addUserKnob {41 scaling l scale T Card3D.scaling}
 addUserKnob {41 pivot T Card3D.pivot}
 addUserKnob {41 uniform_scale l "uniform scale" T Card3D.uniform_scale}
 addUserKnob {26 ""}
 addUserKnob {26 text l "" +STARTLINE T "1- Select the Position pass. \n2- Move the pointer on screen. \n3- Adjust the matte if necessary\n\n\nfrancesco.cadoni@yahoo.it V2"}
 addUserKnob {20 cardoptions l "Card Render"}
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {41 format l "output format" T Card3D.format}
 addUserKnob {41 overscan_px l "Overscan (px)" T OverscanCrop.overscan_px}
 addUserKnob {41 motionblur T Card3D.motionblur}
 addUserKnob {41 shutter T Card3D.shutter}
 addUserKnob {41 filter T Card3D.filter}
 addUserKnob {41 clamp -STARTLINE T Card3D.clamp}
 addUserKnob {41 black_outside l "black outside" -STARTLINE T Card3D.black_outside}
 addUserKnob {41 shutteroffset l "shutter offset" T Card3D.shutteroffset}
 addUserKnob {20 endGroup n -1}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x7171c600
  label selfmattedcard
  note_font_size 42
  xpos -821
  ypos 294
  bdwidth 762
  bdheight 1188
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x8e8e3800
  label "rotate card"
  note_font_size 10
  xpos -271
  ypos 727
  bdwidth 103
  bdheight 134
 }
 Input {
  inputs 0
  name P
  xpos -260
  ypos 358
  number 2
 }
 Dot {
  name Dot3
  xpos -226
  ypos 411
 }
set N814f8ad0 [stack 0]
 Dot {
  name Dot2
  xpos -350
  ypos 411
 }
push $N814f8ad0
 Shuffle {
  in none
  alpha black
  name ShuffleP
  xpos -260
  ypos 469
 }
 Remove {
  operation keep
  channels rgba
  name Remove2
  xpos -260
  ypos 506
 }
 NoOp {
  name sample
  selected true
  xpos -260
  ypos 615
  addUserKnob {20 User}
  addUserKnob {18 normalSample l "Normal Sample"}
  normalSample {0 0 0}
  addUserKnob {6 normalSample_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 normalSample_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 normalSample_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 positionSample l "Position Sample"}
  positionSample {{"\[sample ShuffleP red CardPosition.x CardPosition.y]"} {"\[sample  ShuffleP g CardPosition.x CardPosition.y]"} {"\[sample ShuffleP b CardPosition.x CardPosition.y]"}}
  addUserKnob {6 positionSample_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 positionSample_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 positionSample_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 }
 Add {
  channels rgba
  value {{-parent.Position.CalcPosition x1 0} {-parent.Position.CalcPosition x1 0} {-parent.Position.CalcPosition x1 0} 0}
  name Add3
  label "move center to card position"
  xpos -260
  ypos 663
 }
 ColorMatrix {
  matrix {
      {1 0 0}
      {0 {cos(-rotate.x*pi/180)} {-sin(-rotate.x*pi/180)}}
      {0 {sin(-rotate.x*pi/180)} {cos(-rotate.x*pi/180)}}
    }
  name rotateX2
  xpos -260
  ypos 759
 }
 ColorMatrix {
  matrix {
      {{cos(-rotate.y*pi/180)} 0 {sin(-rotate.y*pi/180)}}
      {0 1 0}
      {{-sin(-rotate.y*pi/180)} 0 {cos(-rotate.y*pi/180)}}
    }
  name rotateY2
  xpos -260
  ypos 785
  addUserKnob {20 User}
  addUserKnob {1 a}
  a cos(rotateY*pi/180)
  addUserKnob {1 b}
  b 0
  addUserKnob {1 c}
  c sin(rotateY*pi/180)
  addUserKnob {1 d}
  d 0
  addUserKnob {1 e}
  e 1
  addUserKnob {1 f}
  f 0
  addUserKnob {1 g}
  g -sin(rotateY*pi/180)
  addUserKnob {1 h}
  h 0
  addUserKnob {1 i}
  i cos(rotateY*pi/180)
 }
 ColorMatrix {
  matrix {
      {{cos(-rotate.z*pi/180)} {-sin(-rotate.z*pi/180)} 0}
      {{sin(-rotate.z*pi/180)} {cos(-rotate.z*pi/180)} 0}
      {0 0 1}
    }
  name rotateZ2
  xpos -260
  ypos 815
 }
 Add {
  channels rgba
  value {{parent.Position.CalcPosition} {parent.Position.CalcPosition} {parent.Position.CalcPosition} 0}
  name Add4
  label "move center back to origin"
  xpos -260
  ypos 890
 }
 Grade {
  blackpoint {{parent.Position.CalcPosition-mattedistance} {parent.Position.CalcPosition-mattedistance} {parent.Position.CalcPosition-mattedistance} 0}
  whitepoint {{parent.Position.CalcPosition+mattedistance} {parent.Position.CalcPosition+mattedistance} {parent.Position.CalcPosition+mattedistance} 0}
  black_clamp false
  maskChannelInput -rgba.alpha
  unpremult -rgba.alpha
  name Grade1
  xpos -260
  ypos 964
  addUserKnob {20 User}
 }
 Clamp {
  channels rgba
  name Clamp1
  xpos -260
  ypos 1017
 }
 Expression {
  channel0 {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  expr0 "matteAxis == 0 ? r : 0"
  expr1 "matteAxis == 1 ? g : 0"
  expr2 "matteAxis == 2 ? b : 0"
  channel3 alpha
  name Expression1
  label "axis switch"
  xpos -260
  ypos 1049
 }
 Expression {
  channel0 rgba
  expr0 max(r,g,b)
  name Expression2
  label "copy to alpha"
  xpos -260
  ypos 1093
 }
 Invert {
  channels rgba
  name Invert1
  xpos -260
  ypos 1139
  disable {{parent.invertmatte-1}}
 }
 EdgeBlur {
  channels rgba
  size 2.1
  name EdgeBlur1
  xpos -260
  ypos 1196
 }
set N80afaf20 [stack 0]
 Shuffle {
  red alpha
  green black
  blue black
  alpha black
  name Shuffle2
  label "\[value in] to \[value out]"
  xpos -260
  ypos 1301
 }
push $N80afaf20
 Multiply {
  channels rgba
  value 0
  name Multiply1
  xpos -469
  ypos 1202
  disable {{parent.disablematte-1}}
 }
 Axis2 {
  inputs 0
  rot_order XYZ
  translate {{"\[value \[topnode parent.input3].world_matrix.3]"} {"\[value \[topnode parent.input3].world_matrix.7]"} {"\[value \[topnode parent.input3].world_matrix.11]"}}
  name Axis1
  xpos -697
  ypos 893
 }
 Input {
  inputs 0
  name Cam
  xpos -804
  ypos 985
 }
 Input {
  inputs 0
  name Texture
  xpos -590
  ypos 453
  number 1
 }
 Card3D {
  inputs 3
  translate {-35457.1 10373.2 875.646}
  rotate {0 -90 0}
  uniform_scale 100000
  shutteroffset centred
  name Card3D
  xpos -590
  ypos 991
  addUserKnob {20 Cyco}
  addUserKnob {7 card_distance l "card distance" R 0 100000}
  card_distance 10000
  addUserKnob {4 select_cam l "select a camera" +INVISIBLE M {}}
  addUserKnob {22 update_list l "update list" -STARTLINE +INVISIBLE T "from nuke_weta_base.node.card3d import cyco_tab; cyco_tab.update_list()"}
  addUserKnob {26 ""}
  addUserKnob {22 match_to_cam l "match to camera (rotate|translate|scale)" T "from nuke_weta_base.node.card3d import cyco_tab; cyco_tab.match_to_cam()" +STARTLINE}
  addUserKnob {22 center_to_cam l "center to camera (translate)" T "from nuke_weta_base.node.card3d import cyco_tab; cyco_tab.center_to_cam()" +STARTLINE}
  addUserKnob {22 align_to_cam l "align to camera (rotate)" T "from nuke_weta_base.node.card3d import cyco_tab; cyco_tab.align_to_cam()" +STARTLINE}
  addUserKnob {22 constrain_to_cam l "constrain to camera (rotate)" T "from nuke_weta_base.node.card3d import cyco_tab; cyco_tab.constrain_to_cam()" +STARTLINE}
 }
set N805f42b0 [stack 0]
 Shuffle {
  in depth
  name Shuffle1
  xpos -726
  ypos 1040
 }
 Expression {
  channel0 rgba
  expr0 1/z
  name Expression3
  xpos -726
  ypos 1119
 }
 Grade {
  channels rgba
  whitepoint {{parent.startFade}}
  black_clamp false
  unpremult -rgba.alpha
  name Grade2
  xpos -731
  ypos 1160
 }
push $N805f42b0
 Merge2 {
  inputs 2
  operation mask
  metainput All
  name Merge2
  xpos -590
  ypos 1160
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge6
  xpos -590
  ypos 1202
 }
 Merge2 {
  inputs 2
  name Merge1
  xpos -590
  ypos 1307
  disable {{parent.overlaymode-1}}
 }
 Group {
  name OverscanCrop
  tile_color 0xa879a9ff
  xpos -590
  ypos 1352
  addUserKnob {20 User l OverscanCrop}
  addUserKnob {7 overscan_px l "Overscan (px)" R 0 100}
  overscan_px 50
  addUserKnob {26 ""}
  addUserKnob {41 softness T overscan_crop.softness}
  addUserKnob {41 reformat T overscan_crop.reformat}
  addUserKnob {41 intersect -STARTLINE T overscan_crop.intersect}
  addUserKnob {41 crop l "black outside" -STARTLINE T overscan_crop.crop}
  addUserKnob {26 ""}
 }
  Input {
   inputs 0
   name Input
   xpos 0
   ypos 2
  }
  Crop {
   box {{0-parent.overscan_px} {0-parent.overscan_px} {"Input.width + parent.overscan_px"} {"Input.height + parent.overscan_px"}}
   intersect true
   name overscan_crop
   selected true
   xpos 0
   ypos 141
  }
  Output {
   name Output1
   xpos 0
   ypos 300
  }
 end_group
 Output {
  name Output
  xpos -590
  ypos 1435
 }
 NoOp {
  inputs 0
  name Position
  xpos -375
  ypos 906
  hide_input true
  addUserKnob {20 User}
  addUserKnob {13 CalcPosition l "Calculate position"}
  CalcPosition {{parent.Card3D.translate+parent.Axis1.translate} {parent.Card3D.translate+parent.Axis1.translate} {parent.Card3D.translate+parent.Axis1.translate}}
 }
 Input {
  inputs 0
  name Axis
  xpos -713
  ypos 824
  number 3
 }
end_group
push $cut_paste_input
Group {
 name PxF_DeepDefocus
 help "Cut a deep image in multiple slices and defocus each slice according to depth and lens. Expects the deep image depth to be in centimeters."
 knobChanged "\nm = nuke.thisNode()\nkc = nuke.thisKnob()\n\nif kc.name() in \[\"filter\", \"slices\"]:\n#if 1:\n    i = nuke.toNode('DeepReformat1')\n    o = nuke.toNode('Reformat1')\n    krn = nuke.toNode('Switch1')    \n    \n    for n in nuke.allNodes():\n      if \"static\" not in n\['label'].getValue():\n        nuke.delete(n)\n    \n    slices = int(m\['slices'].value())\n    step = 1\n    for x in range(1,slices+step,step):\n\n        #defoExpression = 'pow(parent.size/parent.slices*' + str(x) + '/parent.size,parent.sliceGamma)*parent.size'\n\n\n        dc = nuke.nodes.DeepCrop()\n        dc.setInput(0, i)\n        dc\['znear'].setExpression(\"(parent.near+(parent.far-parent.near)/parent.slices*\" + str(x-1) + \")-parent.overlap\")\n        dc\['zfar'].setExpression(\"(parent.near+(parent.far-parent.near)/parent.slices*\" + str(x) + \")+parent.overlap\")\n        dc\['use_bbox'].setValue(0)\n        dc\['label'].setValue(\"\[value znear] to \[value zfar]\")\n        if x == 1:\n            dc\['use_znear'].setExpression(\"parent.clipNear\")\n        elif x == slices:\n            dc\['use_zfar'].setExpression(\"parent.clipFar\")\n\n        di = nuke.nodes.DeepToImage()\n        di.setInput(0, dc)\n        \n        nanfil = nuke.nodes.Expression()\n        nanfil.setInput(0, di)\n        nanfil\['expr0'].setValue(\"isinf(r) || isnan(r) ? 0 : r\")\n        nanfil\['expr1'].setValue(\"isinf(g) || isnan(g) ? 0 : g\")\n        nanfil\['expr2'].setValue(\"isinf(b) || isnan(b) ? 0 : b\")\n        \n        \n        nop = nuke.nodes.NoOp()\n        nop.setInput(0, nanfil)\n        nop.addKnob( nuke.Double_Knob(\"subjectDistance\") )\n        nop\['subjectDistance'].setExpression(\"((\" + dc.name() + \".zfar - \" + dc.name() + \".znear)/2+\" + dc.name() + \".znear) * 10\")\n        nop.addKnob( nuke.Double_Knob(\"focalDistanceMM\") )\n        nop\['focalDistanceMM'].setExpression(\"parent.focalDistance*10\")\n        nop.addKnob( nuke.Double_Knob(\"defoMM\") )\n        nop\['defoMM'].setExpression(\"fabs((parent.focalLength/parent.fStop)*(((subjectDistance-focalDistanceMM)/subjectDistance)*(parent.focalLength/(focalDistanceMM-parent.focalLength))))\")\n        nop.addKnob( nuke.Double_Knob(\"defoPX\") )\n        nop\['defoPX'].setExpression(\"defoMM*(width/parent.filmBack)/2\")\n        nop\['label'].setValue(\"\[value defoPX]\")\n        \n        defo = nop.name() + \".defoPX\"\n        \n\n        f = m\['filter'].value()\n        \n        if f == \"defocus\":\n            d = nuke.nodes.Defocus()\n            d.setInput(0, nop)\n            d\['defocus'].setExpression(defo)\n            d\['ratio'].setExpression(\"parent.aspect\")\n\n        if f == \"convolve\":\n            r1 = nuke.nodes.Reformat()\n            r1.setInput(0, krn)\n            r1\['type'].setValue(\"to box\")\n            r1\['box_width'].setExpression(defo + \"*2 > 3 ? \" + defo + \"*2 \" + \": 3\" )\n            r15 = nuke.nodes.Reformat()\n            r15.setInput(0, r1)\n            r15\['type'].setValue(\"scale\")\n            r15\['resize'].setValue(\"deform\")\n            r15\['scale'].setSingleValue(False)\n            r15\['scale'].setValue(1,1)\n            r15\['scale'].setExpression('parent.aspect',0)\n            r15\['label'].setValue(\"aspect ratio\")\n\n            t1 = nuke.nodes.Transform()\n            t1.setInput(0, r15)\n            t1\['translate'].setExpression(\"fmod(width,2)?0:0.5\", 0)\n            t1\['translate'].setExpression(\"fmod(height,2)?0:0.5\", 1)\n            r2 = nuke.nodes.Reformat()\n            r2.setInput(0, t1)\n            r2\['type'].setValue(\"to box\")\n            r2\['box_width'].setExpression(\"fmod(width,2)?width:width+1\")\n            r2\['box_height'].setExpression(\"fmod(height,2)?height:height+1\")\n            r2\['resize'].setValue(\"none\")\n            d = nuke.nodes.Convolve()\n            d.setInput(0, nop)\n            d.setInput(1, r2)\n            d\['mix'].setExpression(defo + \"*2 > 3 ? 1 : \" + defo + \"*2/3\")\n            \n        if f in \[\"box\", \"triangle\", \"quadratic\", \"gaussian\"]:\n            d = nuke.nodes.Blur()\n            d.setInput(0, nop)\n            d\['size'].setSingleValue(False)\n            d\['size'].setExpression(defo + '*parent.aspect' , 0)\n            d\['size'].setExpression(defo , 1) \n            d\['filter'].setValue(f)\n\n        \n        \n        if x == 1:\n            mg = nuke.nodes.Dot()\n            mg.setInput(0,d)\n            prevMg = mg\n        else:\n             mg = nuke.nodes.Merge()\n             mg.setInput(1,d)\n             mg.setInput(0, prevMg)\n             mg\['operation'].setValue('under')\n             prevMg = mg\n\n    o.setInput(0,mg)\n"
 tile_color 0x73351fff
 note_font "Bitstream Vera Sans"
 selected true
 xpos 4053
 ypos 1111
 mapsize {0.15 0.15}
 addUserKnob {20 User t derp}
 addUserKnob {4 filter t "Type of filtering. Defocus uses regular Nuke 'Defocus' nodes and convolve uses 'Convolve' nodes with a custom kernel." M {defocus convolve box triangle quadratic gaussian "" "" "" ""}}
 filter convolve
 addUserKnob {3 slices t "How many DeepCrop and Defocus nodes to create internally."}
 slices 1
 addUserKnob {7 overlap R 0 100}
 addUserKnob {7 near t "Near point. Everything in front of this point will be either cropped off or get the same defocus value as the nearest slice (see clipNear)." R 0 1000}
 near 11
 addUserKnob {7 far t "Far point. Everything behind this point will be either cropped off or get the same defocus value as the farthest slice (see clipFar)." R 0 1000}
 far 30
 addUserKnob {6 clipNear t "When turned on, crop off everything in front of the near point." +STARTLINE}
 clipNear true
 addUserKnob {6 clipFar t "When turned on, crop off everything behind the far point." -STARTLINE}
 clipFar true
 addUserKnob {7 resolution t "Reformat the deep buffer for faster interaction. For example, a value of 0.25 means quarter resolution."}
 resolution 1
 addUserKnob {7 aspect t "Aspect ratio of the kernel. Use this to simulate 'oval' bokeh from an anamorphic lens." R 0 4}
 aspect 1
 addUserKnob {26 ""}
 addUserKnob {7 focalLength l "focal length" t "Lens focal length in mm."}
 focalLength 4.1
 addUserKnob {7 filmBack l "horiz aperture" t "Width of the camera sensor size in mm."}
 filmBack 2.825
 addUserKnob {7 focalDistance l "focal distance" t "Focal distance (sharp point) in CM."}
 focalDistance 18
 addUserKnob {7 fStop l fstop t "Lens aperture in fStop."}
 fStop 2
 addUserKnob {26 ""}
 addUserKnob {26 t l "" +STARTLINE T "PxF_DeepDefocus 1.0.2 - (c) 2012 - Xavier Bourque - www.pixelfudger.com"}
 addUserKnob {20 Kernel}
 addUserKnob {6 viewKernel t "View the image being used as the kernel when the filter mode is set to 'convolve'. Use this to see what you're doing when adjusting the kernel shape. Don't forget to turn it off when you're done!" +STARTLINE}
 addUserKnob {26 "" l "@b;Colors"}
 addUserKnob {7 ringWidth t "Thickness of the 'donut' around the edge of the kernel."}
 ringWidth 0.25
 addUserKnob {41 ring_color l "ring color" t "Color of the 'donut' around the edge of the kernel." T Flare1.ring_color}
 addUserKnob {41 inner_color l "inner color" t "Color of the center of the kernel." T Flare1.inner_color}
 addUserKnob {41 outer_falloff l "outer falloff" T Flare1.outer_falloff}
 addUserKnob {41 inner_falloff l "inner falloff" T Flare1.inner_falloff}
 addUserKnob {26 "" l "@b;Shape"}
 addUserKnob {41 corners T Flare1.corners}
 addUserKnob {41 flattening l "edge flattening" T Flare1.flattening}
 addUserKnob {41 sharpness l "corner sharpness" T Flare1.sharpness}
 addUserKnob {41 corners_angle l angle T Flare1.corners_angle}
 addUserKnob {26 Noise l "@b;Noise"}
 addUserKnob {6 enableNoise l enable +STARTLINE}
 enableNoise true
 addUserKnob {7 noiseSize l size R 0 50}
 noiseSize 35
 addUserKnob {7 noiseGain l gain}
 noiseGain 0.85
 addUserKnob {7 noiseGamma l gamma}
 noiseGamma 0.85
 addUserKnob {7 noiseMix l mix}
 noiseMix 0.5
 addUserKnob {26 ""}
 addUserKnob {6 keyKernel l "use kernel RGB luminance for alpha convolve" t "Use the RGB luminance of the kernel to defocus the alpha channel of the image being defocused. If this is turned off, the kernel must have valid pixels in every channel of every layer you are expecting to defocus." +STARTLINE}
 keyKernel true
 addUserKnob {20 admin}
 addUserKnob {22 go T "m = nuke.thisNode()\nkc = nuke.thisKnob()\n\nif kc.name() in \[\"filter\", \"slices\"]:\n#if 1:\n    i = nuke.toNode('DeepReformat1')\n    o = nuke.toNode('Reformat1')\n    krn = nuke.toNode('Switch1')    \n    \n    for n in nuke.allNodes():\n      if \"static\" not in n\['label'].getValue():\n        nuke.delete(n)\n    \n    slices = m\['slices'].value()\n    step = 1\n    for x in range(1,slices+step,step):\n\n        #defoExpression = 'pow(parent.size/parent.slices*' + str(x) + '/parent.size,parent.sliceGamma)*parent.size'\n\n\n        dc = nuke.nodes.DeepCrop()\n        dc.setInput(0, i)\n        dc\['znear'].setExpression(\"(parent.near+(parent.far-parent.near)/parent.slices*\" + str(x-1) + \")-parent.overlap\")\n        dc\['zfar'].setExpression(\"(parent.near+(parent.far-parent.near)/parent.slices*\" + str(x) + \")+parent.overlap\")\n        dc\['use_bbox'].setValue(0)\n        dc\['label'].setValue(\"\[value znear] to \[value zfar]\")\n        if x == 1:\n            dc\['use_znear'].setExpression(\"parent.clipNear\")\n        elif x == slices:\n            dc\['use_zfar'].setExpression(\"parent.clipFar\")\n\n        di = nuke.nodes.DeepToImage()\n        di.setInput(0, dc)\n        \n        nanfil = nuke.nodes.Expression()\n        nanfil.setInput(0, di)\n        nanfil\['expr0'].setValue(\"isinf(r) || isnan(r) ? 0 : r\")\n        nanfil\['expr1'].setValue(\"isinf(g) || isnan(g) ? 0 : g\")\n        nanfil\['expr2'].setValue(\"isinf(b) || isnan(b) ? 0 : b\")\n        \n        \n        nop = nuke.nodes.NoOp()\n        nop.setInput(0, nanfil)\n        nop.addKnob( nuke.Double_Knob(\"subjectDistance\") )\n        nop\['subjectDistance'].setExpression(\"((\" + dc.name() + \".zfar - \" + dc.name() + \".znear)/2+\" + dc.name() + \".znear) * 10\")\n        nop.addKnob( nuke.Double_Knob(\"focalDistanceMM\") )\n        nop\['focalDistanceMM'].setExpression(\"parent.focalDistance*10\")\n        nop.addKnob( nuke.Double_Knob(\"defoMM\") )\n        nop\['defoMM'].setExpression(\"fabs((parent.focalLength/parent.fStop)*(((subjectDistance-focalDistanceMM)/subjectDistance)*(parent.focalLength/(focalDistanceMM-parent.focalLength))))\")\n        nop.addKnob( nuke.Double_Knob(\"defoPX\") )\n        nop\['defoPX'].setExpression(\"defoMM*(width/parent.filmBack)/2\")\n        nop\['label'].setValue(\"\[value defoPX]\")\n        \n        defo = nop.name() + \".defoPX\"\n        \n\n        f = m\['filter'].value()\n        \n        if f == \"defocus\":\n            d = nuke.nodes.Defocus()\n            d.setInput(0, nop)\n            d\['defocus'].setExpression(defo)\n            d\['ratio'].setExpression(\"parent.aspect\")\n\n        if f == \"convolve\":\n            r1 = nuke.nodes.Reformat()\n            r1.setInput(0, krn)\n            r1\['type'].setValue(\"to box\")\n            r1\['box_width'].setExpression(defo + \"*2 > 3 ? \" + defo + \"*2 \" + \": 3\" )\n            r15 = nuke.nodes.Reformat()\n            r15.setInput(0, r1)\n            r15\['type'].setValue(\"scale\")\n            r15\['resize'].setValue(\"deform\")\n            r15\['scale'].setSingleValue(False)\n            r15\['scale'].setValue(1,1)\n            r15\['scale'].setExpression('parent.aspect',0)\n            r15\['label'].setValue(\"aspect ratio\")\n\n            t1 = nuke.nodes.Transform()\n            t1.setInput(0, r15)\n            t1\['translate'].setExpression(\"fmod(width,2)?0:0.5\", 0)\n            t1\['translate'].setExpression(\"fmod(height,2)?0:0.5\", 1)\n            r2 = nuke.nodes.Reformat()\n            r2.setInput(0, t1)\n            r2\['type'].setValue(\"to box\")\n            r2\['box_width'].setExpression(\"fmod(width,2)?width:width+1\")\n            r2\['box_height'].setExpression(\"fmod(height,2)?height:height+1\")\n            r2\['resize'].setValue(\"none\")\n            d = nuke.nodes.Convolve()\n            d.setInput(0, nop)\n            d.setInput(1, r2)\n            d\['mix'].setExpression(defo + \"*2 > 3 ? 1 : \" + defo + \"*2/3\")\n            \n        if f in \[\"box\", \"triangle\", \"quadratic\", \"gaussian\"]:\n            d = nuke.nodes.Blur()\n            d.setInput(0, nop)\n            d\['size'].setSingleValue(False)\n            d\['size'].setExpression(defo + '*parent.aspect' , 0)\n            d\['size'].setExpression(defo , 1) \n            d\['filter'].setValue(f)\n\n        \n        \n        if x == 1:\n            mg = nuke.nodes.Dot()\n            mg.setInput(0,d)\n            prevMg = mg\n        else:\n             mg = nuke.nodes.Merge()\n             mg.setInput(1,d)\n             mg.setInput(0, prevMg)\n             mg\['operation'].setValue('under')\n             prevMg = mg\n\n    o.setInput(0,mg)\n" +STARTLINE}
}
 Input {
  inputs 0
  name kernel
  label static
  xpos -648
  ypos -323
  number 1
 }
 Keyer {
  operation "luminance key"
  name Keyer4
  label static
  xpos -648
  ypos -159
  disable {{"parent.keyKernel ? 0 : 1" i}}
 }
 Reformat {
  inputs 0
  type "to box"
  box_width 501
  box_height 501
  box_fixed true
  name Reformat4
  label static
  xpos -455
  ypos -383
 }
set Nc81fa140 [stack 0]
 Noise {
  size {{parent.noiseSize i}}
  gain {{parent.noiseGain i}}
  gamma {{parent.noiseGamma i}}
  center {1440 810}
  name Noise1
  label static
  xpos -349
  ypos -315
 }
push $Nc81fa140
 Flare {
  position {250 250}
  radius {{0 i} {"249 - (parent.ringWidth*249)" i} {249 i}}
  inner_color 0.75
  outer_falloff 0.35
  inner_falloff 10
  vis_in 0
  vis_out 1
  vis_mask_size 0
  corners 9
  flattening 0.9
  sharpness 0.99
  name Flare1
  label static
  xpos -455
  ypos -314
 }
 Merge2 {
  inputs 2
  operation multiply
  mix {{parent.noiseMix i}}
  name Merge3
  label static
  xpos -455
  ypos -245
  disable {{parent.enableNoise?0:1 i}}
 }
 Shuffle {
  alpha red
  name Shuffle2
  label static
  xpos -455
  ypos -187
 }
 Switch {
  inputs 2
  which {{"\[exists parent.input1]" i}}
  name Switch1
  label static
  xpos -455
  ypos -126
 }
set Nc7bf8200 [stack 0]
 Dot {
  name Dot2
  label static
  xpos -421
  ypos 563
 }
push $Nc7bf8200
 Reformat {
  type "to box"
  box_width {{"NoOp1.defoPX*2 > 3 ? NoOp1.defoPX*2 : 3"}}
  name Reformat2
 }
 Reformat {
  type scale
  scale {{parent.aspect} 1}
  resize distort
  name Reformat3
  label "aspect ratio"
 }
 Transform {
  translate {{fmod(width,2)?0:0.5} {fmod(height,2)?0:0.5}}
  name Transform1
 }
 Reformat {
  type "to box"
  box_width {{fmod(width,2)?width:width+1}}
  box_height {{fmod(height,2)?height:height+1}}
  resize none
  name Reformat5
 }
 Input {
  inputs 0
  name deep
  label static
  xpos 452
  ypos -421
 }
 DeepReformat {
  type scale
  scale {{parent.resolution}}
  name DeepReformat1
  label static
  xpos 452
  ypos -318
 }
 DeepCrop {
  znear {{(parent.near+(parent.far-parent.near)/parent.slices*0)-parent.overlap}}
  use_znear {{parent.clipNear}}
  zfar {{(parent.near+(parent.far-parent.near)/parent.slices*1)+parent.overlap}}
  bbox {431.2000122 227.1999969 1724.800049 908.7999878}
  use_bbox false
  name DeepCrop1
  label "\[value znear] to \[value zfar]"
 }
 DeepToImage {
  name DeepToImage1
 }
 Expression {
  expr0 "isinf(r) || isnan(r) ? 0 : r"
  expr1 "isinf(g) || isnan(g) ? 0 : g"
  expr2 "isinf(b) || isnan(b) ? 0 : b"
  name Expression1
 }
 NoOp {
  name NoOp1
  label "\[value defoPX]"
  addUserKnob {20 User}
  addUserKnob {7 subjectDistance}
  subjectDistance {{"((DeepCrop1.zfar - DeepCrop1.znear)/2+DeepCrop1.znear) * 10"}}
  addUserKnob {7 focalDistanceMM}
  focalDistanceMM {{parent.focalDistance*10}}
  addUserKnob {7 defoMM}
  defoMM {{fabs((parent.focalLength/parent.fStop)*(((subjectDistance-focalDistanceMM)/subjectDistance)*(parent.focalLength/(focalDistanceMM-parent.focalLength))))}}
  addUserKnob {7 defoPX}
  defoPX {{defoMM*(width/parent.filmBack)/2}}
 }
 Convolve {
  inputs 2
  mix {{"NoOp1.defoPX*2 > 3 ? 1 : NoOp1.defoPX*2/3"}}
  name Convolve1
 }
 Dot {
  name Dot1
 }
 Reformat {
  type scale
  scale {{1/parent.resolution i}}
  name Reformat1
  label static
  xpos 675
  ypos 496
 }
 Switch {
  inputs 2
  which {{parent.viewKernel i}}
  name Switch2
  label static
  xpos 675
  ypos 553
 }
 Output {
  name Output1
  label static
  xpos 675
  ypos 633
 }
end_group
push $cut_paste_input
add_layer {P_lig P_lig.X P_lig.Y P_lig.Z P_lig.red P_lig.green P_lig.blue P_lig.alpha}
Group {
 name PNoiseFran
 tile_color 0x9ebc2fff
 selected true
 xpos 4065
 ypos 1194
 addUserKnob {20 PNoiseTab l PNoise}
 addUserKnob {41 in l P T Shuffle1.in}
 addUserKnob {26 ""}
 addUserKnob {68 noiseType l "Noise Type" M {"Regular Noise" "Fractal Brownian Motion" Turbulent "Blocky fBm" "Blocky Turbulent" Rings "" ""}}
 noiseType Turbulent
 addUserKnob {18 size l Size R 0 100}
 size {5 2.799999952 12.5}
 addUserKnob {6 size_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 size_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 size_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {3 oct l Octaves}
 oct 3
 addUserKnob {7 falloff l Falloff R 0 5}
 falloff 0.1
 addUserKnob {7 lac l Lacunarity R 0 11}
 lac 4
 addUserKnob {7 multiply l Gain R 0 11}
 multiply 1
 addUserKnob {26 ""}
 addUserKnob {13 sizeEach l INVISIBLE +INVISIBLE}
 sizeEach {1 1 1}
 addUserKnob {13 pos l "" t "Use this to animate noise evolution" +STARTLINE}
 addUserKnob {26 text l "" +STARTLINE T ""}
}
 Input {
  inputs 0
  name Input1
  xpos -590
  ypos -82
 }
 Shuffle {
  in {P_lig.X P_lig.Y P_lig.Z -P_lig.red}
  name Shuffle1
  xpos -590
  ypos -58
 }
set Nc57f4f20 [stack 0]
 Expression {
  temp_name0 evo
  temp_expr0 parent.pos.x+parent.pos.y+parent.pos.z
  temp_name1 R
  temp_expr1 pow(sin(r/parent.size.r)+evo,1/parent.falloff)
  temp_name2 G
  temp_expr2 pow(sin(g/parent.size.g)+evo,1/parent.falloff)
  temp_name3 B
  temp_expr3 pow(sin(b/parent.size.b)+evo,1/parent.falloff)
  expr0 R
  expr1 G
  expr2 B
  channel3 alpha
  expr3 clamp(R+G+B)
  name rings
  xpos -370
  ypos 110
 }
push $Nc57f4f20
 Expression {
  expr0 trunc(r/parent.size.r)
  expr1 trunc(g/parent.size.g)
  expr2 trunc(b/parent.size.b)
  channel3 alpha
  name trunc1
  xpos -480
  ypos 86
 }
 Expression {
  temp_name0 evo
  temp_expr0 parent.pos.x+parent.pos.y+parent.pos.z
  temp_name1 R
  temp_expr1 "pow(turbulence((r/parent.size.r)+evo, (g/parent.size.r)+evo, (b/parent.size.r)+evo, parent.oct, parent.lac, parent.multiply),1/parent.falloff)"
  temp_name2 G
  temp_expr2 "pow(turbulence((r/parent.size.g)+evo, (g/parent.size.g)+evo, (b/parent.size.g)+evo, parent.oct, parent.lac, parent.multiply),1/parent.falloff)"
  temp_name3 B
  temp_expr3 "pow(turbulence((r/parent.size.b)+evo, (g/parent.size.b)+evo, (b/parent.size.b)+evo, parent.oct, parent.lac, parent.multiply),1/parent.falloff)"
  expr0 R
  expr1 G
  expr2 B
  channel3 alpha
  expr3 clamp(R+G+B)
  name Turbulence1
  xpos -480
  ypos 110
  addUserKnob {20 User}
  addUserKnob {4 algo l "Noise type" M {"Regular Noise" "Turbulence\nNoise" "Fractal Brownian Motion"}}
  addUserKnob {3 octaves l "Octaves "}
  octaves 2
  addUserKnob {7 amp l "Global Size" R 0 200}
  amp 26
  addUserKnob {7 falloff l Falloff R 0 5}
  falloff 1.12
  addUserKnob {7 luc l Lucanarity R 0 9}
  luc 1
  addUserKnob {7 gain l Multiply R 0 9}
  gain 1
  addUserKnob {26 ""}
  addUserKnob {13 size l Size}
  size {1 1 1}
  addUserKnob {13 pos l Position}
 }
push $Nc57f4f20
 Expression {
  expr0 trunc(r/parent.size.r)
  expr1 trunc(g/parent.size.g)
  expr2 trunc(b/parent.size.b)
  channel3 alpha
  name trunc2
  xpos -590
  ypos 86
 }
 Expression {
  temp_name0 evo
  temp_expr0 parent.pos.x+parent.pos.y+parent.pos.z
  temp_name1 R
  temp_expr1 "pow(fBm((r/parent.size.r)+evo, (g/parent.size.r)+evo, (b/parent.size.r)+evo, parent.oct, parent.lac, parent.multiply),1/parent.falloff)"
  temp_name2 G
  temp_expr2 "pow(fBm((r/parent.size.g)+evo, (g/parent.size.g)+evo, (b/parent.size.g)+evo, parent.oct, parent.lac, parent.multiply),1/parent.falloff)"
  temp_name3 B
  temp_expr3 "pow(fBm((r/parent.size.b)+evo, (g/parent.size.b)+evo, (b/parent.size.b)+evo, parent.oct, parent.lac, parent.multiply),1/parent.falloff)"
  expr0 R
  expr1 G
  expr2 B
  channel3 alpha
  expr3 clamp(R+G+B)
  name fBm1
  xpos -590
  ypos 110
  addUserKnob {20 User}
  addUserKnob {4 algo l "Noise type" M {"Regular Noise" "Turbulence\nNoise" "Fractal Brownian Motion"}}
  addUserKnob {3 octaves l "Octaves "}
  octaves 2
  addUserKnob {7 amp l "Global Size" R 0 200}
  amp 26
  addUserKnob {7 falloff l Falloff R 0 5}
  falloff 1.12
  addUserKnob {7 luc l Lucanarity R 0 9}
  luc 1
  addUserKnob {7 gain l Multiply R 0 9}
  gain 1
  addUserKnob {26 ""}
  addUserKnob {13 size l Size}
  size {1 1 1}
  addUserKnob {13 pos l Position}
 }
push $Nc57f4f20
 Expression {
  temp_name0 evo
  temp_expr0 parent.pos.x+parent.pos.y+parent.pos.z
  temp_name1 R
  temp_expr1 "pow(turbulence((r/parent.size.r)+evo, (g/parent.size.r)+evo, (b/parent.size.r)+evo, parent.oct, parent.lac, parent.multiply),1/parent.falloff)"
  temp_name2 G
  temp_expr2 "pow(turbulence((r/parent.size.g)+evo, (g/parent.size.g)+evo, (b/parent.size.g)+evo, parent.oct, parent.lac, parent.multiply),1/parent.falloff)"
  temp_name3 B
  temp_expr3 "pow(turbulence((r/parent.size.b)+evo, (g/parent.size.b)+evo, (b/parent.size.b)+evo, parent.oct, parent.lac, parent.multiply),1/parent.falloff)"
  expr0 R
  expr1 G
  expr2 B
  channel3 alpha
  expr3 clamp(R+G+B)
  name Turbulence
  xpos -700
  ypos 110
  addUserKnob {20 User}
  addUserKnob {4 algo l "Noise type" M {"Regular Noise" "Turbulence\nNoise" "Fractal Brownian Motion"}}
  addUserKnob {3 octaves l "Octaves "}
  octaves 2
  addUserKnob {7 amp l "Global Size" R 0 200}
  amp 26
  addUserKnob {7 falloff l Falloff R 0 5}
  falloff 1.12
  addUserKnob {7 luc l Lucanarity R 0 9}
  luc 1
  addUserKnob {7 gain l Multiply R 0 9}
  gain 1
  addUserKnob {26 ""}
  addUserKnob {13 size l Size}
  size {1 1 1}
  addUserKnob {13 pos l Position}
 }
push $Nc57f4f20
 Expression {
  temp_name0 evo
  temp_expr0 parent.pos.x+parent.pos.y+parent.pos.z
  temp_name1 R
  temp_expr1 "pow(fBm((r/parent.size.r)+evo, (g/parent.size.r)+evo, (b/parent.size.r)+evo, parent.oct, parent.lac, parent.multiply),1/parent.falloff)"
  temp_name2 G
  temp_expr2 "pow(fBm((r/parent.size.g)+evo, (g/parent.size.g)+evo, (b/parent.size.g)+evo, parent.oct, parent.lac, parent.multiply),1/parent.falloff)"
  temp_name3 B
  temp_expr3 "pow(fBm((r/parent.size.b)+evo, (g/parent.size.b)+evo, (b/parent.size.b)+evo, parent.oct, parent.lac, parent.multiply),1/parent.falloff)"
  expr0 R
  expr1 G
  expr2 B
  channel3 alpha
  expr3 clamp(R+G+B)
  name fBm
  xpos -810
  ypos 110
  addUserKnob {20 User}
  addUserKnob {4 algo l "Noise type" M {"Regular Noise" "Turbulence\nNoise" "Fractal Brownian Motion"}}
  addUserKnob {3 octaves l "Octaves "}
  octaves 2
  addUserKnob {7 amp l "Global Size" R 0 200}
  amp 26
  addUserKnob {7 falloff l Falloff R 0 5}
  falloff 1.12
  addUserKnob {7 luc l Lucanarity R 0 9}
  luc 1
  addUserKnob {7 gain l Multiply R 0 9}
  gain 1
  addUserKnob {26 ""}
  addUserKnob {13 size l Size}
  size {1 1 1}
  addUserKnob {13 pos l Position}
 }
push $Nc57f4f20
 Expression {
  temp_name0 evo
  temp_expr0 parent.pos.x+parent.pos.y+parent.pos.z
  temp_name1 R
  temp_expr1 "pow(noise((r/parent.size.r)+evo, (g/parent.size.r)+evo, (b/parent.size.r)+evo),1/parent.falloff)"
  temp_name2 G
  temp_expr2 "pow(noise((r/parent.size.g)+evo, (g/parent.size.g)+evo, (b/parent.size.g)+evo),1/parent.falloff)"
  temp_name3 B
  temp_expr3 "pow(noise((r/parent.size.b)+evo, (g/parent.size.b)+evo, (b/parent.size.b)+evo),1/parent.falloff)"
  expr0 R
  expr1 G
  expr2 B
  channel3 alpha
  expr3 clamp(R+G+B)
  name Noiz
  xpos -920
  ypos 110
  addUserKnob {20 User}
  addUserKnob {4 algo l "Noise type" M {"Regular Noise" "Turbulence\nNoise" "Fractal Brownian Motion"}}
  addUserKnob {3 octaves l "Octaves "}
  octaves 2
  addUserKnob {7 amp l "Global Size" R 0 200}
  amp 26
  addUserKnob {7 falloff l Falloff R 0 5}
  falloff 1.12
  addUserKnob {7 luc l Lucanarity R 0 9}
  luc 1
  addUserKnob {7 gain l Multiply R 0 9}
  gain 1
  addUserKnob {26 ""}
  addUserKnob {13 size l Size}
  size {1 1 1}
  addUserKnob {13 pos l Position}
 }
 Switch {
  inputs 6
  which {{parent.noiseType}}
  name Switch1
  xpos -590
  ypos 278
 }
 Output {
  name Output1
  xpos -590
  ypos 350
 }
end_group
push $cut_paste_input
Group {
 name N_DistantLight
 tile_color 0x21807bff
 note_font_color 0xc6f9ffff
 selected true
 xpos 4058
 ypos 1253
 addUserKnob {20 User l N_Distant_Light}
 addUserKnob {41 in l "input channel" T input_channel.in}
 addUserKnob {41 about l X T Expression1.about}
 addUserKnob {41 round l Y T Expression1.round}
 addUserKnob {41 ClampAlpha l "Clamp negative alpha values" T Expression1.ClampAlpha}
}
 Input {
  inputs 0
  name N
  xpos -148
  ypos -362
 }
 Shuffle {
  in {N.X N.Y N.Z N.red}
  name input_channel
  xpos -148
  ypos -278
 }
 Expression {
  temp_name0 m
  temp_expr0 max((r*norm.r)+(g*norm.g)+(b*norm.b),0)
  expr3 ClampAlpha?clamp(m,0,m):m
  name Expression1
  selected true
  xpos -148
  ypos -197
  addUserKnob {20 User}
  addUserKnob {7 round R -180 180}
  round -2
  addUserKnob {7 about R -180 180}
  about 122
  addUserKnob {7 lx}
  lx {{rad*cos(radians(round)) x1 0}}
  addUserKnob {7 ly}
  ly {{sin(radians(about))}}
  addUserKnob {7 lz}
  lz {{rad*sin(radians(round))}}
  addUserKnob {7 rad}
  rad {{cos(radians(about))}}
  addUserKnob {18 norm}
  norm {{lx/sqrt(pow2(lx)+pow2(ly)+pow2(lz))} {ly/sqrt(pow2(lx)+pow2(ly)+pow2(lz))} {lz/sqrt(pow2(lx)+pow2(ly)+pow2(lz))}}
  addUserKnob {6 norm_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 norm_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 norm_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 ClampAlpha l "Clamp Negative Alpha Values" +STARTLINE}
  ClampAlpha true
 }
 Output {
  name Output1
  xpos -148
  ypos -77
 }
end_group
push $cut_paste_input
Group {
 name N_DepthBubble
 help "Version of Depth Bubble with an inner radius setting.  Leaving this at 0 will give the same result as before.  Values up to the radius value will allow an inner radius to be set.\n\nThere's also a dropdown list for fallof method - linear, smoothstep or cubic.\n\nv3 update - You can now scale the bubble in x, y and z world space.\n\n - Steve Newbold 2011 \n\nRotation and Stackable functuionality  added, Visualize in 3D\nif this is first in the stack, opperation should be set to IN\n\n- Daniel Velikov 2016"
 selected true
 xpos 4070
 ypos 1322
 addUserKnob {20 User l N_Depth_Bubble}
 addUserKnob {41 in l "input channel" T Shuffle_Input_Channels.in}
 addUserKnob {26 ""}
 addUserKnob {41 pos_center T Depth_Bubble.pos_center}
 addUserKnob {41 radius T Depth_Bubble.radius}
 addUserKnob {7 inner_radius l "inner radius" R 0 100}
 inner_radius 6
 addUserKnob {4 falloff l "Alpha falloff" M {linear smoothstep cubic ""}}
 addUserKnob {41 operation l "Alpha mode" T ChannelMerge1.operation}
 addUserKnob {20 vis l Visualize n 1}
 addUserKnob {6 in3D l "Show in 3D" +STARTLINE}
 addUserKnob {41 detail l "Point detail" T PositionToPoints1.detail}
 addUserKnob {41 pointSize l "Point size" T PositionToPoints1.pointSize}
 addUserKnob {20 endGroup n -1}
 addUserKnob {20 scl l Scale n 1}
 addUserKnob {41 xscale T Depth_Bubble.xscale}
 addUserKnob {41 yscale T Depth_Bubble.yscale}
 addUserKnob {41 zscale T Depth_Bubble.zscale}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {20 rot l Rotation n 1}
 addUserKnob {7 rotateX l "rotate X" t "Rotates the matte around the X axis based on the position of the max point" R -180 180}
 addUserKnob {7 rotateY l "rotate Y" t "Rotates the matte around the Y axis based on the position of the max point" R -180 180}
 addUserKnob {7 rotateZ l "rotate Z" t "Rotates the matte around the Z axis based on the position of the max point" R -180 180}
 addUserKnob {20 endGroup_2 l endGroup n -1}
 addUserKnob {20 ofs l Offsets n 1}
 addUserKnob {41 offset T Depth_Bubble.offset}
 addUserKnob {41 round T Depth_Bubble.round}
 addUserKnob {41 about T Depth_Bubble.about}
 addUserKnob {20 endGroup_3 l endGroup n -1}
}
 Input {
  inputs 0
  name position_img
  xpos -469
  ypos -685
 }
set Nbdef3da0 [stack 0]
 Shuffle {
  in P
  alpha black
  name Shuffle_Input_Channels
  xpos -469
  ypos -635
 }
set Nbdef86c0 [stack 0]
 Add {
  value {{-(pos_center.r)} {-(pos_center.g)} {-(pos_center.b)} 0}
  name Add1
  xpos -469
  ypos -596
  disable {{rotateX+rotateY+rotateZ==0.0}}
 }
 ColorMatrix {
  matrix {
      {1 0 0}
      {0 {cos(radians(angle))} {-sin(radians(angle))}}
      {0 {sin(radians(angle))} {cos(radians(angle))}}
    }
  name X
  xpos -469
  ypos -552
  disable {{Add1.disable}}
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateX}}
 }
 ColorMatrix {
  matrix {
      {{cos(radians(angle))} 0 {sin(radians(angle))}}
      {0 1 0}
      {{-sin(radians(angle))} 0 {cos(radians(angle)) x1001 1}}
    }
  name Y
  xpos -469
  ypos -524
  disable {{Add1.disable}}
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateY}}
 }
 ColorMatrix {
  matrix {
      {{cos(radians(angle))} {-sin(radians(angle))} 1.224646799e-16}
      {{sin(radians(angle))} {cos(radians(angle))} 0}
      {0 0 1}
    }
  name Z
  xpos -469
  ypos -496
  disable {{Add1.disable}}
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateZ}}
 }
 Add {
  value {{(pos_center.r)} {(pos_center.g)} {(pos_center.b)} 0}
  name Add3
  xpos -469
  ypos -460
  disable {{Add1.disable}}
 }
 Expression {
  temp_name0 x
  temp_expr0 (pos_center.r-r)+((offset*cos(radians(about)))*cos(radians(round)))
  temp_name1 y
  temp_expr1 (pos_center.g-g)+(offset*sin(radians(about)))
  temp_name2 z
  temp_expr2 (pos_center.b-b)+((offset*cos(radians(about)))*sin(radians(round)))
  expr3 "r == 0 && g == 0 && b == 0?0:(xscale != 1 || yscale != 1 || zscale != 1?1-(sqrt(pow2(x)/pow2(xscale)+pow2(y)/pow2(yscale)+pow2(z)/pow2(zscale))/radius):1-(sqrt(pow2(x)+pow2(y)+pow2(z))/radius))"
  name Depth_Bubble
  xpos -469
  ypos -298
  addUserKnob {20 User}
  addUserKnob {7 xscale}
  xscale 1
  addUserKnob {7 yscale}
  yscale 1
  addUserKnob {7 zscale}
  zscale 1
  addUserKnob {18 pos_center}
  pos_center {-469.25 65.8125 -215.375}
  addUserKnob {6 pos_center_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 pos_center_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 pos_center_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {7 radius R 0 100}
  radius 11
  addUserKnob {7 offset R -100 100}
  addUserKnob {7 round R -180 180}
  addUserKnob {7 about R -180 180}
 }
 Grade {
  channels alpha
  whitepoint {{"1-(min(parent.inner_radius, parent.radius)*(1/parent.radius))"}}
  white_clamp true
  name Inner_Radius
  xpos -469
  ypos -264
 }
 Dot {
  name Dot7
  xpos -435
  ypos -117
 }
set Nbd8fafd0 [stack 0]
 Expression {
  expr3 "clamp(pow(a, 2))"
  name Cubic
  xpos -371
  ypos -121
 }
push $Nbd8fafd0
 Expression {
  expr3 "clamp(smoothstep(0, 1, a))"
  name Smoothstep
  xpos -550
  ypos -121
 }
push $Nbd8fafd0
 Switch {
  inputs 3
  which {{parent.falloff}}
  name Switch1
  xpos -469
  ypos -79
 }
set Nbd6fbe10 [stack 0]
 Dot {
  name Dot6
  xpos -774
  ypos -75
 }
 Expression {
  channel0 {rgba.red -rgba.green -rgba.blue none}
  expr0 a
  channel1 {-rgba.red rgba.green rgba.blue none}
  expr1 0
  channel2 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr2 1
  channel3 none
  name Expression1
  xpos -808
  ypos -2
 }
push $Nbdef86c0
 Dot {
  name Dot3
  xpos -579
  ypos -631
 }
 Dot {
  name Dot4
  xpos -574
  ypos 73
 }
 PositionToPoints {
  inputs 2
  display textured
  selectable false
  render_mode off
  cast_shadow false
  receive_shadow false
  detail 0.025
  name PositionToPoints1
  xpos -808
  ypos 69
  disable {{!in3D x1 1}}
 }
set Nbd3f0bd0 [stack 0]
 Dot {
  name Dot5
  xpos -774
  ypos 228
 }
push $Nbdef3da0
 Dot {
  name Dot1
  xpos -58
  ypos -675
 }
 Dot {
  name Dot2
  xpos -58
  ypos 40
 }
push $Nbd6fbe10
 ChannelMerge {
  inputs 2
  operation in
  name ChannelMerge1
  xpos -469
  ypos 24
 }
 Switch {
  inputs 2
  which {{in3D}}
  name Switch3
  xpos -469
  ypos 224
 }
 Output {
  name Output1
  xpos -469
  ypos 342
 }
push $Nbd3f0bd0
 Viewer {
  center_fstop -1
  input_process false
  name Viewer1
  xpos -698
  ypos 4
 }
end_group
push $cut_paste_input
Group {
 name N_DepthSlice
 selected true
 xpos 4072
 ypos 1389
 addUserKnob {20 DepthSliceRotate}
 addUserKnob {41 in l "input channel" T Shuffle12.in}
 addUserKnob {4 axis M {X Y Z}}
 addUserKnob {41 min T Color_Picker.min}
 addUserKnob {41 max T Color_Picker.max}
 addUserKnob {20 Rotation n 1}
 addUserKnob {4 rotationorder l "rotation order" M {XYZ XZY YXZ YZX ZXY ZYX}}
 addUserKnob {7 rotateX l "rotate X" t "Rotates the matte around the X axis based on the position of the max point" R -180 180}
 addUserKnob {7 rotateY l "rotate Y" t "Rotates the matte around the Y axis based on the position of the max point" R -180 180}
 addUserKnob {7 rotateZ l "rotate Z" t "Rotates the matte around the Z axis based on the position of the max point" R -180 180}
 addUserKnob {20 endGroup n -1}
}
 Input {
  inputs 0
  name position_img
  xpos -459
  ypos -413
 }
 Shuffle {
  name Shuffle12
  xpos -459
  ypos -353
 }
 Add {
  value {{-(parent.Color_Picker.max.r+parent.Color_Picker.min.r)/2} {-(parent.Color_Picker.max.g+parent.Color_Picker.min.g)/2} {-(parent.Color_Picker.max.b+parent.Color_Picker.min.b)/2} 0}
  name Add1
  xpos -459
  ypos -295
 }
set Nbf7fa490 [stack 0]
 ColorMatrix {
  matrix {
      {{cos(radians(angle))} {-sin(radians(angle))} 1.224646799e-16}
      {{sin(radians(angle))} {cos(radians(angle))} 0}
      {0 0 1}
    }
  name ColorMatrixRotateZ5
  xpos -181
  ypos -162
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateZ}}
 }
 ColorMatrix {
  matrix {
      {{cos(radians(angle))} 0 {sin(radians(angle))}}
      {0 1 0}
      {{-sin(radians(angle))} 0 {cos(radians(angle)) x1001 1}}
    }
  name ColorMatrixRotateY5
  xpos -181
  ypos -134
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateY}}
 }
 ColorMatrix {
  matrix {
      {1 0 0}
      {0 {cos(radians(angle))} {-sin(radians(angle))}}
      {0 {sin(radians(angle))} {cos(radians(angle))}}
    }
  name ColorMatrixRotateX5
  xpos -181
  ypos -106
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateX}}
 }
push $Nbf7fa490
 ColorMatrix {
  matrix {
      {{cos(radians(angle))} {-sin(radians(angle))} 1.224646799e-16}
      {{sin(radians(angle))} {cos(radians(angle))} 0}
      {0 0 1}
    }
  name ColorMatrixRotateZ4
  xpos -295
  ypos -161
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateZ}}
 }
 ColorMatrix {
  matrix {
      {1 0 0}
      {0 {cos(radians(angle))} {-sin(radians(angle))}}
      {0 {sin(radians(angle))} {cos(radians(angle))}}
    }
  name ColorMatrixRotateX4
  xpos -295
  ypos -133
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateX}}
 }
 ColorMatrix {
  matrix {
      {{cos(radians(angle))} 0 {sin(radians(angle))}}
      {0 1 0}
      {{-sin(radians(angle))} 0 {cos(radians(angle)) x1001 1}}
    }
  name ColorMatrixRotateY4
  xpos -295
  ypos -105
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateY}}
 }
push $Nbf7fa490
 ColorMatrix {
  matrix {
      {{cos(radians(angle))} 0 {sin(radians(angle))}}
      {0 1 0}
      {{-sin(radians(angle))} 0 {cos(radians(angle)) x1001 1}}
    }
  name ColorMatrixRotateY3
  xpos -407
  ypos -166
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateY}}
 }
 ColorMatrix {
  matrix {
      {{cos(radians(angle))} {-sin(radians(angle))} 1.224646799e-16}
      {{sin(radians(angle))} {cos(radians(angle))} 0}
      {0 0 1}
    }
  name ColorMatrixRotateZ3
  xpos -407
  ypos -138
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateZ}}
 }
 ColorMatrix {
  matrix {
      {1 0 0}
      {0 {cos(radians(angle))} {-sin(radians(angle))}}
      {0 {sin(radians(angle))} {cos(radians(angle))}}
    }
  name ColorMatrixRotateX3
  xpos -407
  ypos -110
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateX}}
 }
push $Nbf7fa490
 ColorMatrix {
  matrix {
      {{cos(radians(angle))} 0 {sin(radians(angle))}}
      {0 1 0}
      {{-sin(radians(angle))} 0 {cos(radians(angle)) x1001 1}}
    }
  name ColorMatrixRotateY2
  xpos -517
  ypos -165
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateY}}
 }
 ColorMatrix {
  matrix {
      {1 0 0}
      {0 {cos(radians(angle))} {-sin(radians(angle))}}
      {0 {sin(radians(angle))} {cos(radians(angle))}}
    }
  name ColorMatrixRotateX2
  xpos -517
  ypos -137
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateX}}
 }
 ColorMatrix {
  matrix {
      {{cos(radians(angle))} {-sin(radians(angle))} 1.224646799e-16}
      {{sin(radians(angle))} {cos(radians(angle))} 0}
      {0 0 1}
    }
  name ColorMatrixRotateZ2
  xpos -517
  ypos -109
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateZ}}
 }
push $Nbf7fa490
 ColorMatrix {
  matrix {
      {1 0 0}
      {0 {cos(radians(angle))} {-sin(radians(angle))}}
      {0 {sin(radians(angle))} {cos(radians(angle))}}
    }
  name ColorMatrixRotateX1
  xpos -632
  ypos -166
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateX}}
 }
 ColorMatrix {
  matrix {
      {{cos(radians(angle))} {-sin(radians(angle))} 1.224646799e-16}
      {{sin(radians(angle))} {cos(radians(angle))} 0}
      {0 0 1}
    }
  name ColorMatrixRotateZ1
  xpos -632
  ypos -138
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateZ}}
 }
 ColorMatrix {
  matrix {
      {{cos(radians(angle))} 0 {sin(radians(angle))}}
      {0 1 0}
      {{-sin(radians(angle))} 0 {cos(radians(angle)) x1001 1}}
    }
  name ColorMatrixRotateY1
  xpos -632
  ypos -110
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateY}}
 }
push $Nbf7fa490
 ColorMatrix {
  matrix {
      {1 0 0}
      {0 {cos(radians(angle))} {-sin(radians(angle))}}
      {0 {sin(radians(angle))} {cos(radians(angle))}}
    }
  name ColorMatrixRotateX
  xpos -736
  ypos -166
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateX}}
 }
 ColorMatrix {
  matrix {
      {{cos(radians(angle))} 0 {sin(radians(angle))}}
      {0 1 0}
      {{-sin(radians(angle))} 0 {cos(radians(angle)) x1001 1}}
    }
  name ColorMatrixRotateY
  xpos -736
  ypos -138
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateY}}
 }
 ColorMatrix {
  matrix {
      {{cos(radians(angle))} {-sin(radians(angle))} 1.224646799e-16}
      {{sin(radians(angle))} {cos(radians(angle))} 0}
      {0 0 1}
    }
  name ColorMatrixRotateZ
  xpos -736
  ypos -110
  addUserKnob {20 User}
  addUserKnob {7 angle R 0 360}
  angle {{parent.rotateZ}}
 }
 Switch {
  inputs 6
  which {{parent.rotationorder i}}
  name Switch1
  xpos -459
  ypos 34
 }
 Add {
  value {{(parent.Color_Picker.max.r+parent.Color_Picker.min.r)/2} {(parent.Color_Picker.max.g+parent.Color_Picker.min.g)/2} {(parent.Color_Picker.max.b+parent.Color_Picker.min.b)/2} 0}
  name Add3
  xpos -459
  ypos 69
 }
 NoOp {
  name Color_Picker
  xpos -459
  ypos 119
  addUserKnob {20 User}
  addUserKnob {18 min}
  min {0 0 0}
  addUserKnob {6 min_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 min_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 min_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 max}
  max {0 0 0}
  addUserKnob {6 max_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 max_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 max_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 }
set Nbe4f6f80 [stack 0]
 Expression {
  expr3 clamp((b-input.min.b)/(input.max.b-input.min.b),0,1)
  name Z
  xpos -354
  ypos 192
 }
push $Nbe4f6f80
 Expression {
  expr3 clamp((g-input.min.g)/(input.max.g-input.min.g),0,1)
  name Y
  xpos -459
  ypos 193
 }
push $Nbe4f6f80
 Expression {
  expr3 clamp((r-input.min.r)/(input.max.r-input.min.r),0,1)
  name X
  xpos -561
  ypos 198
 }
 Switch {
  inputs 3
  which {{axis i}}
  name Switch2
  selected true
  xpos -459
  ypos 266
 }
 Output {
  name Output1
  xpos -459
  ypos 336
 }
end_group
push $cut_paste_input
Group {
 name N_PointLight
 help "Takes normal and position passes to generate a point light in 3d space.\nLight input can be any node containing 3d position info (like an Axis or a Light node).\nYou can then control the position of the Point light by either tweaking that node in the 3d viewer or through its properties panel."
 selected true
 xpos 4076
 ypos 1468
 addUserKnob {20 N_PointLight}
 addUserKnob {41 in l "normal input" t "Select the layer containing normals information from your norm. input" T Shuffle_Norm.in}
 addUserKnob {41 in_1 l "position input" t "Select the layer containing position information from your pos. input" T Shuffle_Pos.in}
 addUserKnob {26 ""}
 addUserKnob {18 colour}
 colour {0.1401666552 0.1826666743 0.3851666451}
 addUserKnob {6 colour_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 colour_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 colour_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 intensity R 0 10}
 intensity 5.15
 addUserKnob {26 ""}
 addUserKnob {4 fallofftype l "falloff type" M {"No Falloff" Linear Quadratic Cubic ""}}
 fallofftype Cubic
 addUserKnob {7 falloff}
 falloff 0.135
}
 Input {
  inputs 0
  name pos
  xpos -316
  ypos -324
  number 1
 }
 Shuffle {
  in P
  out Pos
  name Shuffle_Pos
  selected true
  xpos -316
  ypos -209
 }
 Input {
  inputs 0
  name norm
  xpos -171
  ypos -324
  number 2
 }
 Shuffle {
  in {-N.X -N.Y -N.Z N.red}
  out Normal
  name Shuffle_Norm
  xpos -171
  ypos -273
 }
 Copy {
  inputs 2
  from0 Pos.x
  to0 Pos.x
  from1 Pos.y
  to1 Pos.y
  from2 Pos.z
  to2 Pos.z
  name Copy1
  xpos -171
  ypos -230
 }
set Nba547710 [stack 0]
 Expression {
  expr3 "falloff*sqrt(pow2(light.position.x-Pos.x) + pow2(light.position.y-Pos.y) + pow2(light.position.z-Pos.z))"
  name FALLOFF
  xpos 107
  ypos -211
  addUserKnob {20 User}
 }
set Nba445950 [stack 0]
 Expression {
  expr3 clamp(1/(a*a*a),0,1)
  name Cubic
  xpos 201
  ypos -171
 }
push $Nba547710
 Expression {
  temp_name0 vx
  temp_expr0 "(lightPos.x-Pos.x)/sqrt( pow2(lightPos.x-Pos.x) + pow2(lightPos.y-Pos.y) + pow2(lightPos.z-Pos.z))"
  temp_name1 vy
  temp_expr1 "(lightPos.y-Pos.y)/sqrt( pow2(lightPos.x-Pos.x) + pow2(lightPos.y-Pos.y) + pow2(lightPos.z-Pos.z))"
  temp_name2 vz
  temp_expr2 "(lightPos.z-Pos.z)/sqrt( pow2(lightPos.x-Pos.x) + pow2(lightPos.y-Pos.y) + pow2(lightPos.z-Pos.z))"
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 "(Normal.x*vx + Normal.y*vy + Normal.z*vz)*intensity"
  name POINTLIGHT
  xpos -171
  ypos -73
  addUserKnob {20 User}
  addUserKnob {13 lightPos}
  lightPos {{parent.light.position} {parent.light.position} {parent.light.position}}
  addUserKnob {13 vector}
  addUserKnob {7 dist}
 }
set Nba241d10 [stack 0]
 Dot {
  name Dot1
  xpos -137
  ypos -34
 }
set Nba141530 [stack 0]
 Dot {
  name Dot2
  xpos -137
  ypos 4
 }
set Nba145f20 [stack 0]
 Merge2 {
  inputs 2
  operation multiply
  name Merge3
  xpos 201
  ypos -1
 }
push $Nba445950
 Expression {
  expr3 clamp(1/pow2(a),0,1)
  name Quadratic
  xpos 107
  ypos -171
 }
push $Nba141530
 Merge2 {
  inputs 2
  operation multiply
  name Merge2
  xpos 107
  ypos -39
 }
push $Nba445950
 Expression {
  expr3 clamp(1/a,0,1)
  name Linear
  xpos 11
  ypos -171
 }
push $Nba241d10
 Merge2 {
  inputs 2
  operation multiply
  name Merge1
  xpos 11
  ypos -73
 }
push $Nba145f20
 Switch {
  inputs 4
  which {{fallofftype}}
  name Switch_Falloff
  xpos -171
  ypos 139
 }
 Expression {
  expr0 alpha*colour.r
  expr1 alpha*colour.g
  expr2 alpha*colour.b
  name Expression1
  xpos -171
  ypos 186
 }
 Output {
  name Output1
  xpos -171
  ypos 240
 }
 Input {
  inputs 0
  name light
  xpos -583
  ypos -71
  addUserKnob {20 User}
  addUserKnob {13 position}
  position {{input.translate} {input.translate} {input.translate}}
 }
end_group
push $cut_paste_input
Group {
 name N_Noise3D
 help "Generates a 3D noise pattern on a given position pass.\nSupports fBm (Fractional Brownian Noise) and Turbulent Noise algorithms."
 selected true
 xpos 4082
 ypos 1538
 addUserKnob {20 N_Noise3D}
 addUserKnob {41 in l "position layer" t "Select layer containing position info." T Shuffle1.in}
 addUserKnob {41 channel0 l "output channels" T Expression3.channel0}
 addUserKnob {26 ""}
 addUserKnob {4 noisetype M {fBm turbulent}}
 addUserKnob {13 size}
 size {10 10 10}
 addUserKnob {13 offset}
 addUserKnob {26 ""}
 addUserKnob {3 octaves}
 octaves 3
 addUserKnob {7 lacunarity R 0 5}
 lacunarity 2
 addUserKnob {7 gain}
 gain 0.5
}
 Input {
  inputs 0
  name Input1
  xpos 389
  ypos -308
 }
 Shuffle {
  name Shuffle1
  xpos 389
  ypos -230
 }
 Expression {
  temp_name0 fBmNoise
  temp_expr0 fBm((r+offset.x)*1/size.x,(g+offset.y)*1/size.y,(b+offset.z)*1/size.z,octaves,lacunarity,gain)*.5+0.5
  temp_name1 turbNoise
  temp_expr1 turbulence((r+offset.x)*1/size.x,(g+offset.y)*1/size.y,(b+offset.z)*1/size.z,octaves,lacunarity,gain)
  channel0 rgba
  expr0 noisetype==0?fBmNoise:noisetype==1?turbNoise:0
  name Expression3
  selected true
  xpos 389
  ypos -172
 }
 Output {
  name Output1
  xpos 389
  ypos -44
 }
end_group
push $cut_paste_input
Group {
 name ALEXA_bayer
 tile_color 0x5092ff
 note_font_color 0xe5e5e5ff
 selected true
 xpos 4052
 ypos 1028
 addUserKnob {20 Settings}
 addUserKnob {7 Mix t "Adjust the amount of bayering.\n0 = None\n1 = Full"}
 Mix 0.5
}
 Input {
  inputs 0
  name Input1
  xpos 320
  ypos 617
 }
 Dot {
  name Dot1
  xpos 354
  ypos 686
 }
set Ncbbf5a40 [stack 0]
 Dot {
  name Dot3
  xpos 354
  ypos 1200
 }
set Ncbbfa5c0 [stack 0]
 Dot {
  name Dot8
  xpos 354
  ypos 1465
 }
set Ncbbff190 [stack 0]
 Dot {
  name Dot6
  note_font_size 40
  selected true
  xpos 354
  ypos 1822
 }
set Nc24f9d90 [stack 0]
 Dot {
  name Dot5
  xpos 354
  ypos 1911
 }
set Ncbaf3e20 [stack 0]
push $Nc24f9d90
push $Ncbbff190
push $Ncbbf5a40
 Dot {
  name Dot4
  xpos 543
  ypos 686
 }
 Reformat {
  type scale
  scale {{3414/(input.width)} {2198/(input.height)}}
  filter Impulse
  pbb true
  name Reformat_to_Opengate
  xpos 509
  ypos 735
 }
 Crop {
  box {0 0 3414 2198}
  reformat true
  crop false
  name Opengate_crop_reformat
  xpos 509
  ypos 792
 }
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle_None
  tile_color 0x7f7f7fff
  label NNNN
  xpos 509
  ypos 849
 }
 Grade {
  add 1
  black_clamp false
  name White
  tile_color 0xf2f2f2ff
  xpos 509
  ypos 916
 }
 Expression {
  expr0 ((x+y)%2)==1&&(y%2)==0?r:0
  expr1 ((x+y)%2)==0?g/2:0
  expr2 ((x+y)%2)==1&&(y%2)==1?b:0
  name Expression1
  xpos 509
  ypos 973
 }
 Reformat {
  type scale
  scale {{(1/parent.Reformat_to_Opengate.scale)} {(1/parent.Reformat_to_Opengate.scale)}}
  resize none
  filter Impulse
  pbb true
  name Reformat2
  xpos 509
  ypos 1030
 }
 Matrix {
  channels rgb
  matrix {
      {0 0 0}
      {0 4 0}
      {0 0 0}
    }
  name Matrix_normalize_G
  xpos 509
  ypos 1103
 }
 Dot {
  name Dot11
  xpos 543
  ypos 1341
 }
set Ncb4f0d30 [stack 0]
 Merge2 {
  inputs 2
  operation multiply
  name Merge3
  xpos 509
  ypos 1461
 }
set Ncb4f5880 [stack 0]
push $Ncbbfa5c0
 Dot {
  name Dot9
  xpos 815
  ypos 1200
 }
set Ncb3f5df0 [stack 0]
 Gamma {
  channels rgb
  value 10
  name Gamma1
  xpos 971
  ypos 1196
 }
set Ncb3fb2c0 [stack 0]
 Blur {
  channels rgb
  name Blur1
  xpos 877
  ypos 1262
 }
push $Ncb3fb2c0
 Blur {
  channels rgb
  size 20
  name Blur2
  xpos 1059
  ypos 1262
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge2
  xpos 968
  ypos 1324
 }
 Saturation {
  saturation 0
  name Saturation
  xpos 968
  ypos 1381
 }
 Shuffle {
  red black
  green black
  blue black
  alpha blue
  name Shuffle1
  xpos 968
  ypos 1438
 }
push $Ncb4f0d30
 Dot {
  name Dot10
  xpos 685
  ypos 1341
 }
push $Ncb3f5df0
 Merge2 {
  inputs 2+1
  operation multiply
  name Merge1
  xpos 781
  ypos 1438
 }
set Ncadf39b0 [stack 0]
 Dissolve {
  inputs 2
  which {{parent.Dissolve1.which}}
  name Dissolve2
  xpos 509
  ypos 1611
 }
 Matrix {
  channels rgb
  matrix {
      {0.0625 0.125 0.0625}
      {0.125 0.25 0.125}
      {0.0625 0.125 0.0625}
    }
  name Matrix_diffusion1
  xpos 509
  ypos 1709
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 509
  ypos 1813
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 509
  ypos 1907
 }
push $Ncbaf3e20
 Dot {
  name Dot2
  xpos 354
  ypos 1968
 }
 Dissolve {
  inputs 2
  channels rgba
  which {{parent.Mix}}
  name Dissolve1
  xpos 509
  ypos 1964
 }
 Output {
  name Output1
  xpos 509
  ypos 2089
 }
push $Ncadf39b0
push $Ncb4f5880
 Viewer {
  inputs 2
  frame_range 1001-1029
  input_number 1
  center_fstop -1
  name Viewer1
  xpos -212
  ypos 1231
 }
end_group
push $cut_paste_input
Group {
 name rgb_breakup_from_p
 selected true
 xpos 4038
 ypos 90
}
 Input {
  inputs 0
  name Input1
  xpos 508
  ypos 419
 }
 Dot {
  name Dot115
  note_font_size 40
  xpos 542
  ypos 510
 }
set N7d01cd70 [stack 0]
 Dot {
  name Dot132
  note_font_size 40
  xpos 85
  ypos 510
 }
 Dot {
  name Dot133
  note_font_size 40
  xpos 85
  ypos 630
 }
set N7d215280 [stack 0]
 Dot {
  name Dot134
  note_font_size 40
  xpos -469
  ypos 630
 }
 Dot {
  name Dot135
  note_font_size 40
  xpos -469
  ypos 798
 }
set N7cf14e60 [stack 0]
 Dot {
  name Dot136
  note_font_size 40
  xpos -469
  ypos 894
 }
set N7cf19a70 [stack 0]
 Dot {
  name Dot137
  note_font_size 40
  xpos -469
  ypos 990
 }
set N7cf1e630 [stack 0]
 Dot {
  name Dot138
  note_font_size 40
  xpos -469
  ypos 1110
 }
set N7cd13310 [stack 0]
 Dot {
  name Dot139
  note_font_size 40
  xpos -469
  ypos 1571
 }
set N7cd17f60 [stack 0]
 Dot {
  name Dot128
  note_font_size 40
  xpos -469
  ypos 1863
 }
set N7cd1cad0 [stack 0]
 Dot {
  name Dot129
  note_font_size 40
  xpos -469
  ypos 1959
 }
set N7cc11860 [stack 0]
 Dot {
  name Dot130
  note_font_size 40
  xpos -469
  ypos 2055
 }
set N7cc163a0 [stack 0]
 Dot {
  name Dot131
  note_font_size 40
  xpos -469
  ypos 2175
 }
set N7cc1af60 [stack 0]
 Dot {
  name Dot120
  note_font_size 40
  xpos -469
  ypos 2667
 }
set N7cc1fb20 [stack 0]
 Dot {
  name Dot121
  note_font_size 40
  xpos -469
  ypos 2865
 }
set N7cb147f0 [stack 0]
 Dot {
  name Dot122
  note_font_size 40
  xpos -469
  ypos 2961
 }
set N7cb193b0 [stack 0]
 Dot {
  name Dot123
  note_font_size 40
  xpos -469
  ypos 3057
 }
set N7cb1e020 [stack 0]
 Dot {
  name Dot124
  note_font_size 40
  xpos -469
  ypos 3177
 }
 P_Noise3D.gizmo {
  name P_Noise3D61
  xpos -287
  ypos 3174
  in {P_lig.X P_lig.Y P_lig.Z -P_lig.red}
  output rgba
  noisetype fBm
  size {{parent.P_Noise3D62.size*2} {parent.P_Noise3D62.size*2} {parent.P_Noise3D62.size*2}}
  offset {{parent.P_Noise3D65.offset+53} {parent.P_Noise3D65.offset-148} {parent.P_Noise3D65.offset-183}}
  octaves 4
  lacunarity 2
 }
push $N7cb1e020
 P_Noise3D.gizmo {
  name P_Noise3D62
  xpos -287
  ypos 3054
  in {P_lig.X P_lig.Y P_lig.Z -P_lig.red}
  output rgba
  noisetype fBm
  size {{parent.P_Noise3D63.size*2} {parent.P_Noise3D63.size*2} {parent.P_Noise3D63.size*2}}
  offset {{parent.P_Noise3D65.offset-7753} {parent.P_Noise3D65.offset-341} {parent.P_Noise3D65.offset+713}}
  octaves 4
  lacunarity 2
 }
push $N7cb193b0
 P_Noise3D.gizmo {
  name P_Noise3D63
  xpos -287
  ypos 2958
  in {P_lig.X P_lig.Y P_lig.Z -P_lig.red}
  output rgba
  noisetype fBm
  size {{parent.P_Noise3D64.size*2} {parent.P_Noise3D64.size*2} {parent.P_Noise3D64.size*2}}
  offset {{parent.P_Noise3D65.offset+374} {parent.P_Noise3D65.offset+541} {parent.P_Noise3D65.offset-357}}
  octaves 4
  lacunarity 2
 }
push $N7cb147f0
 P_Noise3D.gizmo {
  name P_Noise3D64
  xpos -287
  ypos 2862
  in {P_lig.X P_lig.Y P_lig.Z -P_lig.red}
  output rgba
  noisetype fBm
  size {{parent.P_Noise3D65.size*2} {parent.P_Noise3D65.size*2} {parent.P_Noise3D65.size*2}}
  offset {{parent.P_Noise3D65.offset+671} {parent.P_Noise3D65.offset-1541} {parent.P_Noise3D65.offset-557}}
  octaves 4
  lacunarity 2
 }
push $N7cc1fb20
 Dot {
  name Dot119
  note_font_size 40
  xpos 77
  ypos 2667
 }
 P_Noise3D.gizmo {
  name P_Noise3D65
  xpos 43
  ypos 2766
  in {P_lig.X P_lig.Y P_lig.Z -P_lig.red}
  output rgba
  noisetype fBm
  size {4.7 {size.x} {size.y}}
  offset {70 -731 663}
  octaves 4
  lacunarity 2
 }
 Merge2 {
  inputs 2
  operation mask
  mix 0.6
  name Merge45
  xpos 43
  ypos 2862
 }
 Merge2 {
  inputs 2
  operation mask
  mix 0.7
  name Merge46
  xpos 43
  ypos 2958
 }
 Merge2 {
  inputs 2
  operation mask
  mix 0.7
  name Merge47
  xpos 43
  ypos 3054
 }
 Merge2 {
  inputs 2
  operation mask
  mix 0.6
  name Merge48
  xpos 43
  ypos 3174
 }
 Grade {
  channels rgba
  white 5
  gamma 0.36
  white_clamp true
  name Grade32
  label "\[value channels]"
  xpos 43
  ypos 3265
 }
 Blur {
  channels rgba
  size 16
  name Blur17
  label "size \[value size] \n\[if \{\[value channels] != \"alpha\"\} \{return \"\[value channels]\"\}]"
  xpos 43
  ypos 3353
 }
push $N7cc1af60
 P_Noise3D.gizmo {
  name P_Noise3D46
  xpos -286
  ypos 2172
  in {P_lig.X P_lig.Y P_lig.Z -P_lig.red}
  output rgba
  noisetype fBm
  size {{parent.P_Noise3D47.size*2} {parent.P_Noise3D47.size*2} {parent.P_Noise3D47.size*2}}
  offset {{parent.P_Noise3D50.offset+53} {parent.P_Noise3D50.offset-148} {parent.P_Noise3D50.offset-183}}
  octaves 4
  lacunarity 2
 }
push $N7cc163a0
 P_Noise3D.gizmo {
  name P_Noise3D47
  xpos -286
  ypos 2052
  in {P_lig.X P_lig.Y P_lig.Z -P_lig.red}
  output rgba
  noisetype fBm
  size {{parent.P_Noise3D48.size*2} {parent.P_Noise3D48.size*2} {parent.P_Noise3D48.size*2}}
  offset {{parent.P_Noise3D50.offset-7753} {parent.P_Noise3D50.offset-341} {parent.P_Noise3D50.offset+713}}
  octaves 4
  lacunarity 2
 }
push $N7cc11860
 P_Noise3D.gizmo {
  name P_Noise3D48
  xpos -286
  ypos 1956
  in {P_lig.X P_lig.Y P_lig.Z -P_lig.red}
  output rgba
  noisetype fBm
  size {{parent.P_Noise3D49.size*2} {parent.P_Noise3D49.size*2} {parent.P_Noise3D49.size*2}}
  offset {{parent.P_Noise3D50.offset+374} {parent.P_Noise3D50.offset+541} {parent.P_Noise3D50.offset-357}}
  octaves 4
  lacunarity 2
 }
push $N7cd1cad0
 P_Noise3D.gizmo {
  name P_Noise3D49
  xpos -286
  ypos 1860
  in {P_lig.X P_lig.Y P_lig.Z -P_lig.red}
  output rgba
  noisetype fBm
  size {{parent.P_Noise3D50.size*2} {parent.P_Noise3D50.size*2} {parent.P_Noise3D50.size*2}}
  offset {{parent.P_Noise3D50.offset+671} {parent.P_Noise3D50.offset-1541} {parent.P_Noise3D50.offset-557}}
  octaves 4
  lacunarity 2
 }
push $N7cd17f60
 Dot {
  name Dot125
  note_font_size 40
  xpos 78
  ypos 1571
 }
 P_Noise3D.gizmo {
  name P_Noise3D50
  xpos 44
  ypos 1764
  in {P_lig.X P_lig.Y P_lig.Z -P_lig.red}
  output rgba
  noisetype fBm
  size {1.7 {size.x} {size.y}}
  offset {70 -431 663}
  octaves 4
  lacunarity 2
 }
 Merge2 {
  inputs 2
  operation mask
  mix 0.8
  name Merge32
  xpos 44
  ypos 1860
 }
 Merge2 {
  inputs 2
  operation mask
  mix 0.7
  name Merge33
  xpos 44
  ypos 1956
 }
 Merge2 {
  inputs 2
  operation mask
  mix 0.7
  name Merge34
  xpos 44
  ypos 2052
 }
 Merge2 {
  inputs 2
  operation mask
  mix 0.7
  name Merge35
  xpos 44
  ypos 2172
 }
 Grade {
  channels rgba
  white 5
  gamma 0.36
  white_clamp true
  name Grade34
  label "\[value channels]"
  xpos 44
  ypos 2263
 }
 Blur {
  channels rgba
  size 16
  name Blur18
  label "size \[value size] \n\[if \{\[value channels] != \"alpha\"\} \{return \"\[value channels]\"\}]"
  xpos 44
  ypos 2351
 }
push $N7cd13310
 P_Noise3D.gizmo {
  name P_Noise3D35
  xpos -279
  ypos 1107
  in {P_lig.X P_lig.Y P_lig.Z -P_lig.red}
  output rgba
  noisetype fBm
  size {{parent.P_Noise3D42.size*2} {parent.P_Noise3D42.size*2} {parent.P_Noise3D42.size*2}}
  offset {{parent.P_Noise3D45.offset+53} {parent.P_Noise3D45.offset-148} {parent.P_Noise3D45.offset-183}}
  octaves 4
  lacunarity 2
 }
push $N7cf1e630
 P_Noise3D.gizmo {
  name P_Noise3D42
  xpos -279
  ypos 987
  in {P_lig.X P_lig.Y P_lig.Z -P_lig.red}
  output rgba
  noisetype fBm
  size {{parent.P_Noise3D43.size*2} {parent.P_Noise3D43.size*2} {parent.P_Noise3D43.size*2}}
  offset {{parent.P_Noise3D45.offset-7753} {parent.P_Noise3D45.offset-341} {parent.P_Noise3D45.offset+713}}
  octaves 4
  lacunarity 2
 }
push $N7cf19a70
 P_Noise3D.gizmo {
  name P_Noise3D43
  xpos -279
  ypos 891
  in {P_lig.X P_lig.Y P_lig.Z -P_lig.red}
  output rgba
  noisetype fBm
  size {{parent.P_Noise3D44.size*2} {parent.P_Noise3D44.size*2} {parent.P_Noise3D44.size*2}}
  offset {{parent.P_Noise3D45.offset+374} {parent.P_Noise3D45.offset+541} {parent.P_Noise3D45.offset-357}}
  octaves 4
  lacunarity 2
 }
push $N7cf14e60
 P_Noise3D.gizmo {
  name P_Noise3D44
  xpos -279
  ypos 795
  in {P_lig.X P_lig.Y P_lig.Z -P_lig.red}
  output rgba
  noisetype fBm
  size {{parent.P_Noise3D45.size*2} {parent.P_Noise3D45.size*2} {parent.P_Noise3D45.size*2}}
  offset {{parent.P_Noise3D45.offset+671} {parent.P_Noise3D45.offset-1541} {parent.P_Noise3D45.offset-557}}
  octaves 4
  lacunarity 2
 }
push $N7d215280
 P_Noise3D.gizmo {
  name P_Noise3D45
  xpos 51
  ypos 703
  in {P_lig.X P_lig.Y P_lig.Z -P_lig.red}
  output rgba
  noisetype fBm
  size {1.7 {size.x} {size.y}}
  offset {10 111 473}
  octaves 4
  lacunarity 2
 }
 Merge2 {
  inputs 2
  operation mask
  mix 0.8
  name Merge36
  xpos 51
  ypos 795
 }
 Merge2 {
  inputs 2
  operation mask
  mix 0.7
  name Merge49
  xpos 51
  ypos 891
 }
 Merge2 {
  inputs 2
  operation mask
  mix 0.7
  name Merge50
  xpos 51
  ypos 987
 }
 Merge2 {
  inputs 2
  operation mask
  mix 0.7
  name Merge51
  xpos 51
  ypos 1107
 }
 Grade {
  channels rgba
  white 5
  gamma 0.36
  white_clamp true
  name Grade36
  label "\[value channels]"
  xpos 51
  ypos 1202
 }
 Blur {
  channels rgba
  size 16
  name Blur24
  label "size \[value size] \n\[if \{\[value channels] != \"alpha\"\} \{return \"\[value channels]\"\}]"
  xpos 51
  ypos 1290
 }
push $N7d01cd70
add_layer {rgb_breakup rgb_breakup.red rgb_breakup.green rgb_breakup.blue}
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgb_breakup.red
  name Copy11
  xpos 508
  ypos 1296
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgb_breakup.green
  name Copy12
  xpos 508
  ypos 2357
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgb_breakup.blue
  name Copy13
  selected true
  xpos 508
  ypos 3359
 }
 Output {
  name Output1
  xpos 508
  ypos 3507
 }
end_group
push $cut_paste_input
Group {
 name DED_ash
 selected true
 xpos 4033
 ypos -211
 addUserKnob {20 Particles}
 addUserKnob {26 tool_name l "" +STARTLINE T "DED Ash setup\nPlease hover over the parameters to get an insight of what they do."}
 addUserKnob {26 ""}
 addUserKnob {26 optimization l "" +STARTLINE T "Optimization\n"}
 addUserKnob {6 switch l "Proxy mode" t "Check this to revert back to default particles without texture or geometry" +STARTLINE}
 switch {{"\$gui?1:0"}}
 addUserKnob {26 ""}
 addUserKnob {26 fgemitdiv l "" +STARTLINE T "Emitter Settings\n"}
 addUserKnob {7 Amount l "Adjust Amount" t "Number of particles emitted every frame." R 0 1000}
 addUserKnob {41 Size T NoOp2.Size}
 addUserKnob {41 Rotate t "Playing with the Y rotation allows you to correct path covered by the particles." T Card3.rotate}
 addUserKnob {41 Scale t "Playing with the X and Z scale increases/decreases the spread of the particles." T TransformGeo1.scaling}
 addUserKnob {41 Pivot t "Playing with the X pivot pushes/pulls the whole setup to add more concentration on FG or MG particles." T Card3.pivot}
 addUserKnob {26 first_divider l "" +STARTLINE}
 addUserKnob {26 Global_Turbulence l "" +STARTLINE T "Global Turbulence\n"}
 addUserKnob {41 Turbulence_Strength l Strength T NoOp2.Turbulence_Strength}
 addUserKnob {26 second_divider l "" +STARTLINE}
 addUserKnob {26 Remove l "" +STARTLINE T "Remove FG particles\n"}
 addUserKnob {7 DeepCrop l "Units Cropped" t "The number stands for units from camera in Nuke's 3D space.\n\n0: no particles will be held out. \n\n100: all particles standing within 100 units, from the camera's viewpoint, will be cut out." R 0 100}
 addUserKnob {7 Falloff t "Increase the number to have a more gradual cut out of the FG particles.\n\n0 = Rough\n10 = Soft" R 0 10}
 addUserKnob {20 wind l "Wind Control"}
 addUserKnob {41 Reference_Frame l "Reference Frame" T Wind_Control1.Reference_Frame}
 addUserKnob {26 ""}
 addUserKnob {26 xdir l "" +STARTLINE T "Negative goes Left\nPositive goes Right\n"}
 addUserKnob {41 xWind l "X Axis Direction" T Wind_Control1.xWind}
 addUserKnob {26 ""}
 addUserKnob {26 ydir l "" +STARTLINE T "Positive goes Up\nNegative goes Down\n"}
 addUserKnob {41 yWind l "Y Axis Direction" T Wind_Control1.yWind}
 addUserKnob {26 ""}
 addUserKnob {26 zdir l "" +STARTLINE T "Positive is Pushing\nNegative is Pulling\n"}
 addUserKnob {41 zWind l "Z Axis Direction" T Wind_Control1.zWind}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x584368ff
  label "Emitter position from camera's path"
  note_font_size 80
  xpos -2037
  ypos -2290
  bdwidth 1358
  bdheight 1287
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x802222ff
  label "CAMERA\n"
  note_font_size 100
  xpos -1470
  ypos -2988
  bdwidth 411
  bdheight 363
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x474747ff
  label "Ash textures"
  note_font_size 42
  xpos -4008
  ypos -689
  bdwidth 1951
  bdheight 2307
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x378e3fff
  label "Preview mode"
  note_font_size 42
  xpos -1871
  ypos 774
  bdwidth 288
  bdheight 837
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0x8e8e3800
  label "WIND DIRECTION"
  note_font_size 42
  xpos -360
  ypos 2386
  bdwidth 662
  bdheight 472
  z_order 1
 }
 BackdropNode {
  inputs 0
  name BackdropNode8
  tile_color 0x388e8e00
  label "GANG Controller"
  note_font_size 42
  xpos -1050
  ypos 1780
  bdwidth 328
  bdheight 208
  z_order 1
 }
 Input {
  inputs 0
  name Camera
  xpos -1355
  ypos -2834
 }
 Dot {
  name Dot4
  tile_color 0xff00ff
  label "SHOT\nCAMERA"
  note_font_size 50
  xpos -1321
  ypos -2720
 }
 Dot {
  name Dot27
  note_font_size 40
  xpos -1321
  ypos -2393
 }
set Nc04fd7a0 [stack 0]
 Dot {
  name Dot5
  xpos 887
  ypos -2393
 }
 Dot {
  name Dot15
  note_font_size 40
  xpos 887
  ypos 2448
 }
set Nb83a69a0 [stack 0]
 FrameHold {
  first_frame {{parent.Wind_Control1.Reference_Frame}}
  name Cam_Ref_Frame1
  label "DONT DELETE"
  xpos 161
  ypos 2433
 }
 Dot {
  name Dot22
  note_font_size 40
  xpos 16
  ypos 2448
 }
 Axis2 {
  name Pos_Read1
  label "DONT DELETE"
  xpos -8
  ypos 2513
 }
 Axis2 {
  inputs 0
  useMatrix true
  matrix {
      {{parent.Pos_Read1.world_matrix(parent.Cam_Ref_Frame1.knob.first_frame)} {parent.Pos_Read1.world_matrix(parent.Cam_Ref_Frame1.knob.first_frame)} {parent.Pos_Read1.world_matrix(parent.Cam_Ref_Frame1.knob.first_frame)} {parent.Pos_Read1.world_matrix(parent.Cam_Ref_Frame1.knob.first_frame)}}
      {{parent.Pos_Read1.world_matrix(parent.Cam_Ref_Frame1.knob.first_frame)} {parent.Pos_Read1.world_matrix(parent.Cam_Ref_Frame1.knob.first_frame)} {parent.Pos_Read1.world_matrix(parent.Cam_Ref_Frame1.knob.first_frame)} {parent.Pos_Read1.world_matrix(parent.Cam_Ref_Frame1.knob.first_frame)}}
      {{parent.Pos_Read1.world_matrix(parent.Cam_Ref_Frame1.knob.first_frame)} {parent.Pos_Read1.world_matrix(parent.Cam_Ref_Frame1.knob.first_frame)} {parent.Pos_Read1.world_matrix(parent.Cam_Ref_Frame1.knob.first_frame)} {parent.Pos_Read1.world_matrix(parent.Cam_Ref_Frame1.knob.first_frame)}}
      {{parent.Pos_Read1.world_matrix(parent.Cam_Ref_Frame1.knob.first_frame)} {parent.Pos_Read1.world_matrix(parent.Cam_Ref_Frame1.knob.first_frame)} {parent.Pos_Read1.world_matrix(parent.Cam_Ref_Frame1.knob.first_frame)} {parent.Pos_Read1.world_matrix(parent.Cam_Ref_Frame1.knob.first_frame)}}
    }
  name Hold_Cam1
  label "DONT DELETE"
  xpos -11
  ypos 2621
 }
 Axis2 {
  translate {{parent.Wind_Control1.xWind} {parent.Wind_Control1.yWind} {parent.Wind_Control1.zWind*-1}}
  name Wind_Dir1
  label "DONT DELETE"
  xpos -11
  ypos 2733
 }
 Switch {
  inputs 0
  which {{parent.switch}}
  name Switch1
  xpos -1786
  ypos 883
 }
 NoOp {
  inputs 0
  name Wind_Control1
  label "Wind Direction\nController"
  note_font_size 20
  xpos 158
  ypos 2729
  addUserKnob {20 User}
  addUserKnob {3 Reference_Frame l "Reference Frame" t "Input the frame number that you're using to determine the direction of the wind in the scene."}
  Reference_Frame 1001
  addUserKnob {26 ""}
  addUserKnob {26 xdir l "" +STARTLINE T "Positive is Right\nNegaitive is Left\n"}
  addUserKnob {7 xWind l "X Axis Direction" t "Positive in X is Left -> Right\nNegative in X is Right -> Left" R -1 1}
  xWind -0.25
  addUserKnob {26 ""}
  addUserKnob {26 ydir l "" +STARTLINE T "Positive is Up\nNegative is Down\n"}
  addUserKnob {7 yWind l "Y Axis Direction" t "Positive in Y is Bottom -> Top\nNegative in Y is Top -> Bottom" R -1 1}
  yWind 0.15
  addUserKnob {26 ""}
  addUserKnob {26 zdir l "" +STARTLINE T "Positive is Away from Camera\nNegative is Towards Camera\n"}
  addUserKnob {7 zWind l "Z Axis Direction" t "Positive in Z is Away from Camera\nNegative in Z is Towards Camera" R -1 1}
  zWind -0.01
 }
 NoOp {
  inputs 0
  name NoOp2
  label "GANG\nCONTROLLER"
  note_font_size 20
  xpos -923
  ypos 1881
  addUserKnob {20 _1 l Controls}
  addUserKnob {26 fgemitdiv l "" +STARTLINE T "\nEmitter"}
  addUserKnob {7 fg_rate l "emission rate" R 0 1000}
  fg_rate {{parent.Amount x900 15000 0}}
  addUserKnob {7 Velocity t "This is the overall speed at which particles will move."}
  Velocity 0.001
  addUserKnob {7 Size l size t "This is number represents the overall size of the particles."}
  Size 1
  addUserKnob {26 ""}
  addUserKnob {26 first_divider l "" +STARTLINE T Turbulence}
  addUserKnob {13 Turbulence_Strength l Strength t "Tweak these numbers to either add chaos or calm down your particles."}
  Turbulence_Strength {0.05 0.05 0.01}
 }
 Input {
  inputs 0
  name DeepHoldout
  xpos -655
  ypos 3694
  number 1
 }
 Dot {
  name Dot100
  label "DEEP MATTES"
  note_font_size 50
  xpos -621
  ypos 3772
 }
push $Nb83a69a0
 Dot {
  name Dot13
  xpos 887
  ypos 3443
 }
 Constant {
  inputs 0
  channels rgb
  color {1 0 0 0}
  format "215 114 0 0 215 114 1 10percent"
  first 1001
  last 1002
  name Constant7
  xpos -3802
  ypos 486
  postage_stamp_frame 1001
 }
 RotoPaint {
  inputs 0
  cliptype none
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x4486a000 x440e0000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0
ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0
ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0
ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0
ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier2 512 bezier
     {{cc
       {f 8192}
       {px 0
        {x3ecccc00 xc0accccd}
        {x43190000 xbf800000}
        {xbecccc00 x40accccd}
        {xbf199a00 xc0733334}
        {x43180000 x41533333}
        {x3f199a00 x40733334}
        {xc0266640 x3fe66660}
        {x4323cccd x41833333}
        {x40266640 xbfe66660}
        {xbf199a00 xbf199990}
        {x43383333 x417ccccd}
        {x3f199a00 x3f199990}
        {x40cccce0 x41066666}
        {x433acccd x40666666}
        {xc0cccce0 xc1066666}
        {x40e66680 xc0800000}
        {x4323999a xc169999a}
        {xc0e66680 x40800000}}}     idem}
     {tx 0 x43273bbc x40b22220}
     {a osw x41200000 osf 0 str 1 spx x45000000 spy x44870000 sb 1 ltn 0
ltm 0 tt x40800000}}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px 0
        {xc099999c xc04cccd0}
        {x41cb3333 x41500000}
        {x4099999c x404cccd0}
        {xc0a00000 xbfccccc0}
        {x422f3333 x41d1999a}
        {x40a00000 x3fccccc0}
        {xc0733340 xbfccccd0}
        {x42740000 x41f4cccd}
        {x40733340 x3fccccd0}
        {0 x3fb33330}
        {x428e6666 x41e33333}
        {0 xbfb33330}
        {x41299994 x40266668}
        {x425b3333 x41933333}
        {xc1299998 xc0266664}
        {x40666660 x40b9999a}
        {x42240000 x416ccccd}
        {xc0666660 xc0b9999a}
        {x3fcccce0 0}
        {x41f9999a x40000000}
        {xbfccccd0 0}
        {x3fccccc8 xc0866666}
        {x41333333 x4099999a}
        {xbfccccc8 x40866666}}}     idem}
     {tx 0 x4229cccd x418a3334}
     {a osw x41200000 osf 0 str 1 spx x45000000 spy x44870000 sb 1 ltn 0
ltm 0 tt x40800000}}}}}}
  toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
  toolbar_brush_hardness 0.200000003
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {2048 1080}
  colorOverlay {0 0 0 0}
  lifetime_type "all frames"
  lifetime_start 0
  lifetime_end 0
  motionblur_shutter_offset_type centred
  source_black_outside true
  name RotoPaint9
  xpos -2465
  ypos -171
  postage_stamp_frame 1001
 }
 Blur {
  channels rgba
  size 2
  name Blur6
  xpos -2465
  ypos -98
  postage_stamp_frame 1001
 }
 Noise {
  inputs 0
  size 2500
  zoffset -5575
  center {1138 733}
  name Noise6
  xpos -2305
  ypos -588
 }
 Reformat {
  format "215 114 0 0 215 114 1 10percent"
  name Reformat11
  xpos -2305
  ypos -499
  postage_stamp_frame 1001
 }
 ColorCorrect {
  channels rgba
  contrast 4
  name ColorCorrect6
  xpos -2305
  ypos -351
 }
 Clamp {
  name Clamp6
  xpos -2305
  ypos -254
 }
 Multiply {
  inputs 1+1
  channels rgba
  value 0
  name Multiply14
  xpos -2305
  ypos -98
  postage_stamp_frame 1001
 }
 Multiply {
  channels alpha
  name Multiply15
  xpos -2305
  ypos -37
  postage_stamp_frame 1001
 }
set N898124a0 [stack 0]
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle3
  xpos -2587
  ypos -31
 }
 Roto {
  output alpha
  cliptype none
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44a14000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x4482e000
        {{{x3e93dd80 0 1 x3b5cd64e 1}}
	 {{0 -}}}
        {{{x42242510 0 1 xbf3d90cd 1}}
	 {{x42bacccd -}}}
        {{{xbe93dd80 0 1 xbb5cd64e 1}}
	 {{0 -}}}
        {{{xbf5dcc40 0 1 xbc25a0d9 1}}
	 {{x404ccce0 -}}}
        {{{x4212d118 0 1 xbf4a8158 1}}
	 {{x42a4cccd -}}}
        {{{x3f5dcc80 0 1 x3c25a05d 1}}
	 {{xc04ccce0 -}}}
        {{{x3f8161e0 0 1 x3c413b65 1}}
	 {{x410cccc8 -}}}
        {{{x422141bc 0 1 xbf3fb8e4 1}}
	 {{x42833333 -}}}
        {{{xbf8161e0 0 1 xbc413b84 1}}
	 {{xc10ccccc -}}}
        {{{xc04212e0 0 1 xbd10ec7c 1}}
	 {{x40c66660 -}}}
        {{{x420f59e7 0 1 xbf4d17dc 1}}
	 {{x422e6666 -}}}
        {{{x404212d0 0 1 x3d10ec9b 1}}
	 {{xc0c66660 -}}}
        {{{xc01d1b80 0 1 xbceaa355 1}}
	 {{x40400000 -}}}
        {{{x42278c71 0 1 xbf4a5f80 1}}
	 {{x41cf026f 0 1 xbc6c6ba3 1}}}
        {{{x401d1b70 0 1 x3ceaa393 1}}
	 {{xc0400000 -}}}
        {{{xc0af9728 0 1 xbd831f17 1}}
	 {{x3fb33340 -}}}
        {{{x427e9b85 0 1 xbea22993 1}}
	 {{x4171ad26 0 1 x3dc0177c 1}}}
        {{{x40af9720 0 1 x3d831f27 1}}
	 {{xbfb33340 -}}}
        {{{xc11acbf8 0 1 xbde7303e 1}}
	 {{xbecccd00 -}}}
        {{{x42d2b2d9 0 1 xbe19941f 1}}
	 {{x41222224 0 1 x3e4ede5d 1}}}
        {{{x411acc00 0 1 x3de7301f 1}}
	 {{x3ecccd00 -}}}
        {{{xc0aaf800 0 1 xbd7f583e 1}}
	 {{xbeccccc0 -}}}
        {{{x430e2361 0 1 x3f661a8c 1}}
	 {{x418cf3d0 0 1 x3d93c365 1}}}
        {{{x40aaf840 0 1 x3d7f5746 1}}
	 {{x3eccccc0 -}}}
        {{{xc038d500 0 1 xbd0a05d1 1}}
	 {{xc0000000 -}}}
        {{{x432cd7ae 0 1 x3f2d70a3 1}}
	 {{x41902701 0 1 x3d93c374 1}}}
        {{{x4038d500 0 1 x3d0a05d1 1}}
	 {{x40000000 -}}}
        {{{x3fcb5100 0 1 x3c97d365 1}}
	 {{xc0599998 -}}}
        {{{x432de25a 0 1 x3f4f4000 1}}
	 {{x41f33333 -}}}
        {{{xbfcb5100 0 1 xbc97d365 1}}
	 {{x40599998 -}}}
        {{{x3e13dc00 0 1 x3adcd936 1}}
	 {{xc0333340 -}}}
        {{{x432b92e3 0 1 x3f48594e 1}}
	 {{x423e6666 -}}}
        {{{xbe13dc00 0 1 xbadcd936 1}}
	 {{x40333340 -}}}
        {{{x3e93dc00 0 1 x3b5cd936 1}}
	 {{xc0acccd0 -}}}
        {{{x4331a0a9 0 1 x3f1f9793 1}}
	 {{x427e35a4 0 1 xbcec6c1f 1}}}
        {{{xbe93de00 0 1 xbb5cd174 1}}
	 {{x40acccd0 -}}}
        {{{x408161e0 0 1 x3d413b27 1}}
	 {{xc0a66670 -}}}
        {{{x43257c17 0 1 x3f7dca8c 1}}
	 {{x42987ec6 0 1 x3e38b45d 1}}}
        {{{xc08161e0 0 1 xbd413b27 1}}
	 {{x40a66670 -}}}
        {{{x40a1ba60 0 1 x3d718a2f 1}}
	 {{xbf800000 -}}}
        {{{x431e6ef2 0 1 x3f21193e 1}}
	 {{x42b66666 -}}}
        {{{xc0a1ba60 0 1 xbd718a2f 1}}
	 {{1 -}}}
        {{{x411f6ae0 0 1 x3dee16ca 1}}
	 {{xbe4ccc00 -}}}
        {{{x4301b0a8 0 1 x3e8722ca 1}}
	 {{x42c35556 0 1 xbd4ede8c 1}}}
        {{{xc11f6ae8 0 1 xbdee16ca 1}}
	 {{x3e4ccc00 -}}}
        {{{x413fc360 0 1 x3e0f32d9 1}}
	 {{x3fccccc0 -}}}
        {{{x42ba0a56 0 1 xbe0928e9 1}}
	 {{x42cb94bb 0 1 xbe4017c2 1}}}
        {{{xc13fc360 0 1 xbe0f32d9 1}}
	 {{xbfccccc0 -}}}
        {{{x40a65950 0 1 x3d7870ba 1}}
	 {{x3f199980 -}}}
        {{{x4288f1c3 0 1 xbed73aab 1}}
	 {{x42ba6666 -}}}
        {{{xc0a65948 0 1 xbd7870d9 1}}
	 {{xbf199980 -}}}}}     idem}
     {tx x44870000 x42d8eaea x4267abab}
     {a osw x41200000 osf 0 str 1 spx x44a14000 spy x44870000 sb 1 ltn x44870000 ltm x44870000 tt x40800000}}}}}}
  toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
  toolbar_brush_hardness 0.200000003
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {1290 1080}
  colorOverlay {0 0 0 0}
  lifetime_type "all frames"
  lifetime_start 1080
  lifetime_end 1080
  motionblur_shutter_offset_type centred
  source_black_outside true
  name Roto1
  xpos -2587
  ypos 37
 }
 Blur {
  size 5
  name Blur2
  xpos -2587
  ypos 92
 }
 Dot {
  name Dot19
  note_font_size 40
  xpos -2553
  ypos 182
 }
set N8901f000 [stack 0]
 Dot {
  name Dot3
  note_font_size 40
  xpos -2754
  ypos 182
 }
set N88f13b40 [stack 0]
 Dot {
  name Dot8
  note_font_size 40
  xpos -3344
  ypos 182
 }
 Group {
  name Organic_Edges2
  note_font "Bitstream Vera Sans"
  xpos -3378
  ypos 272
  addUserKnob {20 User l OrganicEdges}
  addUserKnob {41 size_2 l size T Noise1.size}
  addUserKnob {41 zoffset l seed T Noise1.zoffset}
  addUserKnob {41 uv_scale l distortion T IDistort1.uv_scale}
  addUserKnob {41 uv_offset l offset T IDistort1.uv_offset}
  addUserKnob {26 ""}
  addUserKnob {41 size l erode T FilterErode1.size}
  addUserKnob {41 size_1 l blur T Blur1.size}
 }
  Input {
   inputs 0
   name Input1
   xpos -193
   ypos 54
  }
set N88c17b30 [stack 0]
  Shuffle {
   red black
   green black
   blue black
   alpha black
   name Shuffle1
   xpos -360
   ypos 175
  }
set N88c1c1c0 [stack 0]
  Noise {
   output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
   replace true
   size {{Noise1.size*-1}}
   zoffset {{Noise1.zoffset}}
   center {1024 778}
   name Noise2
   xpos -315
   ypos 235
  }
push $N88c1c1c0
  Noise {
   output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
   replace true
   size 7
   zoffset 3.22
   center {1024 778}
   name Noise1
   xpos -426
   ypos 234
  }
  Merge2 {
   inputs 2
   operation plus
   name Merge2
   xpos -356
   ypos 282
  }
  Shuffle {
   out forward
   name Shuffle2
   xpos -356
   ypos 316
  }
push $N88c17b30
  FilterErode {
   name FilterErode1
   xpos -103
   ypos 247
  }
  Copy {
   inputs 2
   from0 -rgba.alpha
   to0 -rgba.alpha
   channels forward
   name Copy1
   xpos -103
   ypos 304
  }
  IDistort {
   channels alpha
   uv forward
   uv_offset 0.2
   uv_scale 7
   filter Mitchell
   name IDistort1
   xpos -103
   ypos 370
  }
  Blur {
   channels alpha
   name Blur1
   xpos -103
   ypos 429
  }
  Output {
   name Output1
   xpos -103
   ypos 529
  }
 end_group
 RotoPaint {
  inputs 0
  cliptype none
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x4486a000 x440e0000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0
ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0
ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0
ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0
ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px
        {0 x447a4000}
        {{{x4049b740 0 1 x3a585d17 1}
       {x407e9780 x3a585d17 1 0 1}}
      {{x404a4880 0 1 xbba9be98 1}
       {xc00194a0 xbba9be98 1 0 1}}}
        {{{x432647e5 0 1 x3c39fe36 1}
       {x4324188d x3c39fe36 1 0 1}}
      {{x42b7f537 0 1 x3b8b9eb9 1}
       {x4252c861 x3b8b9eb9 1 0 1}}}
        {{{xc049b780 0 1 xba585b0c 1}
       {xc07e9740 xba585b0c 1 0 1}}
      {{xc04a4880 0 1 x3ba9bea8 1}
       {x400194c0 x3ba9bea8 1 0 1}}}
        {{{x3fecaa80 0 1 xbae2c904 1}
       {x3def9800 xbae2c904 1 0 1}}
      {{xbef39c00 0 1 xbabb3844 1}
       {xbff3eac0 xbabb3844 1 0 1}}}
        {{{x431bbe52 0 1 x3c9e2ae7 1}
       {x4321859c x3c9e2ae7 1 0 1}}
      {{x42b95f29 0 1 x3c61e2f5 1}
       {x427bc0cf x3c61e2f5 1 0 1}}}
        {{{xbfecaa00 0 1 x3ae2c881 1}
       {xbdef9800 x3ae2c881 1 0 1}}
      {{x3ef39e00 0 1 x3abb37a0 1}
       {x3ff3eaa0 x3abb37a0 1 0 1}}}
        {{{x404b5e80 0 1 xba7a0189 1}
       {x400e4580 xba7a0189 1 0 1}}
      {{x3fa75f00 0 1 xbb8093c2 1}
       {xc027b160 xbb8093c2 1 0 1}}}
        {{{x43120270 0 1 x3cd3049a 1}
       {x431e3ef4 x3cd3049a 1 0 1}}
      {{x42b8ca15 0 1 x3cbe60a0 1}
       {x429037cd x3cbe60a0 1 0 1}}}
        {{{xc04b5e80 0 1 x3a7a0189 1}
       {xc00e4580 x3a7a0189 1 0 1}}
      {{xbfa75e80 0 1 x3b8093b1 1}
       {x4027b180 x3b8093b1 1 0 1}}}
        {{{xbfe21e00 0 1 x3a9ab617 1}
       {xbf15c300 x3a9ab617 1 0 1}}
      {{xbd2f6000 0 1 x3adff025 1}
       {x3fd56d80 x3adff025 1 0 1}}}
        {{{x430fe4a0 0 1 x3ca619cc 1}
       {x4316a413 x3ca619cc 1 0 1}}
      {{x42aa2c29 0 1 x3cf83d30 1}
       {x428fbdd8 x3cf83d30 1 0 1}}}
        {{{x3fe21d00 0 1 xba9ab594 1}
       {x3f15c200 xba9ab594 1 0 1}}
      {{x3d2f6000 0 1 xbadfefe3 1}
       {xbfd56d40 xbadfefe3 1 0 1}}}
        {{{xc00b6d00 0 1 x3ab2049a 1}
       {xbf51aa00 x3ab2049a 1 0 1}}
      {{xbe1f1400 0 1 x3b0eba91 1}
       {x400194a0 x3b0eba91 1 0 1}}}
        {{{x4316fc21 0 1 x3c85ea5c 1}
       {x4319ccc8 x3c85ea5c 1 0 1}}
      {{x42ac385f 0 1 x3cbb3a06 1}
       {x4282e0f8 x3cbb3a06 1 0 1}}}
        {{{x400b6d40 0 1 xbab2051d 1}
       {x3f51aa00 xbab2051d 1 0 1}}
      {{x3e1f1800 0 1 xbb0ebad2 1}
       {xc00194a0 xbb0ebad2 1 0 1}}}
        {{{xbf599100 0 1 x3b0be6f0 1}
       {x3fa4bc80 x3b0be6f0 1 0 1}}
      {{x3fd06380 0 1 xb9a68580 1}
       {x3fa7b180 xb9a68580 1 0 1}}}
        {{{x431ded75 0 1 x3bef7357 1}
       {x4317b1a5 x3bef7357 1 0 1}}
      {{x42a34bcb 0 1 x3c9e7060 1}
       {x4265d6b9 x3c9e7060 1 0 1}}}
        {{{x3f598f00 0 1 xbb0be6ae 1}
       {xbfa4bd00 xbb0be6ae 1 0 1}}
      {{xbfd06400 0 1 x39a6878b 1}
       {xbfa7b180 x39a6878b 1 0 1}}}
        {{{x3f543f00 0 1 x3af3cd5d 1}
       {x402c3980 x3af3cd5d 1 0 1}}
      {{x4023d8c0 0 1 xbb279c84 1}
       {0 xbb279c84 1 0 1}}}
        {{{x432025cb 0 1 xbb05b617 1}
       {x43108e92 xbb05b617 1 0 1}}
      {{x4292daaf 0 1 x3cbbb453 1}
       {x42534257 x3cbbb453 1 0 1}}}
        {{{xbf544000 0 1 xbaf3ccda 1}
       {xc02c3980 xbaf3ccda 1 0 1}}
      {{xc023d900 0 1 x3b279cc5 1}
       {0 x3b279cc5 1 0 1}}}
        {{{x3f984700 0 1 x38cbec90 1}
       {x3fa4bc80 x38cbec90 1 0 1}}
      {{x3f77b000 0 1 xbaebdaa9 1}
       {xbf556d00 xbaebdaa9 1 0 1}}}
        {{{x431e06a8 0 1 xbbeadd79 1}
       {x43094d8c xbbeadd79 1 0 1}}
      {{x4284fa85 0 1 x3cf381ed 1}
       {x4252c861 x3cf381ed 1 0 1}}}
        {{{xbf984700 0 1 xb8cbec90 1}
       {xbfa4bc80 xb8cbec90 1 0 1}}
      {{xbf77b100 0 1 x3aebdb6e 1}
       {x3f556d80 x3aebdb6e 1 0 1}}}
        {{{xbfa81a00 0 1 x3a3eb9ac 1}
       {xbf15c300 x3a3eb9ac 1 0 1}}
      {{xbe422800 0 1 x3ab4c6f8 1}
       {x3f987280 x3ab4c6f8 1 0 1}}}
        {{{x4321e38b 0 1 xbc6a474a 1}
       {x430606e4 xbc6a474a 1 0 1}}
      {{x42772dde 0 1 x3cf003c8 1}
       {x423e4c2d x3cf003c8 1 0 1}}}
        {{{x3fa81a80 0 1 xba3ebab1 1}
       {x3f15c300 xba3ebab1 1 0 1}}
      {{x3e422800 0 1 xbab4c73a 1}
       {xbf9872c0 xbab4c73a 1 0 1}}}
        {{{xbe67f000 0 1 xbb19b0fa 1}
       {xc024bc40 xbb19b0fa 1 0 1}}
      {{xc02876c0 0 1 x3b0558be 1}
       {xbf187300 x3b0558be 1 0 1}}}
        {{{x4328c63f 0 1 xbc3fdcd6 1}
       {x430f8101 xbc3fdcd6 1 0 1}}
      {{x428b0d8f 0 1 x3c8ea033 1}
       {x422d9fa1 x3c8ea033 1 0 1}}}
        {{{x3e67f400 0 1 x3b19b0b8 1}
       {x4024bc40 x3b19b0b8 1 0 1}}
      {{x40287700 0 1 xbb055920 1}
       {x3f187280 xbb055920 1 0 1}}}
        {{{xc03b9040 0 1 x3be5fcce 1}
       {x40830a40 x3be5fcce 1 0 1}}
      {{x40a81c80 0 1 xba5dc116 1}
       {x408d03c0 xba5dc116 1 0 1}}}
        {{{x432ffab4 0 1 xbc2dd2fd 1}
       {x4317cf98 xbc2dd2fd 1 0 1}}
      {{x4297d991 0 1 x3bc932dc 1}
       {x421a1757 x3bc932dc 1 0 1}}}
        {{{x403b9040 0 1 xbbe5fcce 1}
       {xc0830a40 xbbe5fcce 1 0 1}}
      {{xc0a81ca0 0 1 x3a5dc29f 1}
       {xc08d03b0 x3a5dc29f 1 0 1}}}
        {{{xc06aaec0 0 1 x3aadbf0a 1}
       {xc015c2c0 x3aadbf0a 1 0 1}}
      {{xbfa2d500 0 1 x3b8f02f3 1}
       {x40462ec4 x3b8f02f3 1 0 1}}}
        {{{x4345bd51 0 1 xbd1aff89 1}
       {x43124fda xbd1aff89 1 0 1}}
      {{x427c640e 0 1 xbbb9f1c0 1}
       {x415de7c7 xbbb9f1c0 1 0 1}}}
        {{{x406aaec0 0 1 xbaadbf8d 1}
       {x4015c280 xbaadbf8d 1 0 1}}
      {{x3fa2d480 0 1 xbb8f02c8 1}
       {xc0462eb0 xbb8f02c8 1 0 1}}}
        {{{x406273c0 0 1 xbbad473a 1}
       {xbfe0a400 xbbad473a 1 0 1}}
      {{xc03f6640 0 1 xbaa9d403 1}
       {xc0893400 xbaa9d403 1 0 1}}}
        {{{x4341d1e9 0 1 xbcf093a1 1}
       {x4316dffb xbcf093a1 1 0 1}}
      {{x428a53a5 0 1 xbbc94353 1}
       {x419bbbfc xbbc94353 1 0 1}}}
        {{{xc06273c0 0 1 x3bad473a 1}
       {x3fe0a400 x3bad473a 1 0 1}}
      {{x403f6680 0 1 x3aa9d380 1}
       {x40893400 x3aa9d380 1 0 1}}}
        {{{x3fda3900 0 1 xbb978f58 1}
       {xc03b3340 xbb978f58 1 0 1}}
      {{xc0681b80 0 1 x3a68637c 1}
       {xc02f50b0 x3a68637c 1 0 1}}}
        {{{x43391313 0 1 xbc66c53e 1}
       {x431d6d4a xbc66c53e 1 0 1}}
      {{x429dc3e3 0 1 xbb950a8d 1}
       {x41f64014 xbb950a8d 1 0 1}}}
        {{{xbfda3900 0 1 x3b978f58 1}
       {x403b3340 x3b978f58 1 0 1}}
      {{x40681bc0 0 1 xba686440 1}
       {x402f50c0 xba686440 1 0 1}}}
        {{{xbfe60e00 0 1 xbaef9519 1}
       {xc06820c0 xbaef9519 1 0 1}}
      {{xc04ebf00 0 1 x3b81240f 1}
       {x3f36f000 x3b81240f 1 0 1}}}
        {{{x433b7956 0 1 xbb20f854 1}
       {x432b7787 xbb20f854 1 0 1}}
      {{x42b9ba13 0 1 xbc871b6c 1}
       {x42033955 xbc871b6c 1 0 1}}}
        {{{x3fe60e80 0 1 x3aef9519 1}
       {x40682100 x3aef9519 1 0 1}}
      {{x404ebf00 0 1 xbb8123ff 1}
       {xbf36ef80 xbb8123ff 1 0 1}}}
        {{{x3f910b00 0 1 xbb72b553 1}
       {xc024bc40 xbb72b553 1 0 1}}
      {{xc044a540 0 1 x3a893638 1}
       {xc00194a0 x3a893638 1 0 1}}}
        {{{x4337f762 0 1 x3c09d0a0 1}
       {x4332d681 x3c09d0a0 1 0 1}}
      {{x42cb7e9b 0 1 xbc9e19ff 1}
       {x421b8537 xbc9e19ff 1 0 1}}}
        {{{xbf910c00 0 1 x3b72b617 1}
       {x4024bc80 x3b72b617 1 0 1}}
      {{x4044a580 0 1 xba893679 1}
       {x400194c0 xba893679 1 0 1}}}
        {{{x3fa57900 0 1 xbaf5dfc7 1}
       {xbf15c200 xbaf5dfc7 1 0 1}}
      {{xbf844b80 0 1 xba06cd9e 1}
       {xbfc62ec0 xba06cd9e 1 0 1}}}
        {{{x432ebde9 0 1 x3cd461d2 1}
       {x433b2519 x3cd461d2 1 0 1}}
      {{x42e2eecb 0 1 xbc98a405 1}
       {x424d10e1 xbc98a405 1 0 1}}}
        {{{xbfa57880 0 1 x3af5dfc7 1}
       {x3f15c300 x3af5dfc7 1 0 1}}
      {{x3f844c00 0 1 x3a06cc98 1}
       {x3fc62ec0 x3a06cc98 1 0 1}}}
        {{{x3fda3200 0 1 x3a07be88 1}
       {x400e4580 x3a07be88 1 0 1}}
      {{x3fe46d80 0 1 xbb3b0418 1}
       {xbf893400 xbb3b0418 1 0 1}}}
        {{{x43246519 0 1 x3d140d0b 1}
       {x433b0725 x3d140d0b 1 0 1}}
      {{x42e96377 0 1 xbc34b858 1}
       {x42786b17 xbc34b858 1 0 1}}}
        {{{xbfda3280 0 1 xba07bd82 1}
       {xc00e4580 xba07bd82 1 0 1}}
      {{xbfe46e00 0 1 x3b3b048a 1}
       {x3f893460 x3b3b048a 1 0 1}}}
        {{{xbf66c200 0 1 x3b4c8e32 1}
       {x400e4580 x3b4c8e32 1 0 1}}
      {{x40283a80 0 1 xba7bb658 1}
       {x3fd56d80 xba7bb658 1 0 1}}}
        {{{x431e403e 0 1 x3d0a3e15 1}
       {x43327ca6 x3d0a3e15 1 0 1}}
      {{x42db699d 0 1 xb9bd2fd3 1}
       {x428397e8 xb9bd2fd3 1 0 1}}}
        {{{x3f66c200 0 1 xbb4c8e32 1}
       {xc00e4580 xbb4c8e32 1 0 1}}
      {{xc0283a80 0 1 x3a7bb6db 1}
       {xbfd56d40 x3a7bb6db 1 0 1}}}
        {{{xc030e000 0 1 x3ba0b75e 1}
       {x40095680 x3ba0b75e 1 0 1}}
      {{x4049a440 0 1 x39eb500c 1}
       {x40666520 x39eb500c 1 0 1}}}
        {{{x432528ee 0 1 x3cb7d949 1}
       {x432e138f x3cb7d949 1 0 1}}
      {{x42cdaa61 0 1 xbb0e9c53 1}
       {x42646cb3 xbb0e9c53 1 0 1}}}
        {{{x4026dd80 0 1 xbb979f33 1}
       {xc0019140 xbb979f33 1 0 1}}
      {{xc03e3b00 0 1 xb9de0395 1}
       {xc0595be0 xb9de0395 1 0 1}}}}}     idem}
     {tx x447a4000 x43182ccd x426ebd72}
     {a osw x41200000 osf 0 str 1 spx x4486a000 spy x440e0000 sb 1 nv
x40000000 view2 x40000000 ltn x447a4000 ltm x447a4000 tt x40800000}}}}}}
  toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
  toolbar_brush_hardness 0.200000003
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {1077 568}
  colorOverlay {0 0 0 0}
  lifetime_type "all frames"
  lifetime_start 1001
  lifetime_end 1001
  motionblur_shutter_offset_type centred
  source_black_outside true
  name RotoPaint4
  xpos -3883
  ypos -86
  postage_stamp_frame 1001
 }
 Blur {
  channels rgba
  size 2
  name Blur1
  xpos -3883
  ypos -13
  postage_stamp_frame 1001
 }
 Noise {
  inputs 0
  size 2500
  zoffset -1475
  center {1138 733}
  name Noise4
  xpos -3644
  ypos -502
 }
 Reformat {
  format "215 114 0 0 215 114 1 10percent"
  name Reformat12
  xpos -3644
  ypos -414
  postage_stamp_frame 1001
 }
 ColorCorrect {
  channels rgba
  contrast 4
  name ColorCorrect4
  xpos -3644
  ypos -266
 }
 Clamp {
  name Clamp4
  xpos -3644
  ypos -169
 }
 Multiply {
  inputs 1+1
  channels rgba
  value 0
  name Multiply11
  xpos -3644
  ypos -13
  postage_stamp_frame 1001
 }
 Multiply {
  channels alpha
  name Multiply12
  xpos -3644
  ypos 51
  postage_stamp_frame 1001
 }
 Merge2 {
  inputs 2
  operation mask
  name Merge3
  xpos -3644
  ypos 272
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle5
  xpos -3644
  ypos 389
 }
add_layer {particleColor particleColor.red particleColor.green particleColor.blue particleColor.alpha}
 Copy {
  inputs 2
  from0 rgba.red
  to0 particleColor.red
  from1 rgba.green
  to1 particleColor.green
  from2 rgba.blue
  to2 particleColor.blue
  name Copy12
  xpos -3644
  ypos 491
  postage_stamp_frame 1001
 }
 Card2 {
  rows 2
  columns 2
  translate {6.421736907e-05 6.43518797e-05 -0.0009916656418}
  rotate {{"360 * noise(frame/100, 1)" x1071 11.57576192} {"360 *\nnoise(frame/100, 10)" x1071 174.8078591} {"360 * noise(frame/100, 100)" x1071 -34.79513856}}
  uniform_scale 0.5
  type bilinear
  uv_position {0.3564101458 0.3326921761}
  control_points {3 3 3 6 

1 {-0.3339999914 -0.4440000057 -0.150000006} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.06250000745 0} 0 {0 0 0} 0 {0 0 0} 
1 {0.0530000031 -0.4099999964 0.07100000232} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.06250000745 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.4059999883 -0.2680000067 0.2649999857} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.06250000745 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.0625 0} 0 {0 -0.0625 0} 0 {0 0.5 0} 
1 {0.009999999776 -0.0549999997 -0.1620000005} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.0625 0} 0 {0 -0.0625 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.0625 0} 0 {0 -0.0625 0} 0 {1 0.5 0} 
1 {-0.5299999714 0.5500000119 -0.3400000036} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.06250000745 0} 0 {0 1 0} 
1 {-0.01999999955 0.3880000114 0.005999997258} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.06250000745 0} 0 {0.5 1 0} 
1 {0.3819999993 0.3580000103 -0.07999999821} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.06250000745 0} 0 {1 1 0} }
  drawPosition {-0.1102535203 -0.1665461063 -0.07431575656}
  name Card1
  xpos -3644
  ypos 943
 }
 Dot {
  name Dot20
  xpos -3610
  ypos 1545
 }
 Switch {
  which {{parent.Switch1.which}}
  name Switch4
  xpos -1779
  ypos 1542
  postage_stamp_frame 1001
 }
 Constant {
  inputs 0
  channels rgb
  color {0 1 0 0}
  format "215 114 0 0 215 114 1 10percent"
  first 1001
  last 1002
  name Constant8
  xpos -3100
  ypos 479
  postage_stamp_frame 1001
 }
push $N88f13b40
 Group {
  name Organic_Edges1
  note_font "Bitstream Vera Sans"
  xpos -2788
  ypos 281
  addUserKnob {20 User l OrganicEdges}
  addUserKnob {41 size_2 l size T Noise1.size}
  addUserKnob {41 zoffset l seed T Noise1.zoffset}
  addUserKnob {41 uv_scale l distortion T IDistort1.uv_scale}
  addUserKnob {41 uv_offset l offset T IDistort1.uv_offset}
  addUserKnob {26 ""}
  addUserKnob {41 size l erode T FilterErode1.size}
  addUserKnob {41 size_1 l blur T Blur1.size}
 }
  Input {
   inputs 0
   name Input1
   xpos -193
   ypos 54
  }
set N86910100 [stack 0]
  Shuffle {
   red black
   green black
   blue black
   alpha black
   name Shuffle1
   xpos -360
   ypos 175
  }
set N86913ce0 [stack 0]
  Noise {
   output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
   replace true
   size {{Noise1.size*-1}}
   zoffset {{Noise1.zoffset}}
   center {1024 778}
   name Noise2
   xpos -315
   ypos 235
  }
push $N86913ce0
  Noise {
   output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
   replace true
   size 7
   zoffset 1.86
   center {1024 778}
   name Noise1
   xpos -426
   ypos 234
  }
  Merge2 {
   inputs 2
   operation plus
   name Merge2
   xpos -356
   ypos 282
  }
  Shuffle {
   out forward
   name Shuffle2
   xpos -356
   ypos 316
  }
push $N86910100
  FilterErode {
   name FilterErode1
   xpos -103
   ypos 247
  }
  Copy {
   inputs 2
   from0 -rgba.alpha
   to0 -rgba.alpha
   channels forward
   name Copy1
   xpos -103
   ypos 304
  }
  IDistort {
   channels alpha
   uv forward
   uv_offset 0.2
   uv_scale 7
   filter Mitchell
   name IDistort1
   xpos -103
   ypos 370
  }
  Blur {
   channels alpha
   name Blur1
   xpos -103
   ypos 429
  }
  Output {
   name Output1
   xpos -103
   ypos 529
  }
 end_group
 RotoPaint {
  inputs 0
  cliptype none
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x4486a000 x440e0000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0
ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0
ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0
ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0
ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier2 512 bezier
     {{cc
       {f 8192}
       {px 0
        {xc0933340 xbf800000}
        {x43230000 x42813333}
        {x40933340 1}
        {x40000000 x40f99998}
        {x43330000 x42500000}
        {xc0000000 xc0f99998}
        {xc0266640 x3f9999a0}
        {x4339cccd x42073333}
        {x40266640 xbf9999a0}
        {xc1033330 x40800000}
        {x4348999a x41e66666}
        {x41033330 xc0800000}
        {x3f999980 x40000000}
        {x434c3333 x40f9999a}
        {xbf999980 xc0000000}
        {x40800000 x3f4cccd0}
        {x43350000 x40f9999a}
        {xc0800000 xbf4cccd0}
        {xbf199a00 xc00cccd0}
        {x43200000 x41a80000}
        {x3f199a00 x400cccd0}
        {xc00cccc0 xc0ccccc8}
        {x43230000 x420ccccd}
        {x400cccc0 x40ccccc8}
        {x3fcccd00 0}
        {x4329999a x42640000}
        {xbfcccd00 0}}}     idem}
     {tx 0 x43327778 x4208e38e}
     {a osw x41200000 osf 0 str 1 spx x45000000 spy x44870000 sb 1 ltn 0
ltm 0 tt x40800000}}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px 0
        {xbf9999c0 xbf800000}
        {x42d26666 x41a33333}
        {x3f9999c0 1}
        {x3fccccc0 xc04cccd0}
        {x42d46666 x42326666}
        {xbfccccc0 x404cccd0}
        {xc0333320 xc0000000}
        {x42d7999a x4261999a}
        {x40333320 x40000000}
        {xbfe66680 x3f1999c0}
        {x42f40000 x427ccccd}
        {x3fe66680 xbf1999c0}
        {x400cccc0 x41000000}
        {x42f33333 x42480000}
        {xc00cccc0 xc1000000}
        {xbecccc00 1}
        {x42e5999a x41d66666}
        {x3ecccc00 xbf800000}
        {x3ecccd00 x3fe66668}
        {x42eb999a x415ccccd}
        {xbecccd00 xbfe66668}
        {1 x40933334}
        {x42e9999a x40d9999a}
        {xbf800000 xc0933334}
        {x408cccc0 xbf99999c}
        {x42ce6666 x40933333}
        {xc08cccc0 x3f99999c}}}     idem}
     {tx 0 x42e1a4fa x41fec16b}
     {a osw x41200000 osf 0 str 1 spx x45000000 spy x44870000 sb 1 ltn 0
ltm 0 tt x40800000}}}}}}
  toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
  toolbar_brush_hardness 0.200000003
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {2048 1080}
  colorOverlay {0 0 0 0}
  lifetime_type "all frames"
  lifetime_start 0
  lifetime_end 0
  motionblur_shutter_offset_type centred
  source_black_outside true
  name RotoPaint8
  xpos -3175
  ypos -122
  postage_stamp_frame 1001
 }
 Blur {
  channels rgba
  size 2
  name Blur5
  xpos -3175
  ypos -49
  postage_stamp_frame 1001
 }
 Noise {
  inputs 0
  size 1500
  zoffset -4475
  center {1138 733}
  name Noise5
  xpos -2936
  ypos -491
 }
 Reformat {
  format "215 114 0 0 215 114 1 10percent"
  name Reformat10
  xpos -2936
  ypos -401
  postage_stamp_frame 1001
 }
 ColorCorrect {
  channels rgba
  contrast 4
  name ColorCorrect5
  xpos -2936
  ypos -302
 }
 Clamp {
  name Clamp5
  xpos -2936
  ypos -205
 }
 Multiply {
  inputs 1+1
  channels rgba
  value 0
  name Multiply9
  xpos -2936
  ypos -49
  postage_stamp_frame 1001
 }
 Multiply {
  channels alpha
  name Multiply13
  xpos -2936
  ypos 36
  postage_stamp_frame 1001
 }
 Merge2 {
  inputs 2
  operation mask
  name Merge2
  xpos -2936
  ypos 281
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle4
  xpos -2936
  ypos 390
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 particleColor.red
  from1 rgba.green
  to1 particleColor.green
  from2 rgba.blue
  to2 particleColor.blue
  name Copy10
  xpos -2936
  ypos 484
  postage_stamp_frame 1001
 }
 Card2 {
  rows 2
  columns 2
  rotate {{"360 * noise(frame/100, 1)" x1071 11.57576192} {"360 *\nnoise(frame/100, 10)" x1071 174.8078591} {"360 * noise(frame/100, 100)" x1071 -34.79513856}}
  uniform_scale 0.5
  type bilinear
  uv_position {0.3564101458 0.3326921761}
  control_points {3 3 3 6 

1 {-0.3339999914 -0.4440000057 -0.150000006} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.06250000745 0} 0 {0 0 0} 0 {0 0 0} 
1 {0.0530000031 -0.4099999964 0.07100000232} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.06250000745 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.4059999883 -0.2680000067 0.2649999857} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.06250000745 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.0625 0} 0 {0 -0.0625 0} 0 {0 0.5 0} 
1 {0.009999999776 -0.0549999997 -0.1620000005} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.0625 0} 0 {0 -0.0625 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.0625 0} 0 {0 -0.0625 0} 0 {1 0.5 0} 
1 {-0.5299999714 0.5500000119 -0.3400000036} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.06250000745 0} 0 {0 1 0} 
1 {-0.01999999955 0.3880000114 0.005999997258} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.06250000745 0} 0 {0.5 1 0} 
1 {0.3819999993 0.3580000103 -0.07999999821} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.06250000745 0} 0 {1 1 0} }
  drawPosition {-0.1102535203 -0.1665461063 -0.07431575656}
  name Card4
  xpos -2936
  ypos 932
 }
 Dot {
  name Dot18
  xpos -2902
  ypos 1303
 }
 Switch {
  which {{parent.Switch1.which}}
  name Switch5
  xpos -1780
  ypos 1300
  postage_stamp_frame 1001
 }
 Constant {
  inputs 0
  channels rgb
  color {0 0 1 0}
  format "215 114 0 0 215 114 1 10percent"
  first 1001
  last 1002
  name Constant9
  xpos -2469
  ypos 475
  postage_stamp_frame 1001
 }
push $N8901f000
 Group {
  name Organic_Edges
  note_font "Bitstream Vera Sans"
  xpos -2587
  ypos 277
  addUserKnob {20 User l OrganicEdges}
  addUserKnob {41 size_2 l size T Noise1.size}
  addUserKnob {41 zoffset l seed T Noise1.zoffset}
  addUserKnob {41 uv_scale l distortion T IDistort1.uv_scale}
  addUserKnob {41 uv_offset l offset T IDistort1.uv_offset}
  addUserKnob {26 ""}
  addUserKnob {41 size l erode T FilterErode1.size}
  addUserKnob {41 size_1 l blur T Blur1.size}
 }
  Input {
   inputs 0
   name Input1
   xpos -193
   ypos 54
  }
set N84412260 [stack 0]
  Shuffle {
   red black
   green black
   blue black
   alpha black
   name Shuffle1
   xpos -360
   ypos 175
  }
set N84416e60 [stack 0]
  Noise {
   output {rgba.red -rgba.green -rgba.blue -rgba.alpha}
   replace true
   size {{Noise1.size*-1}}
   zoffset {{Noise1.zoffset}}
   center {1024 778}
   name Noise2
   xpos -315
   ypos 235
  }
push $N84416e60
  Noise {
   output {-rgba.red rgba.green -rgba.blue -rgba.alpha}
   replace true
   size 7
   center {1024 778}
   name Noise1
   xpos -426
   ypos 234
  }
  Merge2 {
   inputs 2
   operation plus
   name Merge2
   xpos -356
   ypos 282
  }
  Shuffle {
   out forward
   name Shuffle2
   xpos -356
   ypos 316
  }
push $N84412260
  FilterErode {
   name FilterErode1
   xpos -103
   ypos 247
  }
  Copy {
   inputs 2
   from0 -rgba.alpha
   to0 -rgba.alpha
   channels forward
   name Copy1
   xpos -103
   ypos 304
  }
  IDistort {
   channels alpha
   uv forward
   uv_offset 0.2
   uv_scale 7
   filter Mitchell
   name IDistort1
   xpos -103
   ypos 370
  }
  Blur {
   channels alpha
   name Blur1
   xpos -103
   ypos 429
  }
  Output {
   name Output1
   xpos -103
   ypos 529
  }
 end_group
push $N898124a0
 Merge2 {
  inputs 2
  operation mask
  name Merge1
  xpos -2305
  ypos 277
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle2
  xpos -2305
  ypos 378
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 particleColor.red
  from1 rgba.green
  to1 particleColor.green
  from2 rgba.blue
  to2 particleColor.blue
  name Copy11
  xpos -2305
  ypos 480
  postage_stamp_frame 1001
 }
 Card2 {
  rows 2
  columns 2
  rotate {{"360 * noise(frame/100, 1)" x1071 11.57576192} {"360 *\nnoise(frame/100, 10)" x1071 174.8078591} {"360 * noise(frame/100, 100)" x1071 -34.79513856}}
  uniform_scale 0.5
  type bilinear
  uv_position {0.2833331823 0.3589742184}
  control_points {3 3 3 6 

1 {-0.3000000119 -0.2060000002 -0.03400000185} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.06250000745 0} 0 {0 0 0} 0 {0 0 0} 
1 {0.07999999821 -0.2240000069 0.07800000161} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.06250000745 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.7559999824 -0.2479999959 0.1599999964} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.06250000745 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0.09000000358} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.0625 0} 0 {0 -0.0625 0} 0 {0 0.5 0} 
1 {0.009999999776 -0.0549999997 -0.1620000005} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.0625 0} 0 {0 -0.0625 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.0625 0} 0 {0 -0.0625 0} 0 {1 0.5 0} 
1 {-0.5799999833 0.6399999857 -0.09600000083} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.06250000745 0} 0 {0 1 0} 
1 {0.009999999776 0.2339999974 -0.03200000152} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.06250000745 0} 0 {0.5 1 0} 
1 {0.3700000048 0.4420000017 -0.08799999952} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.06250000745 0} 0 {1 1 0} }
  drawPosition {-0.1753676236 -0.08335559815 -0.02959651127}
  name Card2
  xpos -2305
  ypos 921
 }
 Dot {
  name Dot17
  xpos -2271
  ypos 1043
 }
 Switch {
  which {{parent.Switch1.which}}
  name Switch6
  xpos -1784
  ypos 1040
  postage_stamp_frame 1001
 }
push $Nc04fd7a0
 FrameHold {
  first_frame {{"\[value root.last_frame]"}}
  name FrameHold3
  xpos -1355
  ypos -2170
 }
 Axis2 {
  translate {0 40 0}
  name Axis9
  tile_color 0x5000ff
  label "\[value translate.z]"
  xpos -1345
  ypos -1590
 }
 Constant {
  inputs 0
  format "256 256 0 0 256 256 1 square_256"
  name Constant3
  xpos -963
  ypos -1673
 }
 Card2 {
  orientation ZX
  rotate {180 -80 0}
  uniform_scale 100
  pivot {0.3 0 -0.2}
  control_points {3 3 3 6 

1 {-0.5 0 -0.5} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0.1666666865} 0 {0 0 0} 0 {0 0 0} 
1 {0 0 -0.5} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0.1666666865} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 0 -0.5} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0.1666666865} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0.1666666716} 0 {0 0 -0.1666666716} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0.1666666716} 0 {0 0 -0.1666666716} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0.1666666716} 0 {0 0 -0.1666666716} 0 {1 0.5 0} 
1 {-0.5 0 0.5} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 0 -0.1666666865} 0 {0 1 0} 
1 {0 0 0.5} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 0 -0.1666666865} 0 {0.5 1 0} 
1 {0.5 0 0.5} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 0 -0.1666666865} 0 {1 1 0} }
  name Card3
  xpos -963
  ypos -1571
 }
 TransformGeo {
  scaling {2 1 1.7}
  name TransformGeo1
  label size
  xpos -963
  ypos -1456
 }
 Dot {
  name Dot88
  xpos -929
  ypos -1335
 }
 Dot {
  name Dot28
  note_font_size 40
  xpos -1197
  ypos -1335
 }
set N82d1e610 [stack 0]
 TransformGeo {
  inputs 2
  name TransformGeo10
  label "from cam"
  xpos -1355
  ypos -1261
 }
push $Nc04fd7a0
 Dot {
  name Dot11
  note_font_size 40
  xpos -1624
  ypos -2393
 }
set N82b15390 [stack 0]
 FrameHold {
  first_frame {{"(\[value root.last_frame]+\[value root.first_frame])/2"}}
  name FrameHold2
  xpos -1658
  ypos -2164
 }
 Axis2 {
  translate {0 {parent.Axis9.translate.y} 0}
  name Axis8
  xpos -1648
  ypos -1586
 }
push $N82d1e610
 Dot {
  name Dot25
  note_font_size 40
  xpos -1535
  ypos -1335
 }
set N82915d50 [stack 0]
 TransformGeo {
  inputs 2
  name TransformGeo9
  label "from cam"
  xpos -1658
  ypos -1266
 }
 Dot {
  name Dot23
  note_font_size 40
  xpos -1624
  ypos -1195
 }
push $N82b15390
 Dot {
  name Dot10
  note_font_size 40
  xpos -1873
  ypos -2393
 }
 FrameHold {
  first_frame {{"\[value root.first_frame]"}}
  name FrameHold1
  xpos -1907
  ypos -2161
 }
 Axis2 {
  translate {0 {parent.Axis9.translate.y} 0}
  name Axis7
  xpos -1897
  ypos -1583
 }
push $N82915d50
 Dot {
  name Dot12
  note_font_size 40
  xpos -1778
  ypos -1335
 }
 TransformGeo {
  inputs 2
  name TransformGeo8
  label "from cam"
  xpos -1907
  ypos -1269
 }
 Dot {
  name Dot26
  note_font_size 40
  xpos -1873
  ypos -1120
 }
 Scene {
  inputs 3
  name Scene1
  xpos -1345
  ypos -1144
 }
set N15297590 [stack 0]
push 0
 ParticleEmitter {
  inputs 5
  start_frame 800
  emit_from faces
  rate {{parent.NoOp2.fg_rate}}
  rate_channel -rgba.alpha
  lifetime 500
  velocity {{parent.NoOp2.Velocity}}
  velocity_variation 1
  rotation_velocity 0.1
  rotation_velocity_variation 1
  size {{parent.NoOp2.Size}}
  size_variation 1
  mass_variation 1
  name ParticleEmitter9
  xpos -1355
  ypos 1907
 }
 ParticleGravity {
  to {0 -1e-06 0}
  name ParticleGravity1
  xpos -1355
  ypos 2516
 }
 ParticleTurbulence {
  strength {{parent.NoOp2.Turbulence_Strength} {parent.NoOp2.Turbulence_Strength} {parent.NoOp2.Turbulence_Strength}}
  name ParticleTurbulence
  xpos -1355
  ypos 2583
 }
 ParticleWind {
  from {{parent.Hold_Cam1.matrix.3} {parent.Hold_Cam1.matrix.7} {parent.Hold_Cam1.matrix.11}}
  to {{parent.Wind_Dir1.world_matrix.3} {parent.Wind_Dir1.world_matrix.7} {parent.Wind_Dir1.world_matrix.11}}
  name ParticleWind
  xpos -1355
  ypos 2644
 }
 ParticleBounce {
  out_bounce_mode kill
  in_bounce_mode kill
  bounceaxis_uniform_scale 1000
  name ParticleBounce1
  xpos -1355
  ypos 2747
 }
 Reformat {
  inputs 0
  format "2636 2160 0 0 2636 2160 2 overscanResolution_1"
  name BG
  xpos -1552
  ypos 3434
 }
 ScanlineRender {
  inputs 3
  shutteroffset centred
  motion_vectors_type velocity
  MB_channel forward
  name mayaToNukeSceneScanline
  xpos -1355
  ypos 3440
 }
 Dot {
  name Dot2
  note_font_size 40
  xpos -1321
  ypos 3590
 }
set N80118580 [stack 0]
 Dot {
  name Dot14
  note_font_size 40
  xpos -992
  ypos 3590
 }
 Group {
  name DeepCropSoft1
  tile_color 0x6000
  xpos -1026
  ypos 3687
  addUserKnob {20 deepCropSoftTab l DeepCropSoft}
  addUserKnob {7 znear R 0 200}
  znear {{parent.DeepCrop}}
  addUserKnob {7 falloffNear l " falloff" -STARTLINE R 0 10}
  falloffNear {{parent.Falloff}}
  addUserKnob {41 use_znear l use -STARTLINE T Controller1.use_znear}
  addUserKnob {7 zfar +DISABLED R 0 200}
  addUserKnob {7 falloffFar l " falloff" -STARTLINE +DISABLED R 0 10}
  addUserKnob {41 use_zfar l use -STARTLINE T Controller1.use_zfar}
  addUserKnob {6 outsideRange l "keep outside zrange" +STARTLINE}
  addUserKnob {1 output l INVISIBLE +INVISIBLE}
  addUserKnob {26 WouterGilsing l "" +STARTLINE +INVISIBLE}
 }
  BackdropNode {
   inputs 0
   name BackdropNode1
   tile_color 0x3cff
   label near
   note_font_size 42
   xpos -1157
   ypos -509
   bdwidth 701
   bdheight 733
  }
  BackdropNode {
   inputs 0
   name BackdropNode2
   tile_color 0x3cff
   label far
   note_font_size 42
   xpos -1156
   ypos 397
   bdwidth 714
   bdheight 748
  }
  BackdropNode {
   inputs 0
   name BackdropNode3
   tile_color 0x3cff
   label near
   note_font_size 42
   xpos 864
   ypos -502
   bdwidth 729
   bdheight 733
  }
  BackdropNode {
   inputs 0
   name BackdropNode4
   tile_color 0x3cff
   label far
   note_font_size 42
   xpos 36
   ypos -501
   bdwidth 701
   bdheight 733
  }
  Input {
   inputs 0
   name Input
   label "\[value number]"
   xpos -588
   ypos -1763
  }
  Dot {
   name Dot29
   xpos -554
   ypos -895
  }
set N7fe17010 [stack 0]
  Dot {
   name Dot30
   xpos 1407
   ypos -895
  }
set N7fe1bc00 [stack 0]
  Dot {
   name Dot16
   xpos 1407
   ypos -382
  }
set N7fd108e0 [stack 0]
  Dot {
   name Dot18
   xpos 1059
   ypos -382
  }
set N7fd154a0 [stack 0]
  Dot {
   name Dot11
   xpos 576
   ypos -382
  }
set N7fd1a0f0 [stack 0]
  Dot {
   name Dot25
   xpos 182
   ypos -382
  }
  DeepCrop {
   znear {{parent.zfar}}
   zfar {{"parent.zfar + parent.falloffFar"}}
   bbox {431.6000061 242.8000031 1726.400024 971.2000122}
   use_bbox false
   name DeepCrop10
   label "\[ expr \{ \[value use_znear] ?  \[value znear]: \"\" \}] \[ expr \{ \[value use_znear] ?  \"-\": \"\" \}] \[ expr \{ \[value use_zfar] ?  \[value zfar]: \"\" \}]"
   xpos 148
   ypos -305
  }
  DeepExpression {
   chans1 rgba
   rgba.red "rgba.red / rgba.alpha"
   rgba.green "rgba.green / rgba.alpha"
   rgba.blue "rgba.blue / rgba.alpha"
   name DeepUnpremult4
   xpos 148
   ypos -197
  }
  DeepExpression {
   temp_name0 near
   temp_expr0 "\[value parent.zfar]"
   temp_name1 far
   temp_expr1 "\[value parent.zfar] + \[value parent.falloffFar]"
   chans0 alpha
   chans1 none
   rgba.alpha "alpha *  ((deep.front - near) / (far - near))"
   name DeepExpression4
   xpos 148
   ypos -158
  }
  DeepExpression {
   chans1 rgba
   rgba.red "rgba.red * rgba.alpha"
   rgba.green "rgba.green * rgba.alpha"
   rgba.blue "rgba.blue * rgba.alpha"
   name DeepPremult4
   xpos 148
   ypos -114
  }
  Dot {
   name Dot26
   xpos 182
   ypos 28
  }
push $N7fd1a0f0
  DeepCrop {
   znear {{"parent.zfar + parent.falloffFar"}}
   zfar 1
   use_zfar false
   bbox {431.6000061 242.8000031 1726.400024 971.2000122}
   use_bbox false
   name DeepCrop3
   label "\[ expr \{ \[value use_znear] ?  \[value znear]: \"\" \}] \[ expr \{ \[value use_znear] ?  \"-\": \"\" \}] \[ expr \{ \[value use_zfar] ?  \[value zfar]: \"\" \}]"
   xpos 542
   ypos -293
  }
  DeepMerge {
   inputs 2
   name DeepMerge4
   xpos 542
   ypos 24
   disable {{"parent.falloffFar == 0"}}
  }
  Dot {
   name Dot23
   xpos 576
   ypos 417
  }
set N7f816170 [stack 0]
  Dot {
   name Dot17
   xpos 576
   ypos 713
  }
push $N7f816170
  Dot {
   name Dot22
   xpos 1059
   ypos 417
  }
  Dot {
   name Dot27
   xpos 1059
   ypos 510
  }
push $N7fd154a0
  DeepCrop {
   znear {{"parent.znear - parent.falloffNear"}}
   zfar {{parent.znear}}
   bbox {431.6000061 242.8000031 1726.400024 971.2000122}
   use_bbox false
   name DeepCrop7
   label "\[ expr \{ \[value use_znear] ?  \[value znear]: \"\" \}] \[ expr \{ \[value use_znear] ?  \"-\": \"\" \}] \[ expr \{ \[value use_zfar] ?  \[value zfar]: \"\" \}]"
   xpos 1025
   ypos -305
  }
  DeepExpression {
   chans1 rgba
   rgba.red "rgba.red / rgba.alpha"
   rgba.green "rgba.green / rgba.alpha"
   rgba.blue "rgba.blue / rgba.alpha"
   name DeepUnpremult3
   xpos 1025
   ypos -174
  }
  DeepExpression {
   temp_name0 near
   temp_expr0 "\[value parent.znear] - \[value parent.falloffNear]"
   temp_name1 far
   temp_expr1 "\[value parent.znear]"
   chans0 alpha
   chans1 none
   rgba.alpha "alpha * (1 - ((deep.front - near) / (far - near)))"
   name DeepExpression3
   xpos 1025
   ypos -133
  }
  DeepExpression {
   chans1 rgba
   rgba.red "rgba.red * rgba.alpha"
   rgba.green "rgba.green * rgba.alpha"
   rgba.blue "rgba.blue * rgba.alpha"
   name DeepPremult3
   xpos 1025
   ypos -90
  }
  Dot {
   name Dot19
   xpos 1059
   ypos 31
  }
push $N7fd108e0
  DeepCrop {
   znear 0
   use_znear false
   zfar {{"parent.znear - parent.falloffNear"}}
   bbox {431.6000061 242.8000031 1726.400024 971.2000122}
   use_bbox false
   name DeepCrop9
   label "\[ expr \{ \[value use_znear] ?  \[value znear]: \"\" \}] \[ expr \{ \[value use_znear] ?  \"-\": \"\" \}] \[ expr \{ \[value use_zfar] ?  \[value zfar]: \"\" \}]"
   xpos 1373
   ypos -306
  }
  DeepMerge {
   inputs 2
   name DeepMerge3
   xpos 1373
   ypos 27
   disable {{"parent.falloffNear == 0"}}
  }
  Dot {
   name Dot15
   xpos 1407
   ypos 417
  }
set N7f31aec0 [stack 0]
  Dot {
   name Dot13
   xpos 1219
   ypos 417
  }
  DeepMerge {
   inputs 2
   name DeepMerge5
   xpos 1185
   ypos 506
  }
  Dot {
   name Dot21
   xpos 1219
   ypos 608
  }
push $N7f31aec0
  Switch {
   inputs 2
   which {{parent.use_zfar}}
   name Switch3
   label "\[value which]"
   xpos 1373
   ypos 598
  }
  Switch {
   inputs 2
   which {{!parent.use_znear}}
   name Switch6
   label "\[value which]"
   xpos 1373
   ypos 703
  }
push $N7fe1bc00
  Dot {
   name Dot20
   xpos 1995
   ypos -895
  }
  Dot {
   name Dot4
   xpos 1995
   ypos 835
  }
  Switch {
   inputs 2
   which {{"clamp(parent.use_znear + parent.use_zfar)"}}
   name Switch2
   label "\[value which]"
   xpos 1373
   ypos 825
  }
  Dot {
   name Dot31
   xpos 1407
   ypos 1359
  }
push $N7fe17010
  Dot {
   name Dot9
   xpos -554
   ypos -389
  }
set N7ef19770 [stack 0]
  Dot {
   name Dot8
   xpos -727.6666667
   ypos -389
  }
set N7ef1e330 [stack 0]
  Dot {
   name Dot2
   xpos -1075
   ypos -389
  }
  DeepCrop {
   znear {{"parent.znear - parent.falloffNear"}}
   zfar {{parent.znear}}
   bbox {431.6000061 242.8000031 1726.400024 971.2000122}
   use_bbox false
   name DeepCrop2
   label "\[ expr \{ \[value use_znear] ?  \[value znear]: \"\" \}] \[ expr \{ \[value use_znear] ?  \"-\": \"\" \}] \[ expr \{ \[value use_zfar] ?  \[value zfar]: \"\" \}]"
   xpos -1109
   ypos -309
  }
  DeepExpression {
   chans1 rgba
   rgba.red "rgba.red / rgba.alpha"
   rgba.green "rgba.green / rgba.alpha"
   rgba.blue "rgba.blue / rgba.alpha"
   name DeepUnpremult2
   xpos -1109
   ypos -181
  }
  DeepExpression {
   temp_name0 near
   temp_expr0 "\[value parent.znear] - \[value parent.falloffNear]"
   temp_name1 far
   temp_expr1 "\[value parent.znear]"
   chans0 alpha
   chans1 none
   rgba.alpha "alpha * ((deep.front - near) / (far - near))"
   name DeepExpression1
   xpos -1109
   ypos -140
  }
  DeepExpression {
   chans1 rgba
   rgba.red "rgba.red * rgba.alpha"
   rgba.green "rgba.green * rgba.alpha"
   rgba.blue "rgba.blue * rgba.alpha"
   name DeepPremult1
   xpos -1109
   ypos -97
  }
  Dot {
   name Dot1
   xpos -1075
   ypos -13
  }
push $N7ef1e330
  DeepCrop {
   znear {{parent.znear}}
   zfar 200
   use_zfar false
   bbox {431.6000061 242.8000031 1726.400024 971.2000122}
   use_bbox false
   name DeepCrop5
   label "\[ expr \{ \[value use_znear] ?  \[value znear]: \"\" \}] \[ expr \{ \[value use_znear] ?  \"-\": \"\" \}] \[ expr \{ \[value use_zfar] ?  \[value zfar]: \"\" \}]"
   xpos -761
   ypos -310
  }
  DeepMerge {
   inputs 2
   name DeepMerge1
   xpos -761
   ypos -17
   disable {{"parent.falloffNear == 0"}}
  }
  Dot {
   name Dot7
   xpos -727.6666667
   ypos 152
  }
push $N7ef19770
  Switch {
   inputs 2
   which {{parent.use_znear}}
   name Switch1
   label "\[value which]"
   xpos -588
   ypos 142
  }
  Dot {
   name Dot3
   xpos -554
   ypos 517
  }
set N7e9167c0 [stack 0]
  Dot {
   name Dot5
   xpos -727
   ypos 517
  }
set N7e91b2b0 [stack 0]
  Dot {
   name Dot6
   xpos -1075
   ypos 517
  }
  DeepCrop {
   znear {{parent.zfar}}
   zfar {{"parent.zfar + parent.falloffFar"}}
   bbox {431.6000061 242.8000031 1726.400024 971.2000122}
   use_bbox false
   name DeepCrop1
   label "\[ expr \{ \[value use_znear] ?  \[value znear]: \"\" \}] \[ expr \{ \[value use_znear] ?  \"-\": \"\" \}] \[ expr \{ \[value use_zfar] ?  \[value zfar]: \"\" \}]"
   xpos -1109
   ypos 594
  }
  DeepExpression {
   chans1 rgba
   rgba.red "rgba.red / rgba.alpha"
   rgba.green "rgba.green / rgba.alpha"
   rgba.blue "rgba.blue / rgba.alpha"
   name DeepUnpremult1
   xpos -1109
   ypos 702
  }
  DeepExpression {
   temp_name0 near
   temp_expr0 "\[value parent.zfar]"
   temp_name1 far
   temp_expr1 "\[value parent.zfar] + \[value parent.falloffFar]"
   chans0 alpha
   chans1 none
   rgba.alpha "alpha * (1 - ((deep.front - near) / (far - near)))"
   name DeepExpression2
   xpos -1109
   ypos 742
  }
  DeepExpression {
   chans1 rgba
   rgba.red "rgba.red * rgba.alpha"
   rgba.green "rgba.green * rgba.alpha"
   rgba.blue "rgba.blue * rgba.alpha"
   name DeepPremult2
   xpos -1109
   ypos 785
  }
  Dot {
   name Dot12
   xpos -1075
   ypos 893
  }
push $N7e91b2b0
  DeepCrop {
   znear {{parent.zfar}}
   zfar 0
   use_zfar false
   outside_zrange true
   bbox {431.6000061 242.8000031 1726.400024 971.2000122}
   use_bbox false
   name DeepCrop4
   label "\[ expr \{ \[value use_znear] ?  \[value znear]: \"\" \}] \[ expr \{ \[value use_znear] ?  \"-\": \"\" \}] \[ expr \{ \[value use_zfar] ?  \[value zfar]: \"\" \}]"
   xpos -761
   ypos 593
  }
  DeepMerge {
   inputs 2
   name DeepMerge2
   xpos -761
   ypos 889
   disable {{"parent.falloffFar == 0"}}
  }
  Dot {
   name Dot14
   xpos -727
   ypos 1058
  }
push $N7e9167c0
  Switch {
   inputs 2
   which {{parent.use_zfar}}
   name Switch4
   label "\[value which]"
   xpos -588
   ypos 1048
  }
  Switch {
   inputs 2
   which {{parent.outsideRange}}
   name Switch9
   label "\[value which]"
   xpos -588
   ypos 1349
  }
  Output {
   name Output1
   xpos -588
   ypos 2052
  }
  StickyNote {
   inputs 0
   name StickyNote1
   tile_color 0x3cff
   label "   INVERSE   "
   note_font_size 100
   xpos 549
   ypos -700
  }
  NoOp {
   inputs 0
   name Controller1
   onCreate "node = nuke.thisGroup()\nfor mode in \['near', 'far']:\n    state = node.knob('use_z\{\}'.format(mode)).value()\n    for knobName in \['falloff\{\}'.format(mode.title()), 'z\{\}'.format(mode)]:\n        node.knob(knobName).setEnabled(state)\n    node.knob('z\{\}'.format(mode)).setRange(0,200)"
   knobChanged "node = nuke.thisGroup()\nfor mode in \['near', 'far']:\n    state = node.knob('use_z\{\}'.format(mode)).value()\n    for knobName in \['falloff\{\}'.format(mode.title()), 'z\{\}'.format(mode)]:\n        node.knob(knobName).setEnabled(state)"
   label "\[ expr \{ \[value use_znear] ?  \[value znear]: \"\" \}] \[ expr \{ \[value use_znear] ?  \"-\": \"\" \}] \[ expr \{ \[value use_zfar] ?  \[value zfar]: \"\" \}]"
   xpos -431
   ypos -1098
   addUserKnob {20 User}
   addUserKnob {6 use_znear l use +STARTLINE}
   use_znear true
   addUserKnob {6 use_zfar l use +STARTLINE}
  }
 end_group
 DeepMerge {
  inputs 2
  operation holdout
  drop_hidden true
  name DeepMerge1
  xpos -1026
  ypos 3769
 }
 DeepToImage {
  name DeepToImage1
  xpos -1026
  ypos 3879
 }
push $N80118580
 Unpremult {
  channels all
  name Unpremult1
  xpos -1355
  ypos 3777
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -1355
  ypos 3873
 }
 Premult {
  channels all
  name Premult1
  xpos -1355
  ypos 3951
 }
 Remove {
  operation keep
  channels rgba
  channels2 depth
  channels3 particleColor
  channels4 motion
  name Remove2
  xpos -1355
  ypos 4026
 }
 Output {
  name Output1
  xpos -1355
  ypos 4107
 }
push $N15297590
 Viewer {
  frame_range 1001-1074
  viewerProcess "Rodeo look (Rec709)"
  name Viewer1
  xpos -1355
  ypos -1078
 }
end_group
push $cut_paste_input
Group {
 name clouds
 selected true
 xpos 4036
 ypos -135
}
 Input {
  inputs 0
  name camera
  xpos 398
  ypos 724
 }
 Reformat {
  inputs 0
  format "1024 1024 0 0 1024 1024 1 square 1K"
  name Reformat5
  xpos 584
  ypos -920
 }
 Dot {
  name Dot6
  xpos 618
  ypos -864
 }
set N177ab640 [stack 0]
 Dot {
  name Dot7
  xpos 820
  ypos -864
 }
 Ramp {
  cliptype none
  p0 {512 350}
  p1 {512 900}
  name Ramp2
  xpos 786
  ypos -821
 }
 Transform {
  rotate -55
  center {512 512}
  name Transform3
  xpos 786
  ypos -766
 }
 Dot {
  name Dot4
  xpos 820
  ypos -726
 }
set Na15a57e0 [stack 0]
push $N177ab640
 Dot {
  name Dot9
  xpos 498
  ypos -864
 }
 Radial {
  area {5 6 1015 1016}
  softness 1.7
  name Radial3
  xpos 464
  ypos -813
 }
 Grade {
  channels rgba
  white 0.98
  gamma 0.91
  black_clamp false
  name Grade6
  xpos 464
  ypos -656
 }
push $N177ab640
 Noise {
  type turbulence
  size 400
  zoffset {{x}}
  gain 0.6
  translate {{x} {x}}
  center {1079 450}
  name Noise5
  xpos 584
  ypos -807
 }
set N94612c40 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  name Merge6
  xpos 584
  ypos -656
 }
set N1d474ef0 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  mix 0.835
  name Merge10
  xpos 726
  ypos -656
 }
push $Na15a57e0
push $N94612c40
 Merge2 {
  inputs 2
  operation multiply
  name Multiply2
  xpos 846
  ypos -661
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge11
  xpos 773
  ypos -577
 }
 Clamp {
  name Clamp3
  xpos 773
  ypos -551
 }
 Blur {
  size 50
  name Blur4
  xpos 773
  ypos -513
 }
set N73812650 [stack 0]
 Invert {
  name Invert3
  xpos 773
  ypos -458
 }
 Grade {
  channels rgba
  gamma 2.36
  name Grade7
  xpos 771
  ypos -416
 }
 Blur {
  size 400
  name Blur7
  xpos 771
  ypos -390
 }
push $N73812650
push $N1d474ef0
 Clamp {
  name Clamp4
  xpos 584
  ypos -596
 }
 RolloffContrast {
  contrast 2
  center 1
  soft_clip 0.9
  slope_mag_low1 0.2599999905
  slope_mag_high2 0.2599999905
  name RolloffContrast2
  xpos 584
  ypos -558
 }
 ColorCorrect {
  inputs 1+1
  gain {1.136666536 1.046666503 0.8166665435 1}
  midtones.gain 3
  highlights.gain 5
  lookup {shadow {}
    midtone {}
    highlight {curve x0.01112632453 0 s0 x0.2332840562 0.3475620747 s2.5 x1 1 s0}}
  unpremult rgba.alpha
  name ColorCorrect2
  xpos 584
  ypos -513
 }
 Grade {
  inputs 1+1
  multiply {0.01999999955 0.04500000179 0.1199999973 0.04500000179}
  unpremult rgba.alpha
  name Grade8
  xpos 584
  ypos -390
 }
 Grade {
  white 2
  black_clamp false
  name Grade9
  xpos 584
  ypos -337
 }
 Dot {
  name Dot10
  xpos 618
  ypos -284
 }
 FrameRange {
  first_frame 1
  last_frame 100
  time ""
  name FrameRange2
  xpos 584
  ypos -238
 }
set N73016f70 [stack 0]
 Grade {
  white 0.25
  black_clamp false
  name Grade10
  xpos 674
  ypos -107
 }
 BlendMat {
  surfaceblend modulate
  name BlendMat4
  xpos 674
  ypos -52
 }
push $N73016f70
 BlendMat {
  surfaceblend modulate
  name BlendMat5
  xpos 500
  ypos -81
 }
 Cube {
  inputs 0
  scaling {24 4.9 40}
  uniform_scale 100
  pivot {0 -0.5 0}
  name Cube4
  xpos 358
  ypos 128
 }
push 0
 ParticleEmitter {
  inputs 4
  start_frame 990
  emit_from bbox
  rate {{x==start_frame?amount:0}}
  vertex_rate 0
  rate_variation 2
  lifetime 200
  velocity 0
  size 500
  size_variation 1
  start_frame_animation random
  start_wrap true
  frame_advance constant
  seed 5
  name ParticleEmitter3
  xpos 600
  ypos 139
  addUserKnob {20 User}
  addUserKnob {3 amount l Amount}
  amount 300
 }
 ParticleExpression {
  opacityexpr opacity*random()
  opacityexpr_onlynew true
  velexpr_onlynew true
  seed 2
  name ParticleExpression2
  xpos 600
  ypos 217
 }
 Input {
  inputs 0
  name format
  xpos 773
  ypos 724
  number 1
 }
 ScanlineRender {
  inputs 3
  conservative_shader_sampling false
  motion_vectors_type distance
  name ScanlineRender3
  xpos 600
  ypos 724
 }
 Output {
  name Output1
  xpos 600
  ypos 824
 }
end_group
push $cut_paste_input
Group {
 name M_ImagePlane
 help "This node lets yuo project a texture onto a card to fit the frustum of the connected camera at the reference frame.\n\nThis is useful to either matchmove or stabilise a plate based on a camera rather than 2D tracking data.\n\n"
 knobChanged "\nn = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == 'use_input':\n    n\['knob'].setEnabled( not k.value() )\n"
 note_font_size 12
 selected true
 xpos 4042
 ypos 156
 addUserKnob {20 "" l User}
 addUserKnob {32 knob l "import chan file" t "when importing a chan file instead of hooking up a camera node, make sure to set the corrcet aperture in the CameraKnobs tab before importing the file!" -STARTLINE +DISABLED T "import_chan_button this.CAM_ANIM\nknob this.use_input 0"}
 addUserKnob {6 use_input l "use input" t "if checked the camera hooked up to the cam pipe is used\ninstead of the internal one.\nIf unchecked, make sure to set the correct aperture in the CameraKnobs tab before importing the chan file!" -STARTLINE}
 use_input true
 addUserKnob {4 output t "stabilize - use this to stabilize a plate using the respective match moved camera\nmatch - track an element into the shot based on the camera input" M {stabilize match}}
 output match
 addUserKnob {3 ref l refFrame t "if the output format is the same as the plate you want to match/stabilize,\nthis will be the frame that will not be modified."}
 ref 1
 addUserKnob {7 distance t "the distance of the card to the camera.\nIf you have a nodal camera this isn't important\notherwise you need to adjust this to get the required parallax." R 1 10000}
 distance 100
 addUserKnob {26 "" l output}
 addUserKnob {41 format T Card3D1.format}
 addUserKnob {41 crop_1 l "black outside" +INVISIBLE T Card3D1.crop}
 addUserKnob {6 crop -STARTLINE}
 crop true
 addUserKnob {41 full_format l "output format" +INVISIBLE T Card3D1.full_format}
 addUserKnob {41 proxy_format l "proxy format" +INVISIBLE T Card3D1.proxy_format}
 addUserKnob {41 filter T Card3D1.filter}
 addUserKnob {20 "" l MotionBlur}
 addUserKnob {41 motionblur T Card3D1.motionblur}
 addUserKnob {41 shutter T Card3D1.shutter}
 addUserKnob {41 shutteroffset l "shutter offset" T Card3D1.shutteroffset}
 addUserKnob {41 shuttercustomoffset l "" -STARTLINE T Card3D1.shuttercustomoffset}
 addUserKnob {20 "" l CameraKnobs}
 addUserKnob {41 rot_order l "rotation order" T CAM_ANIM.rot_order}
 addUserKnob {41 translate T CAM_ANIM.translate}
 addUserKnob {41 rotate T CAM_ANIM.rotate}
 addUserKnob {26 ""}
 addUserKnob {41 focal l "focal length" T CAM_ANIM.focal}
 addUserKnob {41 haperture l "horiz aperture" T CAM_ANIM.haperture}
 addUserKnob {41 vaperture l "vert aperture" T CAM_ANIM.vaperture}
 addUserKnob {41 win_scale l "window scale" T CAM_ANIM.win_scale}
 addUserKnob {26 ""}
 addUserKnob {41 label_1 l label T CAM_ANIM.label}
}
 Input {
  inputs 0
  name CAM
  selected true
  xpos -10
  ypos 143
  number 1
 }
 Camera {
  inputs 0
  display off
  selectable false
  haperture 9.58
  vaperture 5.39
  near 0.001
  far {{parent.distance*2}}
  name CAM_ANIM
  xpos -133
  ypos 40
 }
 Switch {
  inputs 2
  which {{parent.use_input}}
  name Switch4
  label "internal or connected camera"
  xpos -16
  ypos 54
 }
set Nc41fa630 [stack 0]
 Camera {
  inputs 0
  display off
  selectable false
  rot_order {{"\[topnode parent.input1].rot_order"}}
  translate {{"\[topnode parent.input1].translate.x(parent.ref)"} {"\[topnode parent.input1].translate.y(parent.ref)"} {"\[topnode parent.input1].translate.z(parent.ref)"}}
  rotate {{"\[topnode parent.input1].rotate.x(parent.ref)"} {"\[topnode parent.input1].rotate.y(parent.ref)"} {"\[topnode parent.input1].rotate.z(parent.ref)"}}
  focal {{"\[topnode input1].focal.0"}}
  haperture {{"\[topnode input1].haperture.0"}}
  vaperture {{"\[topnode input1].vaperture.0"}}
  near 0.0001
  far {{parent.distance*2}}
  win_scale {{"\[topnode input1].win_scale.0"} {"\[topnode input1].win_scale.1"}}
  name CAM_STATIC1
  tile_color 0x5682e700
  gl_color 0x4851e400
  label "connected cam\n"
  xpos 28
  ypos -178
 }
 Camera {
  inputs 0
  display off
  selectable false
  rot_order {{CAM_ANIM.rot_order}}
  translate {{CAM_ANIM.translate.x(parent.ref)} {CAM_ANIM.translate.y(parent.ref)} {CAM_ANIM.translate.z(parent.ref)}}
  rotate {{CAM_ANIM.rotate.x(parent.ref)} {CAM_ANIM.rotate.y(parent.ref)} {CAM_ANIM.rotate.z(parent.ref)}}
  focal {{CAM_ANIM.focal.0}}
  haperture {{CAM_ANIM.haperture.0}}
  vaperture {{CAM_ANIM.vaperture.0}}
  near 0.0001
  far {{parent.distance*2}}
  name CAM_STATIC
  tile_color 0x5682e700
  gl_color 0x4851e400
  label "internal cam"
  xpos -112
  ypos -85
 }
 Switch {
  inputs 2
  which {{parent.use_input}}
  name Switch5
  label "internal or connected cam\n\[input this \[knob parent.use_input]]"
  xpos 28
  ypos -72
 }
set N838f8cb0 [stack 0]
 Switch {
  inputs 2
  which {{!parent.output}}
  name Switch1
  label "match or stabilize"
  xpos 177
  ypos -72
 }
push $N838f8cb0
push $Nc41fa630
 Switch {
  inputs 2
  which {{!parent.output}}
  name Switch2
  label "match or stabilize"
  xpos 166
  ypos 54
 }
 Input {
  inputs 0
  name IMG
  xpos 409
  ypos -97
 }
 Card3D {
  inputs 3
  scaling {{"\[input Switch5 \[value parent.use_input]].win_scale.0"} {"\[input Switch5 \[value parent.use_input]].win_scale.1"} 1}
  uniform_scale {{parent.distance}}
  pivot {0 0 1}
  lens_in_focal {{"\[input Switch5 \[value parent.use_input]].focal"}}
  lens_in_haperture {{"\[input Switch5 \[value parent.use_input]].haperture"}}
  name Card3D1
  label internal
  xpos 409
  ypos 54
 }
 Crop {
  box {0 0 {width} {height}}
  intersect true
  name Crop1
  xpos 409
  ypos 241
  disable {{!parent.crop}}
 }
 Output {
  name Output1
  xpos 409
  ypos 324
 }
end_group
push $cut_paste_input
Group {
 name M_Sticker
 help "WorldPos_Texture_Projection create parallel projection of texture over world position point. Place center of your projection, press “Bake Position”, adjust transformation and tilling options, enjoy!\n------\nv001\nIvan Kokov. Yellow Mountain Studio Tianjin. 2013\nbutafor@inbox.ru"
 selected true
 xpos 4038
 ypos 254
 addUserKnob {20 User}
 addUserKnob {41 Center T Pick1.Center}
 addUserKnob {41 CenterPosition l INVISIBLE +INVISIBLE T Pick1.CenterPosition}
 addUserKnob {41 BakePosition l "Bake Position" T Pick1.BakePosition}
 addUserKnob {41 BakedCenterPosition T Pick1.BakedCenterPosition}
 addUserKnob {26 ""}
 addUserKnob {41 rotate T AxisTransformation.rotate}
 addUserKnob {41 scaling l scale T AxisTransformation.scaling}
 addUserKnob {41 uniform_scale l "uniform scale" T AxisTransformation.uniform_scale}
 addUserKnob {41 skew T AxisTransformation.skew}
 addUserKnob {26 ""}
 addUserKnob {41 TileX T Tiling2.TileX}
 addUserKnob {41 MirrorX -STARTLINE T Tiling2.MirrorX}
 addUserKnob {41 TileY T Tiling2.TileY}
 addUserKnob {41 MirrorY -STARTLINE T Tiling2.MirrorY}
}
 Input {
  inputs 0
  name InputScr
  xpos 462
  ypos -60
 }
 Dot {
  name Dot8
  xpos 496
  ypos -20
 }
 NoOp {
  name scr1
  xpos 462
  ypos 19
 }
 Dot {
  name Dot9
  xpos 496
  ypos 275
 }
set N8c118660 [stack 0]
 NoOp {
  name Get_format1
  xpos 378
  ypos 272
  addUserKnob {20 User}
  addUserKnob {14 format R 0 100}
  format {{format.h} {format.w}}
 }
 Input {
  inputs 0
  name InputPointPos
  xpos 48
  ypos -15
  number 1
 }
 NoOp {
  name PointPos1
  xpos 48
  ypos 25
 }
 Dot {
  name Dot6
  xpos 82
  ypos 107
 }
set N9c619410 [stack 0]
 NoOp {
  name Pick1
  xpos 174
  ypos 104
  addUserKnob {20 User}
  addUserKnob {12 Center}
  Center {1084 622}
  addUserKnob {13 CenterPosition}
  CenterPosition {{"\[sample this Red Center.x Center.y]"} {"\[sample this Green Center.x Center.y]"} {"\[sample this Blue Center.x Center.y]"}}
  addUserKnob {22 BakePosition l "Bake Position" T "m = nuke.thisNode()\nxyz = m\['CenterPosition'].getValue()\nm\['BakedCenterPosition'].setValue(xyz)" +STARTLINE}
  addUserKnob {13 BakedCenterPosition}
  BakedCenterPosition {0.42702 1.28297 0.853645}
 }
push $N9c619410
 Expression {
  expr0 "r - parent.Pick1.BakedCenterPosition.x"
  expr1 "g - parent.Pick1.BakedCenterPosition.y"
  expr2 "b - parent.Pick1.BakedCenterPosition.z"
  name MoveToCenter1
  xpos 48
  ypos 166
 }
 ColorMatrix {
  matrix {
      {{parent.Axis2.world_matrix.0} {parent.Axis2.world_matrix.1} {parent.Axis2.world_matrix.2}}
      {{parent.Axis2.world_matrix.4} {parent.Axis2.world_matrix.5} {parent.Axis2.world_matrix.6}}
      {{parent.Axis2.world_matrix.8} {parent.Axis2.world_matrix.9} {parent.Axis2.world_matrix.10}}
    }
  name ColorMatrix2
  xpos 48
  ypos 215
 }
 Expression {
  expr0 "(r + (parent.Get_format1.format.w/2) ) / parent.Get_format1.format.w"
  expr1 "(g + (parent.Get_format1.format.h/2) ) / parent.Get_format1.format.h"
  name Transform_to_STMap1
  xpos 48
  ypos 268
 }
 Expression {
  expr0 "TileX ? ( MirrorX ? (     (abs(fmod(r, 2)) > 1) ? (1 - abs(fmod(r,1))) : abs(fmod(r,1))     ) :  abs(fmod(r, 1)) ) : r"
  expr1 "TileY ? ( MirrorY ? (     (abs(fmod(g, 2)) > 1) ? (1 - abs(fmod(g,1))) : abs(fmod(g,1))     ) :  abs(fmod(g, 1)) ) : g"
  name Tiling2
  xpos 48
  ypos 324
  addUserKnob {20 User}
  addUserKnob {6 TileX +STARTLINE}
  addUserKnob {6 MirrorX -STARTLINE}
  addUserKnob {6 TileY +STARTLINE}
  addUserKnob {6 MirrorY -STARTLINE}
 }
 BlackOutside {
  name BlackOutside1
  xpos 48
  ypos 348
 }
push $N8c118660
 Dot {
  name Dot10
  xpos 496
  ypos 428
 }
 STMap {
  inputs 2
  uv rgb
  name STMap2
  xpos 48
  ypos 419
 }
set N8c213ec0 [stack 0]
 Output {
  name Output1
  xpos 48
  ypos 519
 }
 Axis2 {
  inputs 0
  rotate {{-parent.AxisTransformation.rotate} {-parent.AxisTransformation.rotate} {-parent.AxisTransformation.rotate}}
  scaling {{1/parent.AxisTransformation.scaling} {1/parent.AxisTransformation.scaling} {1/parent.AxisTransformation.scaling}}
  uniform_scale {{1000/parent.AxisTransformation.uniform_scale}}
  skew {{-parent.AxisTransformation.skew} {-parent.AxisTransformation.skew} {-parent.AxisTransformation.skew}}
  name Axis2
  xpos -61
  ypos 200
 }
 Axis2 {
  inputs 0
  rotate {0 400 0}
  name AxisTransformation
  xpos -170
  ypos 196
 }
push $N8c213ec0
 Viewer {
  input_process false
  name Viewer1
  xpos -113
  ypos 784
 }
end_group
push $cut_paste_input
Group {
 name Mix_Fine_Detail_F17
 tile_color 0xff4e2eff
 label "B:\[value Threshold]  or M:\[value Size_button] \n"
 selected true
 xpos 4045
 ypos -18
 addUserKnob {20 Mix_Detail l "Mix Detail"}
 addUserKnob {22 Linear -STARTLINE T "\ncolor = 'RGB'\n\nnuke.toNode('Colorspace_OUT')\['colorspace_in'].setValue(color)\nnuke.toNode('Colorspace_IN')\['colorspace_out'].setValue(color)\n\nn = nuke.thisNode()\['c_text'].setValue('Linear')\n"}
 addUserKnob {22 Alexa -STARTLINE T "\ncolor = 'AlexaV3LogC'\n\nnuke.toNode('Colorspace_OUT')\['colorspace_in'].setValue(color)\nnuke.toNode('Colorspace_IN')\['colorspace_out'].setValue(color)\n\nn = nuke.thisNode()\['c_text'].setValue(color)"}
 addUserKnob {22 Viper -STARTLINE T "color = 'ViperLog'\n\nnuke.toNode('Colorspace_OUT')\['colorspace_in'].setValue(color)\nnuke.toNode('Colorspace_IN')\['colorspace_out'].setValue(color)\n\nn = nuke.thisNode()\['c_text'].setValue(color)"}
 addUserKnob {26 c_text l "               " -STARTLINE T Linear}
 addUserKnob {26 ""}
 addUserKnob {7 Threshold R 0 50}
 Threshold 13
 addUserKnob {6 Use_Luminance_only +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {7 WhiteIntensity l "White Intensity" R 0 2}
 WhiteIntensity 1.15
 addUserKnob {7 BlackIntensity l "Black Intensity" R 0 2}
 BlackIntensity 1.15
 addUserKnob {26 ""}
 addUserKnob {20 Blink_Group l Median n 1}
 Blink_Group 0
 addUserKnob {6 Use_Blink l "Use Median" +STARTLINE}
 addUserKnob {26 Warning_Blink l "   " -STARTLINE T "WARNING! Can be quite heavy!"}
 addUserKnob {41 Size_button l Threshold T BlinkScript1.Size_button}
 addUserKnob {20 endGroup n -1}
 addUserKnob {20 alpha l Alpha n 1}
 alpha 0
 addUserKnob {6 Process_alpha +STARTLINE}
 addUserKnob {6 AddAlpha l "Add Alpha" +STARTLINE}
 addUserKnob {20 endGroup_1 l endGroup n -1}
}
 Input {
  inputs 0
  name mask
  xpos -858
  ypos 1109
  number 2
 }
 Dot {
  name Dot18
  note_font_size 40
  xpos -824
  ypos 1144
 }
 Input {
  inputs 0
  name Patch
  xpos -444
  ypos 193
 }
 Colorspace {
  name Colorspace_IN
  xpos -444
  ypos 254
 }
 set C8ca1f810 [stack 0]
 Dot {
  name Dot14
  note_font_size 40
  xpos -410
  ypos 320
 }
set N1df3c180 [stack 0]
 Dot {
  name Dot9
  note_font_size 40
  xpos -410
  ypos 397
 }
set N7ce1ec60 [stack 0]
 Dot {
  name Dot2
  note_font_size 40
  xpos -253
  ypos 397
 }
 Dot {
  name Dot20
  note_font_size 40
  xpos -253
  ypos 1144
 }
set N8d91e910 [stack 0]
 Dot {
  name Dot7
  note_font_size 40
  xpos -341
  ypos 1144
 }
push $N7ce1ec60
 Dot {
  name Dot88
  note_font_size 40
  xpos -410
  ypos 444
 }
set N120fd070 [stack 0]
 Dot {
  name Dot6
  note_font_size 40
  xpos -300
  ypos 444
 }
 BlinkScript {
  recompileCount 7
  ProgramGroup 1
  KernelDescription "2 \"MedianKernel\" iterate componentWise 179c9f95e42bd86455c512b80d13303bbb6aac5d972b8785a833e70e500b43c3 2 \"imageIn\" Read Ranged2D \"imageOut\" Write Point 1 \"Size\" Int 1 AgAAAA== 1 \"_size\" 1 1 3 \"imageInrangeMin\" Int 2 1 AAAAAAAAAAA= \"imageInrangeMax\" Int 2 1 AAAAAAAAAAA= \"_arraySize\" Int 1 1 AAAAAA=="
  kernelSource "kernel MedianKernel : public ImageComputationKernel<eComponentWise> \{\n   Image<eRead, eAccessRanged2D, eEdgeClamped> imageIn;\n   Image<eWrite, eAccessPoint> imageOut;\n   param:\n     int _size;\n   local:\n     int _arraySize;\n\n   void define() \{\n     defineParam(_size, \"Size\", 2);\n   \}\n\n   void init() \{\n     imageIn.setRange(-_size, -_size, _size, _size);\n     _arraySize = (_size*2+1)*(_size*2+1);\n   \}\n\n   void process(int2 pos) \{\n    float vals\[289];//sadly, need to be a constant, 121 correspond to a size of 5 (11x11)\n    for (int j = -_size, index = 0; j <= _size; j++) \{\n       for (int i = -_size; i <= _size; i++, index++) \{\n          vals\[index] = imageIn(i, j);\n       \}\n     \} //The median function takes an array of floating-point values and an array length.\n     imageOut() = median(vals,_arraySize);\n   \}\n\};"
  rebuild ""
  MedianKernel_Size {{"max(min(Size_button, 10),0)"}}
  rebuild_finalise ""
  name BlinkScript2
  xpos -334
  ypos 536
  disable {{1-parent.Switch1.which}}
  addUserKnob {20 User}
  addUserKnob {7 Size_button R 0 10}
  Size_button {{parent.BlinkScript1.Size_button}}
 }
 Dot {
  name Dot13
  note_font_size 40
  xpos -300
  ypos 633
 }
push $N120fd070
 Blur {
  channels rgb
  size {{parent.Threshold}}
  name Blur14
  xpos -444
  ypos 499
 }
 Switch {
  inputs 2
  which {{parent.Switch1.which}}
  name Switch3
  xpos -444
  ypos 629
 }
 Dot {
  name Dot25
  note_font_size 40
  xpos -410
  ypos 680
 }
set N8e510100 [stack 0]
 Dot {
  name Dot8
  note_font_size 40
  xpos -336
  ypos 680
 }
 Dot {
  name Dot17
  note_font_size 40
  xpos -336
  ypos 762
 }
push $N8e510100
 Blur {
  channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  size {{parent.Threshold}}
  quality 7
  name Blur7
  xpos -444
  ypos 698
 }
 Switch {
  inputs 2
  which {{parent.AddAlpha}}
  name Switch_add
  xpos -446
  ypos 758
 }
 Dot {
  name Dot89
  note_font_size 40
  xpos -412
  ypos 840
 }
 Input {
  inputs 0
  name Ref
  xpos -714
  ypos 194
  number 1
 }
clone $C8ca1f810 {
  xpos -714
  ypos 254
  selected false
 }
 Dot {
  name Dot15
  note_font_size 40
  xpos -680
  ypos 352
 }
set N7d81f3a0 [stack 0]
push $N1df3c180
 Expression {
  channel3 alpha
  expr3 0
  name Expression2
  xpos -603
  ypos 316
 }
 Group {
  inputs 2
  name Luminance_saturation_merge
  xpos -603
  ypos 348
  addUserKnob {20 User}
  addUserKnob {26 ex l Ex T "Le node va prendre la luminance et saturation de 2 images pour les rassembler\n"}
 }
  Input {
   inputs 0
   name saturation
   label saturation
   xpos -586
   ypos 401
  }
  Dot {
   name Dot153
   label saturation
   note_font_size 40
   xpos -552
   ypos 510
  }
  Colorspace {
   colorspace_out CIE-Lab
   name Colorspace1
   xpos -843
   ypos 504
  }
  Input {
   inputs 0
   name luminance
   label luminance
   xpos -1006
   ypos 286
   number 1
  }
  Dot {
   name Dot156
   label Luminance
   note_font_size 40
   xpos -972
   ypos 376
  }
  Colorspace {
   colorspace_out CIE-Lab
   name Colorspace2
   selected true
   xpos -1006
   ypos 452
  }
  Copy {
   inputs 2
   from0 rgba.green
   to0 rgba.green
   from1 rgba.blue
   to1 rgba.blue
   name Copy13
   xpos -1006
   ypos 494
  }
  Colorspace {
   colorspace_in CIE-Lab
   name Colorspace3
   xpos -1006
   ypos 552
  }
  Output {
   name Output1
   xpos -1006
   ypos 655
  }
 end_group
 Dot {
  name Dot16
  note_font_size 40
  xpos -569
  ypos 392
 }
push $N7d81f3a0
 Switch {
  inputs 2
  which {{parent.Use_Luminance_only}}
  name Switch2
  xpos -714
  ypos 388
 }
 Dot {
  name Dot85
  note_font_size 40
  xpos -680
  ypos 446
 }
set N8b7194f0 [stack 0]
 Dot {
  name Dot86
  note_font_size 40
  xpos -599
  ypos 446
 }
 Dot {
  name Dot84
  note_font_size 40
  xpos -599
  ypos 776
 }
push $N8b7194f0
 Dot {
  name Dot5
  note_font_size 40
  xpos -824
  ypos 446
 }
 BlinkScript {
  recompileCount 7
  ProgramGroup 1
  KernelDescription "2 \"MedianKernel\" iterate componentWise 179c9f95e42bd86455c512b80d13303bbb6aac5d972b8785a833e70e500b43c3 2 \"imageIn\" Read Ranged2D \"imageOut\" Write Point 1 \"Size\" Int 1 AgAAAA== 1 \"_size\" 1 1 3 \"imageInrangeMin\" Int 2 1 AAAAAAAAAAA= \"imageInrangeMax\" Int 2 1 AAAAAAAAAAA= \"_arraySize\" Int 1 1 AAAAAA=="
  kernelSource "kernel MedianKernel : public ImageComputationKernel<eComponentWise> \{\n   Image<eRead, eAccessRanged2D, eEdgeClamped> imageIn;\n   Image<eWrite, eAccessPoint> imageOut;\n   param:\n     int _size;\n   local:\n     int _arraySize;\n\n   void define() \{\n     defineParam(_size, \"Size\", 2);\n   \}\n\n   void init() \{\n     imageIn.setRange(-_size, -_size, _size, _size);\n     _arraySize = (_size*2+1)*(_size*2+1);\n   \}\n\n   void process(int2 pos) \{\n    float vals\[289];//sadly, need to be a constant, 121 correspond to a size of 5 (11x11)\n    for (int j = -_size, index = 0; j <= _size; j++) \{\n       for (int i = -_size; i <= _size; i++, index++) \{\n          vals\[index] = imageIn(i, j);\n       \}\n     \} //The median function takes an array of floating-point values and an array length.\n     imageOut() = median(vals,_arraySize);\n   \}\n\};"
  rebuild ""
  MedianKernel_Size {{"max(min(Size_button, 6),0)"}}
  rebuild_finalise ""
  name BlinkScript1
  xpos -858
  ypos 536
  disable {{1-parent.Switch1.which}}
  addUserKnob {20 User}
  addUserKnob {7 Size_button R 0 6}
  Size_button 3
 }
 Dot {
  name Dot1
  note_font_size 40
  xpos -824
  ypos 639
 }
push $N8b7194f0
 Blur {
  channels {rgba.red rgba.green rgba.blue none}
  size {{parent.Blur14.size}}
  name Blur13
  xpos -714
  ypos 499
 }
 Switch {
  inputs 2
  which {{parent.Use_Blink}}
  name Switch1
  xpos -714
  ypos 635
 }
 Blur {
  channels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  size {{parent.Blur7.size}}
  quality 7
  name Blur6
  xpos -714
  ypos 697
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge8
  xpos -714
  ypos 772
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge11
  xpos -714
  ypos 836
 }
 Keymix {
  inputs 3
  name Keymix1
  xpos -714
  ypos 1134
 }
 Dot {
  name Dot19
  note_font_size 40
  xpos -680
  ypos 1180
 }
set N87b1a830 [stack 0]
 Dot {
  name Dot12
  note_font_size 40
  xpos -811
  ypos 1180
 }
 Clamp {
  channels alpha
  name Clamp1
  xpos -845
  ypos 1301
 }
push $N8d91e910
 Dot {
  name Dot3
  note_font_size 40
  xpos -253
  ypos 1263
 }
set N8ce12970 [stack 0]
push $N87b1a830
 Shuffle {
  alpha black
  name Shuffle1
  xpos -714
  ypos 1208
 }
 ChannelMerge {
  inputs 2
  bbox B
  name ChannelMerge1
  xpos -714
  ypos 1247
 }
 Switch {
  inputs 2
  which {{parent.Process_alpha}}
  name SwitchProcess_alpha
  xpos -714
  ypos 1307
 }
set N8131d4d0 [stack 0]
push $N8ce12970
 Dot {
  name Dot24
  note_font_size 40
  xpos -253
  ypos 1562
 }
set N8151f680 [stack 0]
 Merge2 {
  inputs 2
  operation divide
  name Merge5
  xpos -714
  ypos 1558
 }
set N8171de90 [stack 0]
 Grade {
  gamma {{parent.BlackIntensity} {parent.BlackIntensity} {parent.BlackIntensity} {parent.BlackIntensity}}
  reverse true
  black_clamp false
  name Grade2
  xpos -775
  ypos 1592
 }
 Clamp {
  minimum -100
  name Clamp3
  xpos -775
  ypos 1661
 }
push $N8171de90
 Grade {
  gamma {{parent.WhiteIntensity}}
  reverse true
  black_clamp false
  name Grade1
  xpos -650
  ypos 1597
 }
 Clamp {
  minimum 1
  maximum 100
  name Clamp2
  xpos -650
  ypos 1667
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge7
  xpos -700
  ypos 1731
 }
push $N8151f680
 Dot {
  name Dot23
  note_font_size 40
  xpos -253
  ypos 1834
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge6
  xpos -700
  ypos 1830
 }
set N8c51c840 [stack 0]
 Colorspace {
  name Colorspace_OUT
  xpos -700
  ypos 1911
 }
 Output {
  name Output1
  xpos -700
  ypos 2030
 }
push $N8131d4d0
push $N8c51c840
 Viewer {
  inputs 2
  frame_range 1001-1091
  viewerProcess "Rodeo look (Rec709)"
  name Viewer1
  xpos -536
  ypos 1765
 }
end_group
